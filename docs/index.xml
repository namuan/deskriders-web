<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deskriders</title>
    <link>/</link>
    <description>Recent content on deskriders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Feb 2020 08:00:21 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Http Rider :: Cross-Platform Open Source Desktop API Client</title>
      <link>/projects/http-rider/</link>
      <pubDate>Sun, 01 Dec 2019 12:21:06 +0000</pubDate>
      
      <guid>/projects/http-rider/</guid>
      <description>HttpRider is a cross-platfom open souce desktop API client built using Python and PyQt. It is a lean alternative to Postman and other tools developed using Electron.
Downloads Downloads are currently available for MacOS and Windows from the following page.
https://www.httprider.com/docs/getting-started/installation/
Features: 🚀 Open source and Cross-Platform
🚀 Lean and Faster than Java/Electron alternatives
🚀 OpenAPI V3 exporter: You can export to OpenAPI v3 including the request/response schema which is lacking in other clients.</description>
    </item>
    
    <item>
      <title>Mindbooks :: Thought Provoking Books</title>
      <link>/projects/mind-books-club/</link>
      <pubDate>Fri, 31 Jan 2020 15:27:38 +0000</pubDate>
      
      <guid>/projects/mind-books-club/</guid>
      <description>👉 https://mindbooks.club</description>
    </item>
    
    <item>
      <title>Kube Rider :: Desktop Kubernetes Client</title>
      <link>/projects/kube-rider/</link>
      <pubDate>Sun, 13 Oct 2019 08:46:20 +0000</pubDate>
      
      <guid>/projects/kube-rider/</guid>
      <description>KubeRider is a simple desktop client for working with Kubernetes. It is a wrapper over kubectl which means you don&#39;t have to remember CLI options and arguments.
Features: 🚀 Uses kubectl so no extra configuration required
🚀 Display kubectl commands for learning
🚀 Context and Namespace switching
🚀 Pod list and watching
🚀 Create/Delete Pods
🚀 List Pod containers and Events
🚀 Open container logs
🚀 Running commands in container</description>
    </item>
    
    <item>
      <title>Dev Rider :: Development Tools/Utilities In One Place</title>
      <link>/projects/dev-rider/</link>
      <pubDate>Fri, 17 Jan 2020 08:46:26 +0000</pubDate>
      
      <guid>/projects/dev-rider/</guid>
      <description>There is a serious problem with the state of simple development tools on the internet. Most of the websites providing simple encoders/decoders/formatters/prettifiers are filled with ads and popups 😷 which makes it difficult and risky to use. And then there is also a huge problem with privacy 👀 and leaking any private data that is used on any of these websites.
DevRider is an attempt to provide a desktop tool which includes a shell and addins for various utilities.</description>
    </item>
    
    <item>
      <title>Tube Stats :: Export Youtube Comments</title>
      <link>/projects/tube-stats/</link>
      <pubDate>Tue, 25 Dec 2018 09:27:30 +0000</pubDate>
      
      <guid>/projects/tube-stats/</guid>
      <description>Completely serverless e-commerce service built using Python, Serverless Framework and DynamoDB and deployed on AWS Platform.
👉 TubeStats.</description>
    </item>
    
    <item>
      <title>Docker Files :: Dockerfile(s) for NodeJS, Python, Java, Ruby etc</title>
      <link>/projects/docker-files/</link>
      <pubDate>Fri, 18 Jan 2019 09:27:38 +0000</pubDate>
      
      <guid>/projects/docker-files/</guid>
      <description>👉 docker-files</description>
    </item>
    
    <item>
      <title>Tooltip # 5 :: Converting CSV to JSON using csvkit</title>
      <link>/posts/017-tooltip-5-converting-csv-to-json/</link>
      <pubDate>Sat, 01 Feb 2020 08:00:21 +0000</pubDate>
      
      <guid>/posts/017-tooltip-5-converting-csv-to-json/</guid>
      <description>In this short clip, we&#39;ll look at using csvjson utility from csvkit to convert CSV to JSON.
Requirements:  csvkit: https://csvkit.readthedocs.io/en/latest/  (sudo) pip install csvkit    📝:
👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux</description>
    </item>
    
    <item>
      <title>Tooltip # 4 :: Converting JSON to CSV using csvkit</title>
      <link>/posts/016-tooltip-4-converting-json-to-csv/</link>
      <pubDate>Fri, 31 Jan 2020 08:00:06 +0000</pubDate>
      
      <guid>/posts/016-tooltip-4-converting-json-to-csv/</guid>
      <description>In this short clip, we&#39;ll look at using in2sec utility from csvkit to convert JSON to CSV.
Requirements:  csvkit: https://csvkit.readthedocs.io/en/latest/  (sudo) pip install csvkit    📝:
👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux
👉 Used http://next.json-generator.com to generate JSON document</description>
    </item>
    
    <item>
      <title>Tooltip # 3 :: Reading files line by line on command line</title>
      <link>/posts/015-tooltip-3-reading-file-line-by-line/</link>
      <pubDate>Thu, 30 Jan 2020 09:24:27 +0000</pubDate>
      
      <guid>/posts/015-tooltip-3-reading-file-line-by-line/</guid>
      <description>In this short clip, we&#39;ll look at using for and while loop to process each line in a file.
  📝:
👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux</description>
    </item>
    
    <item>
      <title>Tooltip # 2 :: Simple Maths on command line using bc</title>
      <link>/posts/014-tooltip-2-simple-maths-bc/</link>
      <pubDate>Wed, 29 Jan 2020 08:38:45 +0000</pubDate>
      
      <guid>/posts/014-tooltip-2-simple-maths-bc/</guid>
      <description>In this short clip, we&#39;ll look at using a simple command line tool bc to basic maths.
  Notes 📝:
👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux
References:
⎘ https://fedoramagazine.org/bc-command-line-calculator/</description>
    </item>
    
    <item>
      <title>Week 05 2020</title>
      <link>/notes/2020-01-27-week-05/</link>
      <pubDate>Tue, 28 Jan 2020 19:08:56 +0000</pubDate>
      
      <guid>/notes/2020-01-27-week-05/</guid>
      <description>Python : Python one liner to extract and transform Spring HttpStatus enums Raw  curl -s https://raw.githubusercontent.com/spring-projects/spring-framework/master/spring-web/src/main/java/org/springframework/http/HttpStatus.java | \ grep &amp;#39;\&amp;#34;.*),&amp;#39; | \ while read line; \ do echo $line | python -c &amp;#39;import re,sys; s, c, m = re.search(&amp;#34;([\w\_]+)\((\d+),\s+\&amp;#34;([\w\s]+)&amp;#34;, sys.stdin.readline()).groups(); print(&amp;#34;{}: (\&amp;#34;HttpStatus.{}\&amp;#34;, \&amp;#34;{}\&amp;#34;),&amp;#34;.format(c, s, m))&amp;#39;; \ done  Python: Find words in a sentence  source = &amp;#39;The quick brown fox jumps over the lazy dog&amp;#39; import re print(re.</description>
    </item>
    
    <item>
      <title>Tooltip # 1 :: Creating command line launcher for IntelliJ products</title>
      <link>/posts/013-tooltip-1-creating-intellij-launcher/</link>
      <pubDate>Tue, 28 Jan 2020 16:38:45 +0000</pubDate>
      
      <guid>/posts/013-tooltip-1-creating-intellij-launcher/</guid>
      <description>This is hopefully first of many (tool)tips where I create a very short ( ~ 30sec -&amp;gt; 1min) video 📹covering a specific task.
In this first video, we&#39;ll look at creating a command line launcher for IntelliJ. Although this is created using IntelliJ IDEA but the same option should be available in WebStorm, PhpStorm, PyCharm etc.
  </description>
    </item>
    
    <item>
      <title>A Simple setup to remember one-liners/code snippets</title>
      <link>/posts/012-keeping-snippets/</link>
      <pubDate>Mon, 27 Jan 2020 10:13:04 +0000</pubDate>
      
      <guid>/posts/012-keeping-snippets/</guid>
      <description>Here is a simple setup explaining a comment I made on Reddit.
All I have is a notes.txt under my home directory where the snippets (one-liners) are stored in the following format. Note that I don&#39;t store block of code or longer text here as they&#39;ll become difficult to search.
find . -type f -name &amp;#39;*.txt&amp;#39; -exec sed -i &amp;#39;&amp;#39; s/this/that/g {} + # search and replace sed find It starts with the command then # and a brief comment on what it does.</description>
    </item>
    
    <item>
      <title>January Releases for Deskrider Tools</title>
      <link>/posts/011-deskrider-january-releases/</link>
      <pubDate>Sun, 26 Jan 2020 17:21:38 +0000</pubDate>
      
      <guid>/posts/011-deskrider-january-releases/</guid>
      <description>Here are the January releases for HttpRider and DeskRider.
HttpRider MacOS
Download for Mac
Windows releases are still pending. Looks like I may have to switch to PyInstaller from py2app/py2exe. Hoping to finish it over the coming week.
DevRider MacOS
Download for Mac
Windows
Download for Windows</description>
    </item>
    
    <item>
      <title>Introducing DevRider :: One Desktop App for Common Development Tools</title>
      <link>/posts/010-introducing-devrider/</link>
      <pubDate>Sat, 25 Jan 2020 19:05:42 +0000</pubDate>
      
      <guid>/posts/010-introducing-devrider/</guid>
      <description>There is a serious problem with the state of simple development tools on the internet.
Most of the websites providing simple encoders/decoders/formatters/prettifiers are filled with ads and popups which makes it annoying and risky to use.
And then there is also a huge problem with privacy and leaking any private data that is used on any of these websites.
Although it is impossible to replace them altogether, let me introduce you to DevRider, a new open source to provide some of the common tools in an extensible desktop application.</description>
    </item>
    
    <item>
      <title>Week 04 2020</title>
      <link>/notes/2020-01-20-week-04/</link>
      <pubDate>Mon, 20 Jan 2020 09:45:05 +0000</pubDate>
      
      <guid>/notes/2020-01-20-week-04/</guid>
      <description>Python: One way to handle focusOut event by installing event filter on the widget  # Installing event filter self.parent.txt_scratch_pad.installEventFilter(self.events) # where self.events in a class with a QObject parent class - like ScratchPadEvents 👇 # Then override eventFilter method in that class class ScratchPadEvents(QObject): def __init__(self, parent, app): super().__init__(parent) def eventFilter(self, source: QObject, event: QEvent): if event.type() == QtCore.QEvent.FocusOut: # do something pass return super().eventFilter(source, event)  ImageMagick: Resize a bunch of images using ImageMagick  find .</description>
    </item>
    
    <item>
      <title>Week 03 2020</title>
      <link>/notes/2020-01-13-week-03/</link>
      <pubDate>Sun, 19 Jan 2020 07:17:15 +0000</pubDate>
      
      <guid>/notes/2020-01-13-week-03/</guid>
      <description> Python: How to get a class name from a type  class A: pass a = A() print(a.__class__.__name__) # or print(type(a).__name__)   Hugo: Build with Drafts hugo -D serve
  Python: List sub directories
  tool_codegen_dir: Path = Path(__file__) print([x.name for x in tool_codegen_dir.iterdir() if x.is_dir()])  Java: URLEncoder does form encoding instead of percent encoding - https://stackoverflow.com/questions/4737841/urlencoder-not-able-to-translate-space-character  </description>
    </item>
    
    <item>
      <title>News Rider :: Personalised News</title>
      <link>/projects/news-rider/</link>
      <pubDate>Sat, 18 Jan 2020 09:27:57 +0000</pubDate>
      
      <guid>/projects/news-rider/</guid>
      <description>Personalised News Delivery. Built using Python/Ansible and deployed on DigitalOcean/RaspberryPi
👉 NewsRider</description>
    </item>
    
    <item>
      <title></title>
      <link>/products/</link>
      <pubDate>Wed, 15 Jan 2020 10:32:46 +0000</pubDate>
      
      <guid>/products/</guid>
      <description>HttpRider :: Cross-Platform Open Source Desktop API Client HttpRider is a cross-platfom open souce desktop API client built using Python and PyQt. It is a lean alternative to Postman and other tools developed using Electron.
MindBooks :: Thought provoking books Growing collection of books to open your mind.
DevRider :: Development Tools/Utilities In One Place There is a serious problem with the state of simple development tools on the internet. Most of the websites providing simple encoders/decoders/formatters/prettifiers are filled with ads and popups 😷 which makes it difficult and risky to use.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Wed, 15 Jan 2020 10:32:46 +0000</pubDate>
      
      <guid>/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Developing API exchange sharing service - Part II</title>
      <link>/posts/009-developing-api-exchange-2/</link>
      <pubDate>Fri, 03 Jan 2020 18:51:44 +0000</pubDate>
      
      <guid>/posts/009-developing-api-exchange-2/</guid>
      <description>Please check the previous part to know the background of this project.
In this part, we&#39;ll dive into code and deploy a simple API to AWS Lambda and Api Gateway.
I&#39;ll be using Python Flask framework for defining the APIs and Serverless framework to manage the infrastructure and deployment.
Please make sure you have Python3 and relatively newer version of nodejs installed and working to follow along.
The first step is to create a new project folder and initialise package.</description>
    </item>
    
    <item>
      <title>Overlay button on a PyQt5 widget</title>
      <link>/posts/007-pyqt5-overlay-button-widget/</link>
      <pubDate>Thu, 02 Jan 2020 11:51:10 +0000</pubDate>
      
      <guid>/posts/007-pyqt5-overlay-button-widget/</guid>
      <description>This is a short post on how to add a floating button on top of a widget in PyQt5.
First, we&#39;ll define the button and the relative positioning.
class FloatingButtonWidget(QtWidgets.QPushButton): #1 def __init__(self, parent): super().__init__(parent) self.paddingLeft = 5 self.paddingTop = 5 def update_position(self): if hasattr(self.parent(), &amp;#39;viewport&amp;#39;): parent_rect = self.parent().viewport().rect() else: parent_rect = self.parent().rect() if not parent_rect: return x = parent_rect.width() - self.width() - self.paddingLeft y = self.paddingTop #3 self.setGeometry(x, y, self.</description>
    </item>
    
    <item>
      <title>Developing API exchange sharing service - Part I</title>
      <link>/posts/008-developing-api-exchange-1/</link>
      <pubDate>Wed, 01 Jan 2020 16:51:35 +0000</pubDate>
      
      <guid>/posts/008-developing-api-exchange-1/</guid>
      <description>In this series of articles, I&#39;ll go through my experience of building a simple Serverless API using Flask python framework and deploying it on AWS Lambda and API gateway.
This API is used from HttpRider to save API exchanges (request+response).
Here is a sample page generated from HttpRider.
Demo The service itself consists of two simple APIs.
POST /prints Saves the HTML encoded in base64 in dynamo database. Once it is saved, it returns the URL of the shared document in the Location header of the response.</description>
    </item>
    
    <item>
      <title>Protecting applications with OAuth2 Proxy</title>
      <link>/posts/005-protecting-applications-oauth2-proxy/</link>
      <pubDate>Sat, 23 Nov 2019 10:47:29 +0000</pubDate>
      
      <guid>/posts/005-protecting-applications-oauth2-proxy/</guid>
      <description>Here is a simple guide on protecting a website with social logins supporting OAuth2. It uses an open source OAuth2 Proxy (which is a fork from Bitly OAuth2 Proxy) to secure private applications without adding any authentication logic in the application itself.
Here, we&#39;ll see how to secure the open source version of https://httpbin.org. Httpbin application itself is open and can be accessed without any authentication.
In this guide, we will setup a Github OAuth application but the same setup can be easily configured with any other provider.</description>
    </item>
    
    <item>
      <title>Performance testing with HttpRider</title>
      <link>/posts/004-httprider-performance-testing/</link>
      <pubDate>Sat, 16 Nov 2019 16:24:01 +0000</pubDate>
      
      <guid>/posts/004-httprider-performance-testing/</guid>
      <description>The title is a bit misleading as HttpRider can&#39;t run performance tests (as of now), however it can be used to generate performance tests using a couple of different approach.
Slow cooker: SlowCooker is a command line tool for load testing. Here is an excellent blog post about the background and difference from other similar tools.
Generating code to run slow cooker is as simple as selecting an API call and click on the export button to generate code.</description>
    </item>
    
    <item>
      <title>Generating BDD tests with HttpRider</title>
      <link>/posts/003-httprider-generating-bdd-tests/</link>
      <pubDate>Mon, 28 Oct 2019 11:30:47 +0000</pubDate>
      
      <guid>/posts/003-httprider-generating-bdd-tests/</guid>
      <description>In this post, we&#39;ll see how we can easily generate BDD tests with HttpRider.
Instead of writing the code behind the REST api calls, we&#39;ll use an open source framework called Apickli to do the heavy lifting. Apickli is based on cucumber.js and defines a number of pre-built Gherkin expressions.
I&#39;ve also created a sample project using Apicki framework to make it easy to get it up and running.
Let&#39;s start with a few API calls using the sample database provided with source.</description>
    </item>
    
    <item>
      <title>Generating Runscope monitoring tests with HttpRider</title>
      <link>/posts/002-httprider-generating-runscope-monitoring-tests/</link>
      <pubDate>Sun, 27 Oct 2019 11:30:15 +0000</pubDate>
      
      <guid>/posts/002-httprider-generating-runscope-monitoring-tests/</guid>
      <description>Runscope (Now Part of BlazeMeter) is a well known service for API Monitoring. This post covers generating Runscope monitoring tests from HttpRider.
We start with API definitions in HttpRider, make sure you run them at least once as some of the exporters use the data from the response.
Along with API definitions, it also generates Runscope environments with placeholders for any variables used from environment.
Once the tests have successfully finished, click on the export/export all button to display the code generator.</description>
    </item>
    
    <item>
      <title>Generating sequence diagrams with HttpRider</title>
      <link>/posts/001-httprider-generating-sequence-diagrams/</link>
      <pubDate>Sun, 13 Oct 2019 07:45:14 +0000</pubDate>
      
      <guid>/posts/001-httprider-generating-sequence-diagrams/</guid>
      <description>Most tools consider an HTTP API call as a single request but that is not usually the case. An API call is surrounded by a sequence of other APIs which makes it easy to understand the context of the use case.
In HttpRider, I&#39;ve recently introduced an exporter for sequence diagrams. So a collection of HTTP calls can be easily exported to sequence diagrams using PlantUML/MermaidJS.
 HttpRider is an open source cross platform desktop client for working with JSON APIs</description>
    </item>
    
    <item>
      <title>KubeRider :: Bundling MacOS release</title>
      <link>/posts/006-kuberider-bundling-macosx-release/</link>
      <pubDate>Mon, 26 Aug 2019 08:32:55 +0000</pubDate>
      
      <guid>/posts/006-kuberider-bundling-macosx-release/</guid>
      <description>In this post, I&#39;ll go through what is involved in building a MacOS release package and publishing it on Github from TravisCI.
Step 1: Application Icon Although it is probably quicker to find/generate a logo from an online service. I decided to create a simple logo to go through the process of creating and converting it in vector drawing.
Here is what I ended up using the Paper app on iPad.</description>
    </item>
    
    <item>
      <title>Docker Compose Builder :: Create Docker Compose File Like A Pro</title>
      <link>/projects/docker-compose-builder/</link>
      <pubDate>Fri, 01 Feb 2019 09:27:44 +0000</pubDate>
      
      <guid>/projects/docker-compose-builder/</guid>
      <description>👉 DockerComposeBuilder.</description>
    </item>
    
  </channel>
</rss>