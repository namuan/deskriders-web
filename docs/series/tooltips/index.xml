<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tooltips on deskriders</title>
    <link>/series/tooltips/</link>
    <description>Recent content in Tooltips on deskriders</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 12 Dec 2021 12:13:25 +0000</lastBuildDate>
    <atom:link href="/series/tooltips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wiremock: How to match multiple urls in a single mapping</title>
      <link>/posts/1639311183-wiremock-match-multiple-urls/</link>
      <pubDate>Sun, 12 Dec 2021 12:13:25 +0000</pubDate>
      <guid>/posts/1639311183-wiremock-match-multiple-urls/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://wiremock.org/&#34;&gt;Wiremock&lt;/a&gt; is a tool to mock HTTP APIs.&#xA;You can set up Stubs in Wiremock by using their API or by calling the admin API over HTTP.&#xA;Usually it is used as part of a test suite but here I&amp;rsquo;m running the &lt;a href=&#34;http://wiremock.org/docs/running-standalone/&#34;&gt;standalone&lt;/a&gt; Wiremock server.&lt;/p&gt;&#xA;&lt;p&gt;Once the jar file is downloaded, you can start the server by running the following command:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -jar wiremock-jre8-standalone-2.32.0.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we are setting multiple URLs to match in a single mapping.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Export Reading list from Safari</title>
      <link>/posts/1638735561-safari-export-bookmarks/</link>
      <pubDate>Sun, 05 Dec 2021 20:19:36 +0000</pubDate>
      <guid>/posts/1638735561-safari-export-bookmarks/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;open ~/Library/Safari&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Copy the Safari bookmarks file to your desktop.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;/images/1638735561-safari-export-bookmarks.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Then run the following command to get the list of links&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;plutil -convert xml1 -o - Bookmarks.plist | grep -E  -o &amp;#39;&amp;lt;string&amp;gt;http[s]{0,1}://.*&amp;lt;/string&amp;gt;&amp;#39; | grep -v icloud | sed -E &amp;#39;s/&amp;lt;\/{0,1}string&amp;gt;//g&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://apple.stackexchange.com/questions/24864/is-it-possible-to-export-safaris-reading-list-on-safari-5-1#62431&#34;&gt;https://apple.stackexchange.com/questions/24864/is-it-possible-to-export-safaris-reading-list-on-safari-5-1#62431&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 15: Bash/Zsh function to export SVG diagrams using PlantUML</title>
      <link>/posts/1591343684-plantuml-svg-export/</link>
      <pubDate>Fri, 05 Jun 2020 07:47:18 +0000</pubDate>
      <guid>/posts/1591343684-plantuml-svg-export/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at creating a simple Bash/Zsh function to export SVG diagrams using PlantUML.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PlantUML: &lt;a href=&#34;http://sourceforge.net/projects/plantuml/files/plantuml.jar/download&#34;&gt;Direct Download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Place it where you can easily refer to it.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nmn$ ls -l $TOOLS_HOME/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--@ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nmn  staff  &lt;span style=&#34;color:#ae81ff&#34;&gt;7985304&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; Nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; /Users/nmn/tools/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we&amp;rsquo;ll create a function and put that in bash/zsh profile so that it can be loaded automatically on each session.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plantsvg&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cat &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; | java -DPLANTUML_LIMIT_SIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; -jar $TOOLS_HOME/plantuml/plantuml.jar -tsvg -pipe &amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.svg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    open -a Firefox.app &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.svg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have it setup, this will export the provided plantuml file to an SVG image and open it up using Firefox.&#xA;You can change the application used to open this SVG by replacing &lt;code&gt;Firefox.app&lt;/code&gt; with the another application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 14: Handy Bash/Zsh function to generate PlantUML diagrams</title>
      <link>/posts/1591301414-plantuml-shortcut/</link>
      <pubDate>Thu, 04 Jun 2020 22:11:58 +0000</pubDate>
      <guid>/posts/1591301414-plantuml-shortcut/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at creating a simple Bash/Zsh function wrapping PlantUML so that we can use it from anywhere.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PlantUML: &lt;a href=&#34;http://sourceforge.net/projects/plantuml/files/plantuml.jar/download&#34;&gt;Direct Download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Download it where you can easily refer to it.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nmn$ ls -l $TOOLS_HOME/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--@ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nmn  staff  &lt;span style=&#34;color:#ae81ff&#34;&gt;7985304&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; Nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; /Users/nmn/tools/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we&amp;rsquo;ll create a function and put that in bash/zsh profile so that it can be loaded automatically on each session.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plantuml&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cat $NAME | java -DPLANTUML_LIMIT_SIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; -jar $TOOLS_HOME/plantuml/plantuml.jar -pipe &amp;gt; $NAME.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    open $NAME.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you can call this function with the file name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 13: Using command line functions to simplify find command</title>
      <link>/posts/026-tooltip-13-cli-functions-find/</link>
      <pubDate>Sun, 16 Feb 2020 08:06:04 +0000</pubDate>
      <guid>/posts/026-tooltip-13-cli-functions-find/</guid>
      <description>&lt;p&gt;In this tooltip, we&amp;rsquo;ll create a simple function to find files in the current directory tree using find.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/M9OQjZ5xFYw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 12 : Using svgo to optimize SVG files</title>
      <link>/posts/025-tooltip-12-svgo-optimize-svg-files/</link>
      <pubDate>Mon, 10 Feb 2020 08:06:04 +0000</pubDate>
      <guid>/posts/025-tooltip-12-svgo-optimize-svg-files/</guid>
      <description>&lt;p&gt;In this short video, we&amp;rsquo;ll use &amp;lsquo;svgo&amp;rsquo; tool to optimise SVG files. In this case, it reduces the SVG size by almost 50%.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/oBcz2M6gXQ4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;br&gt;&#xA;👉 Github: &lt;a href=&#34;https://github.com/svg/svgo&#34;&gt;https://github.com/svg/svgo&lt;/a&gt;&lt;br&gt;&#xA;👉 NPM: &lt;a href=&#34;https://npmjs.org/package/svgo&#34;&gt;https://npmjs.org/package/svgo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 11 : Using lsof to list all open ports and process identifiers</title>
      <link>/posts/024-tooltip-11-lsof-open-ports-pids/</link>
      <pubDate>Fri, 07 Feb 2020 08:06:04 +0000</pubDate>
      <guid>/posts/024-tooltip-11-lsof-open-ports-pids/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at &amp;rsquo;lsof&amp;rsquo;, a simple tool on MacOS to list all open ports and get their process identifiers.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/WoPZu9_RQe0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&#xA;👉 ManPage: &lt;a href=&#34;https://linux.die.net/man/8/lsof&#34;&gt;https://linux.die.net/man/8/lsof&lt;/a&gt;&#xA;👉 Reference to other commands: &lt;a href=&#34;https://www.howtoforge.com/linux-lsof-command/&#34;&gt;https://www.howtoforge.com/linux-lsof-command/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 10 : Using seq to generate padded numbers</title>
      <link>/posts/023-tooltip-10-seq-padded-numbers/</link>
      <pubDate>Thu, 06 Feb 2020 08:06:04 +0000</pubDate>
      <guid>/posts/023-tooltip-10-seq-padded-numbers/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll use &amp;lsquo;seq&amp;rsquo; command line tool to generate padded numbers.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/fsjUghQCLoY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 9 : Combining JSON attributes using jq</title>
      <link>/posts/021-tooltip-9-constructing-new-structure-jq/</link>
      <pubDate>Wed, 05 Feb 2020 08:06:04 +0000</pubDate>
      <guid>/posts/021-tooltip-9-constructing-new-structure-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll continue looking at jq to combine (first name and last name) attributes of a JSON object and then build a new attribute (full name).&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/mjGh5gjJtqo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 8 : Extracting Array Item using jq</title>
      <link>/posts/020-tooltip-8-extracting-items-contains-jq/</link>
      <pubDate>Tue, 04 Feb 2020 08:05:44 +0000</pubDate>
      <guid>/posts/020-tooltip-8-extracting-items-contains-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll continue looking at jq to extract a nested array item along with using the &amp;lsquo;contains&amp;rsquo; function to partially match an attribute value.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/OR88RAyiTiE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 7: Selecting nested array items using jq</title>
      <link>/posts/019-tooltip-7-selecting-nested-array-items-jq/</link>
      <pubDate>Mon, 03 Feb 2020 08:05:07 +0000</pubDate>
      <guid>/posts/019-tooltip-7-selecting-nested-array-items-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll further into jq syntax and selecting nested items using jq filtering.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/jAuMRjBDAMo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;👉 Although &lt;code&gt;jq&lt;/code&gt; is really powerful but watch out for over using it. It is probably more easier to achieve the same thing in a proper language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 6 :: Filtering JSON arrays with jq</title>
      <link>/posts/018-tooltip-6-filtering-json-arrays-jq/</link>
      <pubDate>Sun, 02 Feb 2020 07:45:25 +0000</pubDate>
      <guid>/posts/018-tooltip-6-filtering-json-arrays-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;jq&lt;/code&gt; to filter JSON arrays.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/_rNmyYkZdUc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;👉 Although &lt;code&gt;jq&lt;/code&gt; is really powerful but watch out for over using it. It is probably more easier to achieve the same thing in a proper language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 5 :: Converting CSV to JSON using csvkit</title>
      <link>/posts/017-tooltip-5-converting-csv-to-json/</link>
      <pubDate>Sat, 01 Feb 2020 08:00:21 +0000</pubDate>
      <guid>/posts/017-tooltip-5-converting-csv-to-json/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;csvjson&lt;/code&gt; utility from &lt;code&gt;csvkit&lt;/code&gt; to convert CSV to JSON.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;csvkit: &lt;a href=&#34;https://csvkit.readthedocs.io/en/latest/&#34;&gt;https://csvkit.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(sudo) pip install csvkit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/OQLJyefim4o?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 4 :: Converting JSON to CSV using csvkit</title>
      <link>/posts/016-tooltip-4-converting-json-to-csv/</link>
      <pubDate>Fri, 31 Jan 2020 08:00:06 +0000</pubDate>
      <guid>/posts/016-tooltip-4-converting-json-to-csv/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;in2sec&lt;/code&gt; utility from &lt;code&gt;csvkit&lt;/code&gt; to convert JSON to CSV.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;csvkit: &lt;a href=&#34;https://csvkit.readthedocs.io/en/latest/&#34;&gt;https://csvkit.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(sudo) pip install csvkit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/QXhhKyIi900?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;👉 Used &lt;a href=&#34;http://next.json-generator.com&#34;&gt;http://next.json-generator.com&lt;/a&gt; to generate JSON document&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 3 :: Reading files line by line on command line</title>
      <link>/posts/015-tooltip-3-reading-file-line-by-line/</link>
      <pubDate>Thu, 30 Jan 2020 09:24:27 +0000</pubDate>
      <guid>/posts/015-tooltip-3-reading-file-line-by-line/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; loop to process each line in a file.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/qrn3ZoKjuV4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 2 :: Simple Maths on command line using bc</title>
      <link>/posts/014-tooltip-2-simple-maths-bc/</link>
      <pubDate>Wed, 29 Jan 2020 08:38:45 +0000</pubDate>
      <guid>/posts/014-tooltip-2-simple-maths-bc/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using a simple command line tool &lt;code&gt;bc&lt;/code&gt; to basic maths.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/BVONg7wezLg?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;Notes 📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;References:&lt;/p&gt;&#xA;&lt;p&gt;⎘ &lt;a href=&#34;https://fedoramagazine.org/bc-command-line-calculator/&#34;&gt;https://fedoramagazine.org/bc-command-line-calculator/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 1 :: Creating command line launcher for IntelliJ products</title>
      <link>/posts/013-tooltip-1-creating-intellij-launcher/</link>
      <pubDate>Tue, 28 Jan 2020 16:38:45 +0000</pubDate>
      <guid>/posts/013-tooltip-1-creating-intellij-launcher/</guid>
      <description>&lt;p&gt;This is hopefully first of many (tool)tips where I create a very short ( ~ 30sec -&amp;gt; 1min) video 📹covering a specific task.&lt;/p&gt;&#xA;&lt;p&gt;In this first video, we&amp;rsquo;ll look at creating a command line launcher for IntelliJ.&#xA;Although this is created using IntelliJ IDEA but the same option should be available in WebStorm, PhpStorm, PyCharm etc.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/gOb_3MK8Y7k?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;</description>
    </item>
  </channel>
</rss>
