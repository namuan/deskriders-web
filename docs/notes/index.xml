<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes on deskriders</title>
    <link>/notes/</link>
    <description>Recent content in Notes on deskriders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Dec 2021 15:46:00 +0000</lastBuildDate>
    
	<atom:link href="/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Language</title>
      <link>/notes/golang/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      
      <guid>/notes/golang/</guid>
      <description>Notes  Go: Qt Binding https://github.com/therecipe/qt  </description>
    </item>
    
    <item>
      <title>Java/JVM</title>
      <link>/notes/java/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      
      <guid>/notes/java/</guid>
      <description>Notes   Java: URLEncoder does form encoding instead of percent encoding - https://stackoverflow.com/questions/4737841/urlencoder-not-able-to-translate-space-character
  Java: Initialise a CharArray from a String
  private String reservedCharacter = &amp;#34;!#$%&amp;amp;&amp;#39;()*+,/:;=?@[]&amp;#34;; private char[] chars = reservedCharacter.toCharArray();  Java/JUnit5 : Parameterized testing with JUnit 5  @ParameterizedTest(name = &amp;#34;{0} should be \&amp;#34;{1}\&amp;#34;&amp;#34;) @CsvSource({ &amp;#34;http://www.example.com, http%3A%2F%2Fwww.example.com&amp;#34;, &amp;#34;?query=123, %3Fquery%3D123&amp;#34; }) public void testPercentEncodeAsciiString(String source, String expected) { // when  String result = PercentEncoding.encode(source); // then  assertEquals(expected, result); }  Java: Generating a mvn wrapper  $ mvn -N io.</description>
    </item>
    
    <item>
      <title>Mac (Apps/Tools/Tips and Tricks)</title>
      <link>/notes/mac/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      
      <guid>/notes/mac/</guid>
      <description>Apps Screen Drawing Found quickdraw which is an app for drawing over the screen. Unfortunately, it doesn&amp;rsquo;t seem to provide any packages, and I&amp;rsquo;m unable to build it locally. A similar application which is quite good is Pensela.
Command Line Tools  ImageMagick Resize a bunch of images using ImageMagick__  find ./static -name &amp;#39;*.png&amp;#39; | while read line; do convert -resize 1280x1280 $line $line; done  jq: Length of array  $ echo &amp;#39;[&amp;#34;123&amp;#34;, &amp;#34;567&amp;#34;, &amp;#34;abc&amp;#34;]&amp;#39; | jq &amp;#39;.</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>/notes/python/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      
      <guid>/notes/python/</guid>
      <description>Notes  Python: How to get a class name from a type  class A: pass a = A() print(a.__class__.__name__) # or print(type(a).__name__)  Python: List sub directories  tool_codegen_dir: Path = Path(__file__) print([x.name for x in tool_codegen_dir.iterdir() if x.is_dir()])  Python/PyQt: One way to handle focusOut event by installing event filter on the widget  # Installing event filter self.parent.txt_scratch_pad.installEventFilter(self.events) # where self.events in a class with a QObject parent class - like ScratchPadEvents ðŸ‘‡ # Then override eventFilter method in that class class ScratchPadEvents(QObject): def __init__(self, parent, app): super().</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>/notes/testing/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      
      <guid>/notes/testing/</guid>
      <description>Tools webium
 Webium is a Page Object pattern implementation library for Python (http://martinfowler.com/bliki/PageObject.html). It allows you to extend WebElement class to your custom controls like Link, Button and group them as pages.
 Notes </description>
    </item>
    
    <item>
      <title>Random learning notes</title>
      <link>/notes/random-learning/</link>
      <pubDate>Mon, 20 Jan 2020 09:45:05 +0000</pubDate>
      
      <guid>/notes/random-learning/</guid>
      <description>Websites  Simple but very useful website to format Markdown tables -&amp;gt; http://markdowntable.com  Notes  URI Encoding: How : becomes %3A using Percent Encoding  We start with finding the ASCII value of : which is 58. See ASCII table
Convert 58 to binary using Short division by Two with Reminder. i.e. Divide the answer by 2 and keeping the reminder which will be the binary form.
58/2 = 29 =&amp;gt; Reminder 0 29/2 = 14 =&amp;gt; Reminder 1 14/2 = 7 =&amp;gt; Reminder 0 7/2 = 3 =&amp;gt; Reminder 1 3/2 = 1 =&amp;gt; Reminder 1 1/2 = na =&amp;gt; Reminder 1 So the binary form is 111010 if we line up all the reminders Padding the output will make it 00111010.</description>
    </item>
    
  </channel>
</rss>