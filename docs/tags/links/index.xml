<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Links on deskriders</title>
    <link>/tags/links/</link>
    <description>Recent content in Links on deskriders</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Feb 2025 18:00:25 +0000</lastBuildDate>
    <atom:link href="/tags/links/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Link List :: 2025-02-16</title>
      <link>/posts/1739728778-linklist-2025-02-16/</link>
      <pubDate>Sun, 16 Feb 2025 18:00:25 +0000</pubDate>
      <guid>/posts/1739728778-linklist-2025-02-16/</guid>
      <description>&lt;h2 id=&#34;httpswwwrunpulsecomblogwhy-llms-suck-at-ocr&#34;&gt;&lt;a href=&#34;https://www.runpulse.com/blog/why-llms-suck-at-ocr&#34;&gt;https://www.runpulse.com/blog/why-llms-suck-at-ocr&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We believed LLMs could solve data extraction by plugging in the latest models.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;However, we found that their probabilistic approach favors common words over exact transcription.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LMMs suck at complex OCR because they are excellent for text-generation or summarization tasks but falter at precise character recognition.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Their probabilistic nature causes fatal errors in OCR tasks due to lossy transformations and blindspots.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*I. How Do LLMs “See” and Process Images?*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LLMs process images through high-dimensional embeddings prioritizing semantic understanding over precise character recognition.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The attention mechanism splits images into fixed-size patches, losing fine-grained spatial relationships and critical information about data relationships.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LMMs struggle with complex 2D relationships like table structure recognition and extraction.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*II. Real-World Failures and Hidden Risks*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LMMs fail in catastrophic ways for business-critical applications in industries like legal and healthcare.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Failures include financial and medical data corruption, equation solving problems, and prompt injection + ethical vulnerabilities.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;httpsgithubcomms-jpqsad&#34;&gt;&lt;a href=&#34;https://github.com/ms-jpq/sad&#34;&gt;https://github.com/ms-jpq/sad&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Space Age sed is a Batch File Edit tool that shows a nice diff of proposed changes before committing them, allowing double-checking of edits.&lt;/li&gt;&#xA;&lt;li&gt;Unlike sed, this tool enables selective replacement and choosing the clustering factor for changes using &amp;ndash;unified=&lt;!-- raw HTML omitted --&gt;.&lt;/li&gt;&#xA;&lt;li&gt;It can display side-by-side changes using delta if installed.&lt;/li&gt;&#xA;&lt;li&gt;To replace all occurrences of a pattern with another in a repository, use &lt;code&gt;find &amp;quot;$FIND_ARGS&amp;quot; | sad &#39;&amp;lt;pattern&amp;gt;&#39; &#39;&amp;lt;replacement&amp;gt;&#39;&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsoldredditcomrlocalllamacomments1im35ylhow_to_scale_rag_to_20_million_documents&#34;&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1im35yl/how_to_scale_rag_to_20_million_documents/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1im35yl/how_to_scale_rag_to_20_million_documents/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Popular vector databases for scaling RAG include Weaviate, PGVector, Pinecone, and Qdrant, with hybrid RAG techniques mentioned for optimization.&lt;/li&gt;&#xA;&lt;li&gt;ParadeDB (Postgres + pg_vector) and LanceDB are suggested for scalability and hybrid search.&lt;/li&gt;&#xA;&lt;li&gt;GraphRAG/LightRAG approaches can be used but are computationally expensive due to graph-based complexity.&lt;/li&gt;&#xA;&lt;li&gt;Horizontal scaling is supported by modern vector DBs through sharding and replication, though graph traversal slows down as data grows.&lt;/li&gt;&#xA;&lt;li&gt;Embedding models like stella_en_400M_v5 are recommended, with binary embeddings (quantized vectors) suggested to reduce storage and improve performance.&lt;/li&gt;&#xA;&lt;li&gt;HNSW indexing is a popular choice, while alternatives like IVF or IVF-PQ can improve performance through cluster-based indexing.&lt;/li&gt;&#xA;&lt;li&gt;Sparse rerankers like BM25 combined with dense embeddings enable hybrid search for better results.&lt;/li&gt;&#xA;&lt;li&gt;Index creation is more efficient when the index is dropped before ingestion and rebuilt after data ingestion is complete.&lt;/li&gt;&#xA;&lt;li&gt;Chunking strategies, like adaptive window chunking, dynamically adjust chunk sizes based on dataset requirements.&lt;/li&gt;&#xA;&lt;li&gt;Proper chunk overlap is critical to avoid losing context during retrieval.&lt;/li&gt;&#xA;&lt;li&gt;Preprocessing should include metadata extraction, semantic enrichment, and duplicate removal to optimize embeddings and indexing.&lt;/li&gt;&#xA;&lt;li&gt;Efficient pipelines are essential for handling diverse document types such as PDFs, scanned images, and statistical data.&lt;/li&gt;&#xA;&lt;li&gt;Segmenting documents by topic or content type and routing them to appropriate vector DBs improves pipeline efficiency.&lt;/li&gt;&#xA;&lt;li&gt;Middleware layers can compress, deduplicate, and summarize embeddings to optimize data ingestion.&lt;/li&gt;&#xA;&lt;li&gt;Azure AI Search is recommended for enterprise-level ingestion pipelines.&lt;/li&gt;&#xA;&lt;li&gt;Hybrid RAG combines dense vector search and sparse retrieval (e.g., BM25) for improved performance and relevance.&lt;/li&gt;&#xA;&lt;li&gt;Hierarchical RAG methods involve topic-based sorting before diving into chunk-level retrieval.&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch and BM25 are suggested as alternatives to vector DBs for certain domains with better relevance.&lt;/li&gt;&#xA;&lt;li&gt;Fine-tuning models on 20M documents can encode domain-specific knowledge but is more expensive and risks overfitting.&lt;/li&gt;&#xA;&lt;li&gt;RAG is cheaper, faster, and more flexible than fine-tuning and is preferred for large-scale data retrieval.&lt;/li&gt;&#xA;&lt;li&gt;Embedding 20M documents can take significant time but can be parallelized with multiple GPUs, costing between $1,000 and $20,000.&lt;/li&gt;&#xA;&lt;li&gt;Trade-offs between speed, cost, and accuracy can be adjusted by tweaking clustering sizes or chunking strategies.&lt;/li&gt;&#xA;&lt;li&gt;Ensure the dataset is relevant and up-to-date since larger scales do not always yield better results.&lt;/li&gt;&#xA;&lt;li&gt;Vendor solutions like Azure AI Search are helpful but should be used cautiously to avoid vendor lock-in.&lt;/li&gt;&#xA;&lt;li&gt;Iterative testing is necessary to identify the best combination of embeddings, chunking, and retrieval strategies for the specific dataset.&lt;/li&gt;&#xA;&lt;li&gt;Critics argue RAG struggles at scale, but others dismiss this as overly pessimistic, citing successful implementations at larger scales.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsoldredditcomrpythoncomments1ime8jaa_modern_python_repository_template_with_uv_and&#34;&gt;&lt;a href=&#34;https://old.reddit.com/r/Python/comments/1ime8ja/a_modern_python_repository_template_with_uv_and/&#34;&gt;https://old.reddit.com/r/Python/comments/1ime8ja/a_modern_python_repository_template_with_uv_and/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Showcased a modern Python repository template&lt;/li&gt;&#xA;&lt;li&gt;Features UV and Just for self-hosting&lt;/li&gt;&#xA;&lt;li&gt;Aims to provide a clean and minimalistic template&lt;/li&gt;&#xA;&lt;li&gt;Includes example use cases and explanations&lt;/li&gt;&#xA;&lt;li&gt;Meant to serve as a starting point for new projects&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomranjanprjagentollama&#34;&gt;&lt;a href=&#34;https://github.com/ranjanprj/agentollama&#34;&gt;https://github.com/ranjanprj/agentollama&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The Agentollama Framework enables creation, execution, and monitoring of intelligent Agents without writing business logic.&lt;/li&gt;&#xA;&lt;li&gt;AI determines which functions to call dynamically, without hardcoding.&lt;/li&gt;&#xA;&lt;li&gt;Generates code dynamically for API calls using AI.&lt;/li&gt;&#xA;&lt;li&gt;Tools are loaded dynamically when an Agent is called to perform a task.&lt;/li&gt;&#xA;&lt;li&gt;Can be used to integrate with legacy applications for productivity enhancement.&lt;/li&gt;&#xA;&lt;li&gt;Real-time execution step tracking and logs of task execution and decision-making by Agents.&lt;/li&gt;&#xA;&lt;li&gt;Helps debug why a particular Agent took a specific action.&lt;/li&gt;&#xA;&lt;li&gt;Ensures Agents produce outputs in a predefined format.&lt;/li&gt;&#xA;&lt;li&gt;Prevents deviation in reasoning and decision-making.&lt;/li&gt;&#xA;&lt;li&gt;Essential for enterprise use cases where multiple API interactions must follow strict formats.&lt;/li&gt;&#xA;&lt;li&gt;Vectorized file storage for intelligent querying.&lt;/li&gt;&#xA;&lt;li&gt;Retrieval-Augmented Generation (RAG) Agents to enhance decision-making with external knowledge.&lt;/li&gt;&#xA;&lt;li&gt;Loop Agents to iterate over datasets and execute workflows dynamically.&lt;/li&gt;&#xA;&lt;li&gt;Enables seamless multi-agent orchestration for business processes.&lt;/li&gt;&#xA;&lt;li&gt;Supports the DeepSeek R1 (8B Model) Integration for on-device tool code generation.&lt;/li&gt;&#xA;&lt;li&gt;UI-based Agent Execution, no need to touch an IDE!&lt;/li&gt;&#xA;&lt;li&gt;Performance Metrics &amp;amp; Testing (Upcoming Feature) to analyze Agent efficiency and decision-making accuracy.&lt;/li&gt;&#xA;&lt;li&gt;Compatible with Python 3.x.&lt;/li&gt;&#xA;&lt;li&gt;Built using Ollama (AI Model Server), Django, and Vector Database.&lt;/li&gt;&#xA;&lt;li&gt;Clone the repository via git clone &lt;a href=&#34;https://github.com/your-repo/agentollama.git&#34;&gt;https://github.com/your-repo/agentollama.git&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create and activate virtual environment: python -m venv venv, source venv/bin/activate&lt;/li&gt;&#xA;&lt;li&gt;Install dependencies: pip install django ollama&lt;/li&gt;&#xA;&lt;li&gt;Run Ollama server in the background with Llama3.1 8B Model.&lt;/li&gt;&#xA;&lt;li&gt;Run the Django server: python manage.py runserver&lt;/li&gt;&#xA;&lt;li&gt;Define Agents through the UI and automate workflows effortlessly.&lt;/li&gt;&#xA;&lt;li&gt;Advanced features include dynamic business testing &amp;amp; performance metrics, advanced agent collaboration, and enhanced RAG capabilities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcommpaeppervibevoice&#34;&gt;&lt;a href=&#34;https://github.com/mpaepper/vibevoice&#34;&gt;https://github.com/mpaepper/vibevoice&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hi, I&amp;rsquo;m Marc Päpper and I extended Vlad&amp;rsquo;s work to run with a local whisper model.&lt;/li&gt;&#xA;&lt;li&gt;Original inspiration: whisper-keyboard by Vlad.&lt;/li&gt;&#xA;&lt;li&gt;Faster Whisper implementation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcompravko-solutionsflashlearn&#34;&gt;&lt;a href=&#34;https://github.com/Pravko-Solutions/FlashLearn&#34;&gt;https://github.com/Pravko-Solutions/FlashLearn&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is an introduction to the FlashLearn library, which provides a simple way to integrate large language models (LLMs) into workflows. The library aims to make it easy for startups to use LLMs in their products.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-02-10</title>
      <link>/posts/1739216844-linklist-2025-02-10/</link>
      <pubDate>Mon, 10 Feb 2025 19:47:25 +0000</pubDate>
      <guid>/posts/1739216844-linklist-2025-02-10/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomfareedkhan-devtrain-llm-from-scratch&#34;&gt;&lt;a href=&#34;https://github.com/FareedKhan-dev/train-llm-from-scratch&#34;&gt;https://github.com/FareedKhan-dev/train-llm-from-scratch&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is a thorough analysis of two large language models (LLMs), one with 13 million parameters and another with 1 billion parameters. The author provides an in-depth comparison of their strengths and weaknesses, highlighting both the benefits and limitations of each model.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Takeaways:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Smaller model can be effective&lt;/strong&gt;: The 13 million-parameter model is able to generate clear and accurate text, even in longer contexts, making it a viable option for goal-oriented tasks.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bigger model requires deeper architecture&lt;/strong&gt;: The 1 billion-parameter model&amp;rsquo;s ability to handle complex contexts and generate coherent text relies on a more sophisticated architecture that requires careful consideration of its design and training data.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Overfitting is a risk&lt;/strong&gt;: If the bigger model is not designed with sufficient depth and complexity, it may overfit the training data and fail to improve performance compared to smaller models.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Fine-tuning can improve performance&lt;/strong&gt;: Fine-tuning the 1 billion-parameter model on domain-specific data, such as writing emails or essays, can help improve its ability to generate high-quality text.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Recommendations:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-01-26</title>
      <link>/posts/1737900105-linklist-2025-01-26/</link>
      <pubDate>Sun, 26 Jan 2025 14:01:45 +0000</pubDate>
      <guid>/posts/1737900105-linklist-2025-01-26/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomlanggptaiawesome-claude-prompts&#34;&gt;&lt;a href=&#34;https://github.com/langgptai/awesome-claude-prompts&#34;&gt;https://github.com/langgptai/awesome-claude-prompts&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomlsgrepchrome-extension-ollama-chat&#34;&gt;&lt;a href=&#34;https://github.com/lsgrep/chrome-extension-ollama-chat&#34;&gt;https://github.com/lsgrep/chrome-extension-ollama-chat&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A Chrome extension that adds a sleek sidebar interface for chatting with local LLMs using Ollama, built with React, TypeScript, and Vite.&lt;/li&gt;&#xA;&lt;li&gt;Supports smooth sidebar integration with any webpage&lt;/li&gt;&#xA;&lt;li&gt;Includes chat interface with support for Markdown formatting&lt;/li&gt;&#xA;&lt;li&gt;Features real-time streaming responses&lt;/li&gt;&#xA;&lt;li&gt;Offers clean and modern UI design&lt;/li&gt;&#xA;&lt;li&gt;Allows multiple model support via Ollama&lt;/li&gt;&#xA;&lt;li&gt;Provides keyboard shortcuts for quick access&lt;/li&gt;&#xA;&lt;li&gt;Requires Node.js (v16 or higher), npm, yarn, Chrome browser, and Ollama installed and running locally&lt;/li&gt;&#xA;&lt;li&gt;Clone the repository using &lt;code&gt;git clone &amp;lt;repository-url&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Install dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Build the extension with &lt;code&gt;npm run build&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Load the extension in Chrome by enabling &amp;ldquo;Developer mode&amp;rdquo; and loading it from the &lt;code&gt;dist&lt;/code&gt; directory&lt;/li&gt;&#xA;&lt;li&gt;Start Ollama with CORS enabled by running &lt;code&gt;OLLAMA_ORIGINS=chrome-extension://* ollama serve&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Pull a model (if necessary) using &lt;code&gt;ollama pull &amp;lt;model-name&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Start the development server with &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;The extension will rebuild automatically when changes are made&lt;/li&gt;&#xA;&lt;li&gt;Click the extension icon to toggle the sidebar, select an Ollama model, and start chatting&lt;/li&gt;&#xA;&lt;li&gt;Features React + TypeScript for the UI, Vite for building and development, Chrome Extension Manifest V3, and Ollama API for local LLM integration&lt;/li&gt;&#xA;&lt;li&gt;Utilizes real-time streaming using Server-Sent Events&lt;/li&gt;&#xA;&lt;li&gt;Includes improved sidebar styling and layout, smooth animations, and fixed visibility toggle&lt;/li&gt;&#xA;&lt;li&gt;Adjusted width for better readability&lt;/li&gt;&#xA;&lt;li&gt;Initial release with basic chat functionality and Ollama integration&lt;/li&gt;&#xA;&lt;li&gt;Supports Markdown formatting&lt;/li&gt;&#xA;&lt;li&gt;Licensed under the WTFPL - Do What the Fuck You Want to Public License (see LICENSE file)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomkoljabrealtimestt&#34;&gt;&lt;a href=&#34;https://github.com/KoljaB/RealtimeSTT&#34;&gt;https://github.com/KoljaB/RealtimeSTT&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;A Python library used for speech recognition and transcription.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-01-18</title>
      <link>/posts/1737221187-linklist-2025-01-18/</link>
      <pubDate>Sat, 18 Jan 2025 17:26:27 +0000</pubDate>
      <guid>/posts/1737221187-linklist-2025-01-18/</guid>
      <description>&lt;h2 id=&#34;httpselmwealthcommicrostrategy-bitcoin&#34;&gt;&lt;a href=&#34;https://elmwealth.com/microstrategy-bitcoin/&#34;&gt;https://elmwealth.com/microstrategy-bitcoin/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The text is a research report on MicroStrategy (MSTR), a company that has been focused on buying Bitcoin and other cryptocurrencies. The authors of the report provide an analysis of various aspects of MSTR, including its stock price, options trading activity, and return characteristics.&lt;/p&gt;&#xA;&lt;p&gt;Some key points from the report include:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;MicroStrategy&amp;rsquo;s stock price:&lt;/strong&gt; The report notes that MicroStrategy&amp;rsquo;s stock price has returned a significant 200% in about seven months, making it one of the best-performing stocks in the past year.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Options trading activity:&lt;/strong&gt; The authors highlight that hundreds of bullish options trades have been executed on MSTR, which suggests strong investor interest in the stock.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Return characteristics:&lt;/strong&gt; The report notes that the return pattern of MicroStrategy&amp;rsquo;s stock is not very enticing compared to other long-short ETFs, which would be a convenient way to take advantage of potential underperformance.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Risk and frictions:&lt;/strong&gt; The authors caution that MSTR trading comes with high risks and frictions, making it difficult to short or leveraged trade the stock effectively.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Leveraged ETF analysis:&lt;/strong&gt; They analyze a hypothetical long-short ETF that would be long 1x Bitcoin and short 1x MSTR, which they conclude would not be an attractive investment opportunity due to its relatively low return and high risks.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Overall, the report suggests that while MicroStrategy&amp;rsquo;s stock price has been strong, investors should exercise caution when considering leveraged trading or shorting the stock due to the high risks involved.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-01-11</title>
      <link>/posts/1737221182-linklist-2025-01-11/</link>
      <pubDate>Sat, 11 Jan 2025 17:26:22 +0000</pubDate>
      <guid>/posts/1737221182-linklist-2025-01-11/</guid>
      <description>&lt;h2 id=&#34;httpswwwkagglecomcodefaressayahstock-market-analysis-prediction-using-lstm&#34;&gt;&lt;a href=&#34;https://www.kaggle.com/code/faressayah/stock-market-analysis-prediction-using-lstm&#34;&gt;https://www.kaggle.com/code/faressayah/stock-market-analysis-prediction-using-lstm&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomarihanvfasthtml-modal&#34;&gt;&lt;a href=&#34;https://github.com/arihanv/fasthtml-modal&#34;&gt;https://github.com/arihanv/fasthtml-modal&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Deploy a FastHTML app on Modal&amp;#39;s serverless infra with simple python code&#xA;* Install required packages with pip install -r requirements.txt&#xA;* Run the app with python app.py&#xA;* Create a free account at modal.com and authenticate in CLI&#xA;* Deploy the app with modal deploy deploy.py&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomnikitabobkoaerospace&#34;&gt;&lt;a href=&#34;https://github.com/nikitabobko/AeroSpace&#34;&gt;https://github.com/nikitabobko/AeroSpace&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* AeroSpace is an i3-like tiling window manager for macOS.&#xA;* Based on a tree paradigm and i3 inspired design.&#xA;* Fast workspaces switching without animations, no SIP disabling required.&#xA;* Uses virtual workspaces emulation instead of native Spaces.&#xA;* Plain text configuration (dotfiles friendly), CLI first with manpages and shell completion.&#xA;* No SIP disabling required.&#xA;* Multi-monitor support in i3-like paradigm.&#xA;* Install via Homebrew with autoupdates preferred.&#xA;* Installation options available: https://nikitabobko.github.io/AeroSpace/guide#installation&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsquantpediacomtop-ten-blog-posts-on-quantpedia-in-2024a6080&#34;&gt;&lt;a href=&#34;https://quantpedia.com/top-ten-blog-posts-on-quantpedia-in-2024/?a=6080&#34;&gt;https://quantpedia.com/top-ten-blog-posts-on-quantpedia-in-2024/?a=6080&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Top Ten Blog Posts on Quantpedia in 2024 were the most popular based on Google Analytics ranking.&#xA;* The top 10 posts are:&#xA;  * #10: Pre-Holiday Effect in Commodities – historical data reveals a short-term price drift prior to major U.S. holidays&#xA;  * #9: How To Profitably Trade Bitcoin’s Overnight Sessions?&#xA;  * #8: How to Improve ETF Sector Momentum&#xA;  * #7: How to Improve Commodity Momentum Using Intra-Market Correlation&#xA;  * #6: Combining Discretionary and Algorithmic Trading&#xA;  * #5: Designing Robust Trend-Following System&#xA;  * #4: How to Build Mean Reversion Strategies in Currencies&#xA;  * #3: How Much Bitcoin Should We Allocate To the Portfolio?&#xA;  * #2: Pragmatic Asset Allocation Model for Semi-Active Investors &amp;amp; A Few Thoughts on Pragmatic Asset Allocation&#xA;  * #1: Exploration of CTA Momentum Strategies Using ETFs&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomn1teshypy-listenertabreadme-ov-file&#34;&gt;&lt;a href=&#34;https://github.com/n1teshy/py-listener?tab=readme-ov-file&#34;&gt;https://github.com/n1teshy/py-listener?tab=readme-ov-file&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* PyListener is a tool for near real-time voice processing and speech-to-text conversion.&#xA;* It can be fast or sluggish depending on the compute and memory availability of the environment.&#xA;* Suitable for situations with a 1-second delay, such as AI assistants and voice command processing.&#xA;* Installation: `pip install py-listener`&#xA;* The package contains only one class, `Listener`.&#xA;* The `Listener` class collects audio data into n-second chunks and checks for human voice.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomsimonschubertkai&#34;&gt;&lt;a href=&#34;https://github.com/SimonSchubert/Kai&#34;&gt;https://github.com/SimonSchubert/Kai&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A cross-platform open-source AI interface that runs on Android, iOS, Windows, Mac, Linux, and Web.&#xA;* https://simonschubert.github.io/Kai&#xA;* Gemini 2.0 Flash, Gemini 1.5 Flash, Gemini 1.5 Flash-8B&#xA;* Llama 3.3, Mixtral, Gemma2...&#xA;* Features:&#xA;+ Chat histories&#xA;+ Voice chat&#xA;* Lottie animation: https://lottiefiles.com/free-animation/loading-wDUukARCPj&#xA;* GroqCloud: https://groq.com&#xA;* Gemini: https://gemini.google.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomtilmangrieselchipper&#34;&gt;&lt;a href=&#34;https://github.com/TilmanGriesel/chipper&#34;&gt;https://github.com/TilmanGriesel/chipper&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Chipper provides a web interface, CLI, and simple architecture for embedding pipelines, document chunking, web scraping, and query workflows.&#xA;* Built with Haystack, Ollama, Hugging Face, Docker, Tailwind, and ElasticSearch.&#xA;* Runs locally or scales as a Dockerized service.&#xA;* Started as a project to help author with their book, now growing into a fully dockerized service architecture.&#xA;* Features:&#xA;    + Local Ollama and hosted Hugging Face API&#xA;    + Build powerful knowledge base using ElasticSearch embeddings.&#xA;    + Automatically split documents via Haystack.&#xA;    + Scrape content from web sources.&#xA;    + Transcribe audio files into text.&#xA;    + Access via user-friendly CLI or web client interface.&#xA;    + Deploy effortlessly using Docker.&#xA;* Project is a research project, not built for production.&#xA;* Goals:&#xA;    + Create approachable tools for beginners and helpful for experts.&#xA;    + Provide a framework to teach AI concepts in a manageable way.&#xA;    + Offer a playground for educators, explorers, tinkerers, and companies to experiment and innovate.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpshealeycodescombuilding-game-prototypes-with-love&#34;&gt;&lt;a href=&#34;https://healeycodes.com/building-game-prototypes-with-love&#34;&gt;https://healeycodes.com/building-game-prototypes-with-love&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is an article about using the LÖVE programming framework to build prototypes for game development projects. The author shares their experience and lessons learned from building two prototypes: one for a card game and another for a notebook/pen-based game.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-12-31</title>
      <link>/posts/1735636186-linklist-2024-12-31/</link>
      <pubDate>Tue, 31 Dec 2024 09:09:47 +0000</pubDate>
      <guid>/posts/1735636186-linklist-2024-12-31/</guid>
      <description>&lt;h2 id=&#34;httpscratesiocratesnpkl&#34;&gt;&lt;a href=&#34;https://crates.io/crates/npkl&#34;&gt;https://crates.io/crates/npkl&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpswwwnuancme&#34;&gt;&lt;a href=&#34;https://www.nuanc.me/&#34;&gt;https://www.nuanc.me/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomsturdy-devsemantic-code-search&#34;&gt;&lt;a href=&#34;https://github.com/sturdy-dev/semantic-code-search&#34;&gt;https://github.com/sturdy-dev/semantic-code-search&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* 🔍 Overview &#xA;*  • 🔧 Installation &#xA;*   pip3 install semantic-code-search&#xA;*  • 💻 Usage &#xA;*   sem &amp;#39;my query&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomwangxj03ai-cookbooktreemain&#34;&gt;&lt;a href=&#34;https://github.com/wangxj03/ai-cookbook/tree/main&#34;&gt;https://github.com/wangxj03/ai-cookbook/tree/main&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* wangxj03/ai-cookbook&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomandrewngo-iniagentic_rag&#34;&gt;&lt;a href=&#34;https://github.com/AndrewNgo-ini/agentic_rag&#34;&gt;https://github.com/AndrewNgo-ini/agentic_rag&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* # Project Overview&#xA;* A fully custom chatbot built with Agentic RAG (Retrieval-Augmented Generation), combining OpenAI models with a local knowledge base.&#xA;* Lightweight, dependency-free frontend and streamlined FastAPI backend for complete control and simplicity.&#xA;&#xA;* # Technical Details&#xA;* Pure HTML/CSS/JavaScript frontend with no external dependencies&#xA;* FastAPI backend with OpenAI integration&#xA;* Agentic RAG implementation:&#xA;  * Context retrieval using embeddings and cosine similarity&#xA;  * Step-by-step reasoning with Chain of Thought&#xA;  * Function calling for dynamic context retrieval&#xA;  * Comprehensive error handling and logging&#xA;  * Type-safe implementation with Python type hints&#xA;  * Configurable through environment variables&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomduriantacotreeline&#34;&gt;&lt;a href=&#34;https://github.com/duriantaco/treeline&#34;&gt;https://github.com/duriantaco/treeline&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install treeline &#xA;&#xA;from treeline import treeline &#xA;print(treeline(&amp;#34;/path/to/directory&amp;#34;)) &#xA;treeline(&amp;#34;/path/to/directory&amp;#34;, create_md=True) &#xA;&#xA;from treeline.dependency_analyzer import ModuleDependencyAnalyzer &#xA;from treeline.diff_visualizer import DiffVisualizer &#xA;from pathlib import Path &#xA;&#xA;analyzer = ModuleDependencyAnalyzer() &#xA;analyzer.analyze_directory(Path(&amp;#34;.&amp;#34;)) &#xA;with open(&amp;#34;dependencies.html&amp;#34;, &amp;#34;w&amp;#34;, encoding=&amp;#34;utf-8&amp;#34;) as f: &#xA;    f.write(analyzer.generate_html_visualization()) &#xA;    visualizer = DiffVisualizer() &#xA;    diff_html = visualizer.generate_structural_diff(&amp;#34;HEAD^&amp;#34;, &amp;#34;HEAD&amp;#34;) &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpswwwmacrohistorynetdatabase&#34;&gt;&lt;a href=&#34;https://www.macrohistory.net/database/&#34;&gt;https://www.macrohistory.net/database/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is a list of contributors to the &amp;ldquo;History of Economic Thought&amp;rdquo; dataset, which appears to be an open-access project aimed at providing historical data on economic thought. Here are some observations and insights from reviewing this list:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-12-11</title>
      <link>/posts/1733949322-linklist-2024-12-11/</link>
      <pubDate>Wed, 11 Dec 2024 20:35:22 +0000</pubDate>
      <guid>/posts/1733949322-linklist-2024-12-11/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mljar/supertree&#34;&gt;https://github.com/mljar/supertree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/rudrankriyam/status/1862597006507876640?s=12&#34;&gt;https://x.com/rudrankriyam/status/1862597006507876640?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.blackpiercapital.com/post/leaning-into-discomfort&#34;&gt;https://www.blackpiercapital.com/post/leaning-into-discomfort&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=F3Ow28ImI5U&#34;&gt;https://m.youtube.com/watch?v=F3Ow28ImI5U&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://optionstradingiq.com/road-trip-trade/#&#34;&gt;https://optionstradingiq.com/road-trip-trade/#&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://robotwealth.com/modelling-uvxy-trading-strategies-with-excel/&#34;&gt;https://robotwealth.com/modelling-uvxy-trading-strategies-with-excel/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://minjunes.ai/posts/sleep/index.html&#34;&gt;https://minjunes.ai/posts/sleep/index.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://steelph0enix.github.io/posts/llama-cpp-guide/&#34;&gt;https://steelph0enix.github.io/posts/llama-cpp-guide/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://journals.sagepub.com/doi/abs/10.1177/09567976211044685?journalCode=pssa&#34;&gt;https://journals.sagepub.com/doi/abs/10.1177/09567976211044685?journalCode=pssa&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1h3fxey/convert_multimodal_model_to_gguf_to_run_locally/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1h3fxey/convert_multimodal_model_to_gguf_to_run_locally/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.datacamp.com/blog/mixture-of-million-experts&#34;&gt;https://www.datacamp.com/blog/mixture-of-million-experts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alexbilz/status/1829229314463932689?s=12&#34;&gt;https://x.com/alexbilz/status/1829229314463932689?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/breezedeus/Pix2Text&#34;&gt;https://github.com/breezedeus/Pix2Text&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://my.hrw.com/nsmedia/intgos/html/igo.htm&#34;&gt;https://my.hrw.com/nsmedia/intgos/html/igo.htm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/122pz4e/what_i_learned_from_citadels_training_software/&#34;&gt;https://www.reddit.com/r/options/comments/122pz4e/what_i_learned_from_citadels_training_software/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rahuljoshi44/GraphVega&#34;&gt;https://github.com/rahuljoshi44/GraphVega&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/phiresky/ripgrep-all&#34;&gt;https://github.com/phiresky/ripgrep-all&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/steel-dev/steel-browser&#34;&gt;https://github.com/steel-dev/steel-browser&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://astral.sh/blog/python-build-standalone&#34;&gt;https://astral.sh/blog/python-build-standalone&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/abus-aikorea/voice-pro&#34;&gt;https://github.com/abus-aikorea/voice-pro&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/hkdobrev/cleanmac&#34;&gt;https://github.com/hkdobrev/cleanmac&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kevinqhlin/status/1864356752369832327?s=12&#34;&gt;https://x.com/kevinqhlin/status/1864356752369832327?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/maryrosecook/status/1864364847150014926?s=12&#34;&gt;https://x.com/maryrosecook/status/1864364847150014926?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ruliad_ai/status/1864394941029322890?s=12&#34;&gt;https://x.com/ruliad_ai/status/1864394941029322890?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/physicslog/web-highlighter.user.js&#34;&gt;https://github.com/physicslog/web-highlighter.user.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/yeonholee50/AmpyFin&#34;&gt;https://github.com/yeonholee50/AmpyFin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/prince_canuma/status/1864793820409319502?s=12&#34;&gt;https://x.com/prince_canuma/status/1864793820409319502?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=2flCDStm9ys&#34;&gt;https://m.youtube.com/watch?v=2flCDStm9ys&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/paulgauthier/status/1865048480080892402?s=12&#34;&gt;https://x.com/paulgauthier/status/1865048480080892402?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/jimwaterson/status/1865015304642023800?s=12&#34;&gt;https://x.com/jimwaterson/status/1865015304642023800?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/skynews/status/1864937759577608685?s=12&#34;&gt;https://x.com/skynews/status/1864937759577608685?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://treevis.net/&#34;&gt;https://treevis.net/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ashpreetbedi/status/1865164275209134411?s=12&#34;&gt;https://x.com/ashpreetbedi/status/1865164275209134411?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/RhetTbull/osxphotos&#34;&gt;https://github.com/RhetTbull/osxphotos&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://openwebui.com/f/latentvariable/o1_at_home&#34;&gt;https://openwebui.com/f/latentvariable/o1_at_home&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cs.au.dk/news-events/award-success-at-ieee-scivis-contest-2023&#34;&gt;https://cs.au.dk/news-events/award-success-at-ieee-scivis-contest-2023&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jjleng/copilot-more&#34;&gt;https://github.com/jjleng/copilot-more&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Upsonic/gpt-computer-assistant&#34;&gt;https://github.com/Upsonic/gpt-computer-assistant&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/chisasaw/redsage&#34;&gt;https://github.com/chisasaw/redsage&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ksidiii/status/1866088473985245220?s=12&#34;&gt;https://x.com/ksidiii/status/1866088473985245220?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/2-fly-4-ai/V0-system-prompt/blob/main/v0-system-prompt(updated%2022-11-2024)#L21&#34;&gt;https://github.com/2-fly-4-ai/V0-system-prompt/blob/main/v0-system-prompt(updated%2022-11-2024)#L21&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-24</title>
      <link>/posts/1733067199-linklist-2024-12-01/</link>
      <pubDate>Sun, 01 Dec 2024 15:33:19 +0000</pubDate>
      <guid>/posts/1733067199-linklist-2024-12-01/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://alvarezquanttrading.com/blog/spy-sso-and-tlt-strategy/&#34;&gt;https://alvarezquanttrading.com/blog/spy-sso-and-tlt-strategy/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://lihaoyun6.github.io/quickrecorder/&#34;&gt;https://lihaoyun6.github.io/quickrecorder/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.quantum-machines.co/blog/understanding-googles-quantum-error-correction-breakthrough/&#34;&gt;https://www.quantum-machines.co/blog/understanding-googles-quantum-error-correction-breakthrough/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/yannikkellerde/AI-Snip&#34;&gt;https://github.com/yannikkellerde/AI-Snip&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=yjBHheCB6Ek&#34;&gt;https://m.youtube.com/watch?v=yjBHheCB6Ek&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/PMTraders/comments/1gwib1f/delta_hedginggamma_scalping_tips_and_tricks/&#34;&gt;https://www.reddit.com/r/PMTraders/comments/1gwib1f/delta_hedginggamma_scalping_tips_and_tricks/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://colab.research.google.com/gist/virattt/251cfea5e66b21c7b6a58b8952476117/hedge-fund-trading-team.ipynb&#34;&gt;https://colab.research.google.com/gist/virattt/251cfea5e66b21c7b6a58b8952476117/hedge-fund-trading-team.ipynb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=40033490&#34;&gt;https://news.ycombinator.com/item?id=40033490&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/e2b-dev/secure-computer-use&#34;&gt;https://github.com/e2b-dev/secure-computer-use&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart&#34;&gt;https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.viksnewsletter.com/p/short-intro-to-automotive-lidar&#34;&gt;https://www.viksnewsletter.com/p/short-intro-to-automotive-lidar&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kolibril13/status/1861180037837287656?s=12&#34;&gt;https://x.com/kolibril13/status/1861180037837287656?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/freeCodeCamp/devdocs&#34;&gt;https://github.com/freeCodeCamp/devdocs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/192h50w/small_ai_dev_tools_pt_1_context_manager/&#34;&gt;https://www.reddit.com/r/LocalLLaMA/comments/192h50w/small_ai_dev_tools_pt_1_context_manager/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Utq-4KgDBEU&#34;&gt;https://www.youtube.com/watch?v=Utq-4KgDBEU&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeium.com/windsurf&#34;&gt;https://codeium.com/windsurf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.diigo.com/profile/garrygolden?page=3&#34;&gt;https://www.diigo.com/profile/garrygolden?page=3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/spaces/fffiloni/FlipSketch&#34;&gt;https://huggingface.co/spaces/fffiloni/FlipSketch&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alma18499/status/1861351774604439634?s=12&#34;&gt;https://x.com/alma18499/status/1861351774604439634?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/chartmuse/status/1861081940297707586?s=12&#34;&gt;https://x.com/chartmuse/status/1861081940297707586?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ollama.com/blog/functions-as-tools&#34;&gt;https://ollama.com/blog/functions-as-tools&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alonsosilva/status/1861414079505564116?s=12&#34;&gt;https://x.com/alonsosilva/status/1861414079505564116?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://blog.sshh.io/p/building-v0-in-a-weekend&#34;&gt;https://blog.sshh.io/p/building-v0-in-a-weekend&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/tjmlabs/AgentRun&#34;&gt;https://github.com/tjmlabs/AgentRun&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilitywiz/status/1861534082611515548?s=12&#34;&gt;https://x.com/volatilitywiz/status/1861534082611515548?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://discord.com/channels/751429073770643466/809068063411404810/1309442796746182667&#34;&gt;https://discord.com/channels/751429073770643466/809068063411404810/1309442796746182667&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kevinqhlin/status/1861664707654099114?s=12&#34;&gt;https://x.com/kevinqhlin/status/1861664707654099114?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://qwenlm.github.io/blog/qwq-32b-preview/&#34;&gt;https://qwenlm.github.io/blog/qwq-32b-preview/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ollama/status/1861860394262016036?s=12&#34;&gt;https://x.com/ollama/status/1861860394262016036?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/shortbelly/status/1860971025695170801?s=12&#34;&gt;https://x.com/shortbelly/status/1860971025695170801?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://reasonabledeviations.com/2020/10/01/option-implied-pdfs/&#34;&gt;https://reasonabledeviations.com/2020/10/01/option-implied-pdfs/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/stocks/comments/1h1cds4/if_you_could_only_buy_one_stock_now_what_would_it/&#34;&gt;https://old.reddit.com/r/stocks/comments/1h1cds4/if_you_could_only_buy_one_stock_now_what_would_it/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://restofworld.org/2024/china-tech-tariffs-which-countries-will-impose/?utm_source=rss&amp;amp;utm_medium=rss&amp;amp;utm_campaign=feeds&#34;&gt;https://restofworld.org/2024/china-tech-tariffs-which-countries-will-impose/?utm_source=rss&amp;amp;utm_medium=rss&amp;amp;utm_campaign=feeds&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/Python/comments/1h1ecw7/opennb_open_jupyter_notebooks_from_github_with/&#34;&gt;https://www.reddit.com/r/Python/comments/1h1ecw7/opennb_open_jupyter_notebooks_from_github_with/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/macapps/comments/1h11c8z/is_there_any_tool_to_securely_store_api_keys/&#34;&gt;https://old.reddit.com/r/macapps/comments/1h11c8z/is_there_any_tool_to_securely_store_api_keys/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/bbcarchive/status/1862043757711081952?s=12&#34;&gt;https://x.com/bbcarchive/status/1862043757711081952?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rfgqiUzZHK4&#34;&gt;https://www.youtube.com/watch?v=rfgqiUzZHK4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eOjCm5J6DUE&#34;&gt;https://www.youtube.com/watch?v=eOjCm5J6DUE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HDX7Y1eUwSI&#34;&gt;https://www.youtube.com/watch?v=HDX7Y1eUwSI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5pfCTdwSONw&#34;&gt;https://www.youtube.com/watch?v=5pfCTdwSONw&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bytefer/ollama-ocr&#34;&gt;https://github.com/bytefer/ollama-ocr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/ChatGPTCoding/comments/1h1s1ub/open_source_qwen_25_coder_32b_aider_desktop_app/&#34;&gt;https://old.reddit.com/r/ChatGPTCoding/comments/1h1s1ub/open_source_qwen_25_coder_32b_aider_desktop_app/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LETFs/comments/1h22xgm/how_does_a_100_index_fund_rotation_to_upro_200/&#34;&gt;https://old.reddit.com/r/LETFs/comments/1h22xgm/how_does_a_100_index_fund_rotation_to_upro_200/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/tonghohin/screen-sharing&#34;&gt;https://github.com/tonghohin/screen-sharing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/thorvg/thorvg&#34;&gt;https://github.com/thorvg/thorvg&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/1fj1t9e/i_tested_7_strategies_on_spy_so_you_dont_have_to/&#34;&gt;https://www.reddit.com/r/options/comments/1fj1t9e/i_tested_7_strategies_on_spy_so_you_dont_have_to/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/thetagang/comments/wnt1i5/wheel_golden_rules/&#34;&gt;https://old.reddit.com/r/thetagang/comments/wnt1i5/wheel_golden_rules/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/thetagang/comments/n6ggo7/quick_tip_the_wheel_whats_delta_got_to_do_with_it/&#34;&gt;https://old.reddit.com/r/thetagang/comments/n6ggo7/quick_tip_the_wheel_whats_delta_got_to_do_with_it/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/thetagang/comments/wzwoz0/lets_talk_more_about_the_hyperwheel/&#34;&gt;https://www.reddit.com/r/thetagang/comments/wzwoz0/lets_talk_more_about_the_hyperwheel/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/thetagang/comments/12wv6i0/my_results_for_the_2nd_week_of_trading_1_dte_spx/&#34;&gt;https://old.reddit.com/r/thetagang/comments/12wv6i0/my_results_for_the_2nd_week_of_trading_1_dte_spx/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kolibril13/status/1862520992381210656?s=12&#34;&gt;https://x.com/kolibril13/status/1862520992381210656?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/QwenLM/Qwen-Agent&#34;&gt;https://github.com/QwenLM/Qwen-Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sive.rs/kimo&#34;&gt;https://sive.rs/kimo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ollama.com/library/nemotron-mini&#34;&gt;https://ollama.com/library/nemotron-mini&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Nov/29/structured-generation-smollm2-webgpu/&#34;&gt;https://simonwillison.net/2024/Nov/29/structured-generation-smollm2-webgpu/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-24</title>
      <link>/posts/1732465541-linklist-2024-11-24/</link>
      <pubDate>Sun, 24 Nov 2024 16:25:42 +0000</pubDate>
      <guid>/posts/1732465541-linklist-2024-11-24/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/coleam00/bolt.new-any-llm&#34;&gt;https://github.com/coleam00/bolt.new-any-llm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://phet.colorado.edu/&#34;&gt;https://phet.colorado.edu/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/zeitlings/alfred-unified-search&#34;&gt;https://github.com/zeitlings/alfred-unified-search&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/Python/comments/1gthdpy/deply_keep_your_python_architecture_clean/&#34;&gt;https://old.reddit.com/r/Python/comments/1gthdpy/deply_keep_your_python_architecture_clean/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=zLEt5oz5Mr8&#34;&gt;https://m.youtube.com/watch?v=zLEt5oz5Mr8&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/ChatGPTPro/comments/1gu2xpq/essential_microservices_10_core_utility_prompts/&#34;&gt;https://old.reddit.com/r/ChatGPTPro/comments/1gu2xpq/essential_microservices_10_core_utility_prompts/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://museumofbadart.org/&#34;&gt;https://museumofbadart.org/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/poe_platform/status/1858605611208110126?s=12&#34;&gt;https://x.com/poe_platform/status/1858605611208110126?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.thepythoncodingstack.com/p/python-turtle-lunar-lander-game-1969-land-on-the-moon&#34;&gt;https://www.thepythoncodingstack.com/p/python-turtle-lunar-lander-game-1969-land-on-the-moon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/msoedov/Alfred-collection/blob/master/Readme.md&#34;&gt;https://github.com/msoedov/Alfred-collection/blob/master/Readme.md&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://blog.harbourfronts.com/2024/11/17/making-use-of-information-embedded-in-vix-futures-term-structures/&#34;&gt;http://blog.harbourfronts.com/2024/11/17/making-use-of-information-embedded-in-vix-futures-term-structures/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://labs.leaningtech.com/blog/webvm-20&#34;&gt;https://labs.leaningtech.com/blog/webvm-20&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://llmstxt.org&#34;&gt;https://llmstxt.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/granthawkridge/status/1859170487320080522?s=12&#34;&gt;https://x.com/granthawkridge/status/1859170487320080522?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/betterhn50/status/1859075443489456597?s=12&#34;&gt;https://x.com/betterhn50/status/1859075443489456597?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/Python/comments/1gvnfvi/migrating_from_black_and_flake8_to_ruff/&#34;&gt;https://old.reddit.com/r/Python/comments/1gvnfvi/migrating_from_black_and_flake8_to_ruff/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1gvlzug/i_created_an_ai_research_assistant_that_actually/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1gvlzug/i_created_an_ai_research_assistant_that_actually/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=lbUhVLi9X7M&#34;&gt;https://m.youtube.com/watch?v=lbUhVLi9X7M&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.astralcodexten.com/p/how-did-you-do-on-the-ai-art-turing&#34;&gt;https://www.astralcodexten.com/p/how-did-you-do-on-the-ai-art-turing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://motion.dev/docs/quick-start&#34;&gt;https://motion.dev/docs/quick-start&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2024/11/alternatives-typical-technical-illustrations-data-visualisations/&#34;&gt;https://www.smashingmagazine.com/2024/11/alternatives-typical-technical-illustrations-data-visualisations/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sliday/AI-Auto-Completion-Editor&#34;&gt;https://github.com/sliday/AI-Auto-Completion-Editor&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/langrocks/langrocks&#34;&gt;https://github.com/langrocks/langrocks&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/timhwang/status/1859347800129143162?s=12&#34;&gt;https://x.com/timhwang/status/1859347800129143162?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1gwe7gt/samsung_tinyclick_singleturn_agent_for_empowering/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1gwe7gt/samsung_tinyclick_singleturn_agent_for_empowering/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://quant.stackexchange.com/questions/75164/questions-on-options-cost-of-carry-and-relationship-to-futures-cost-of-carry&#34;&gt;https://quant.stackexchange.com/questions/75164/questions-on-options-cost-of-carry-and-relationship-to-futures-cost-of-carry&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://money.stackexchange.com/questions/120487/how-to-compute-ivx-implied-volatility-for-a-specific-expiration-and-the-expect&#34;&gt;https://money.stackexchange.com/questions/120487/how-to-compute-ivx-implied-volatility-for-a-specific-expiration-and-the-expect&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-18</title>
      <link>/posts/1731923597-linklist-2024-11-18/</link>
      <pubDate>Mon, 18 Nov 2024 09:53:17 +0000</pubDate>
      <guid>/posts/1731923597-linklist-2024-11-18/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/cline/cline&#34;&gt;https://github.com/cline/cline&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilityvix/status/1854543629219438702?s=12&#34;&gt;https://x.com/volatilityvix/status/1854543629219438702?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://onlinelibrary.wiley.com/doi/full/10.1002/fut.22502&#34;&gt;https://onlinelibrary.wiley.com/doi/full/10.1002/fut.22502&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://openrouter.ai/&#34;&gt;https://openrouter.ai/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.answer.ai/posts/2024-11-07-solveit.html&#34;&gt;https://www.answer.ai/posts/2024-11-07-solveit.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/denser-org/denser-chat&#34;&gt;https://github.com/denser-org/denser-chat&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ideogram.ai/using-ideogram/prompting-tips/text-and-typography&#34;&gt;https://docs.ideogram.ai/using-ideogram/prompting-tips/text-and-typography&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/9.%20Rebalancing%20Positions.html&#34;&gt;https://www.pybroker.com/en/latest/notebooks/9.%20Rebalancing%20Positions.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Nov/8/chainforge/&#34;&gt;https://simonwillison.net/2024/Nov/8/chainforge/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/thewh1teagle/vibe&#34;&gt;https://github.com/thewh1teagle/vibe&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://londonist.com/2015/10/how-deep-does-london-go&#34;&gt;https://londonist.com/2015/10/how-deep-does-london-go&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://objective-see.org/tools.html&#34;&gt;https://objective-see.org/tools.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/alienator88/Pearcleaner&#34;&gt;https://github.com/alienator88/Pearcleaner&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vitalik.eth.limo/general/2024/11/09/infofinance.html&#34;&gt;https://vitalik.eth.limo/general/2024/11/09/infofinance.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/moviepy/comments/1c90613/how_can_i_draw_a_line_on_center_of_video_clip/&#34;&gt;https://www.reddit.com/r/moviepy/comments/1c90613/how_can_i_draw_a_line_on_center_of_video_clip/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://zulko.github.io/moviepy/_modules/moviepy/video/tools/drawing.html&#34;&gt;https://zulko.github.io/moviepy/_modules/moviepy/video/tools/drawing.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/tobim/status/1855655639508287627?s=12&#34;&gt;https://x.com/tobim/status/1855655639508287627?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/spaces/Qwen/Qwen2.5-Coder-Artifacts&#34;&gt;https://huggingface.co/spaces/Qwen/Qwen2.5-Coder-Artifacts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://blog.quantinsti.com/calendar-spread-options-trading-strategy/&#34;&gt;https://blog.quantinsti.com/calendar-spread-options-trading-strategy/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/QuantConnect/Lean/tree/master&#34;&gt;https://github.com/QuantConnect/Lean/tree/master&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lukeed/awesome-cloudflare-workers&#34;&gt;https://github.com/lukeed/awesome-cloudflare-workers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/adamschwartz/generate.invoice.workers.dev&#34;&gt;https://github.com/adamschwartz/generate.invoice.workers.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://grantslatton.com/software-pathfinding#algorithms-we-develop-software-by&#34;&gt;https://grantslatton.com/software-pathfinding#algorithms-we-develop-software-by&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/microsoft/TinyTroupe&#34;&gt;https://github.com/microsoft/TinyTroupe&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilityvix/status/1856716643583599010?s=12&#34;&gt;https://x.com/volatilityvix/status/1856716643583599010?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://appahead.studio/apps/polycapture/&#34;&gt;https://appahead.studio/apps/polycapture/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/hkproj/status/1856660077492474211?s=12&#34;&gt;https://x.com/hkproj/status/1856660077492474211?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://jan.miksovsky.com/posts/2024/11-12-momboard&#34;&gt;https://jan.miksovsky.com/posts/2024/11-12-momboard&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=42135520&#34;&gt;https://news.ycombinator.com/item?id=42135520&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/&#34;&gt;https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=NJ1jAfWR84k&#34;&gt;https://m.youtube.com/watch?v=NJ1jAfWR84k&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/meysamhadeli/codai&#34;&gt;https://github.com/meysamhadeli/codai&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/zeitlings/alfred-workflows/tree/main?tab=readme-ov-file#16-alfredocr&#34;&gt;https://github.com/zeitlings/alfred-workflows/tree/main?tab=readme-ov-file#16-alfredocr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gist.github.com/jonashaag/95e8b75ed44cc5b93cbc5d4599e3803a&#34;&gt;https://gist.github.com/jonashaag/95e8b75ed44cc5b93cbc5d4599e3803a&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/eduardohleite/applepy&#34;&gt;https://github.com/eduardohleite/applepy&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.alfredapp.com/help/workflows/utilities/transform/&#34;&gt;https://www.alfredapp.com/help/workflows/utilities/transform/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-08</title>
      <link>/posts/1731923520-linklist-2024-11-08/</link>
      <pubDate>Mon, 18 Nov 2024 09:52:01 +0000</pubDate>
      <guid>/posts/1731923520-linklist-2024-11-08/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Oct/16/sqlite-rails/&#34;&gt;https://simonwillison.net/2024/Oct/16/sqlite-rails/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://time.com/7093536/surgeons-apple-vision-pro/&#34;&gt;https://time.com/7093536/surgeons-apple-vision-pro/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://jonathan-adly.github.io/AgentRun/examples/ollama_llama3/&#34;&gt;https://jonathan-adly.github.io/AgentRun/examples/ollama_llama3/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alexalbert__/status/1848743018075189719?s=12&#34;&gt;https://x.com/alexalbert__/status/1848743018075189719?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pengfeng/ask.py&#34;&gt;https://github.com/pengfeng/ask.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gemoo.com/compare/screen-studio-alternative.htm&#34;&gt;https://gemoo.com/compare/screen-studio-alternative.htm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/fraser_drops/status/1846294412701454674?s=12&#34;&gt;https://x.com/fraser_drops/status/1846294412701454674?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dottxt-ai.github.io/outlines/latest/cookbook/chain_of_thought/&#34;&gt;https://dottxt-ai.github.io/outlines/latest/cookbook/chain_of_thought/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1ga25gj/introducing_fast_apply_replicate_cursors_instant/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1ga25gj/introducing_fast_apply_replicate_cursors_instant/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xbarapp.com/&#34;&gt;https://xbarapp.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/jxnlco/status/1848804495993561349?s=12&#34;&gt;https://x.com/jxnlco/status/1848804495993561349?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=l8pRSuU81PU&amp;amp;t=9963s&amp;amp;pp=2AHrTZACAQ%3D%3D&#34;&gt;https://m.youtube.com/watch?v=l8pRSuU81PU&amp;amp;t=9963s&amp;amp;pp=2AHrTZACAQ%3D%3D&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/simonw/status/1849333512991900125?s=12&#34;&gt;https://x.com/simonw/status/1849333512991900125?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gist.github.com/wong2/47bb82e9cd6d1e5d81de1ca6e8618880&#34;&gt;https://gist.github.com/wong2/47bb82e9cd6d1e5d81de1ca6e8618880&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilityvix/status/1849455268645449741?s=12&#34;&gt;https://x.com/volatilityvix/status/1849455268645449741?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/vanstriendaniel/status/1849533601895022926?s=12&#34;&gt;https://x.com/vanstriendaniel/status/1849533601895022926?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.davidreis.me/2024/what-happens-when-you-make-a-move-in-lichess&#34;&gt;https://www.davidreis.me/2024/what-happens-when-you-make-a-move-in-lichess&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/options/comments/1gazw9g/seeking_ideas_for_options_trading_tools_and/&#34;&gt;https://old.reddit.com/r/options/comments/1gazw9g/seeking_ideas_for_options_trading_tools_and/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/gradio/status/1849828584720040424?s=12&#34;&gt;https://x.com/gradio/status/1849828584720040424?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&#34;&gt;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&#34;&gt;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://londonsono.com/full-body-ultrasound-scan/&#34;&gt;https://londonsono.com/full-body-ultrasound-scan/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Oct/27/llm-jq/&#34;&gt;https://simonwillison.net/2024/Oct/27/llm-jq/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mikelikesdesign/SwiftUI-experiments/tree/main/dots%20interaction&#34;&gt;https://github.com/mikelikesdesign/SwiftUI-experiments/tree/main/dots%20interaction&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://labs.google/&#34;&gt;https://labs.google/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/1fsbsq5/needed_a_better_options_trading_tool_made_a/&#34;&gt;https://www.reddit.com/r/options/comments/1fsbsq5/needed_a_better_options_trading_tool_made_a/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/sd6hih/i_made_a_tool_to_learn_and_visualize_option/&#34;&gt;https://www.reddit.com/r/options/comments/sd6hih/i_made_a_tool_to_learn_and_visualize_option/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://optionstradingiq.com/theta-delta-ratio/&#34;&gt;https://optionstradingiq.com/theta-delta-ratio/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/cocktailpeanut/status/1844408840059506863?s=12&#34;&gt;https://x.com/cocktailpeanut/status/1844408840059506863?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=h9Z4oGN89MU&#34;&gt;https://m.youtube.com/watch?v=h9Z4oGN89MU&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Acreom/app&#34;&gt;https://github.com/Acreom/app&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sgoedecke/fish-tank&#34;&gt;https://github.com/sgoedecke/fish-tank&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/johnmai_it/status/1851341001442673025?s=12&#34;&gt;https://x.com/johnmai_it/status/1851341001442673025?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/elder_plinius/status/1851415257517826147?s=12&#34;&gt;https://x.com/elder_plinius/status/1851415257517826147?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Oct/30/copilot-models/&#34;&gt;https://simonwillison.net/2024/Oct/30/copilot-models/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://githubnext.com/projects/github-spark/&#34;&gt;https://githubnext.com/projects/github-spark/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://deepmind.google/discover/blog/pushing-the-frontiers-of-audio-generation/?utm_source=x&amp;amp;utm_medium=social&amp;amp;utm_campaign=&amp;amp;utm_content=&#34;&gt;https://deepmind.google/discover/blog/pushing-the-frontiers-of-audio-generation/?utm_source=x&amp;amp;utm_medium=social&amp;amp;utm_campaign=&amp;amp;utm_content=&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/frnknlsn/status/1851798106834375057?s=12&#34;&gt;https://x.com/frnknlsn/status/1851798106834375057?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/okazz_/status/1851645865292878166?s=12&#34;&gt;https://x.com/okazz_/status/1851645865292878166?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/cocktailpeanut/status/1851807225888571427?s=12&#34;&gt;https://x.com/cocktailpeanut/status/1851807225888571427?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kestra-io/kestra?tab=readme-ov-file&#34;&gt;https://github.com/kestra-io/kestra?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/paulbrodersen/netgraph&#34;&gt;https://github.com/paulbrodersen/netgraph&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/gabotechs/dep-tree&#34;&gt;https://github.com/gabotechs/dep-tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=SqbP5IemmZ0&#34;&gt;https://m.youtube.com/watch?v=SqbP5IemmZ0&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/xenovacom/status/1852251703791288469?s=12&#34;&gt;https://x.com/xenovacom/status/1852251703791288469?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sirnfs/OptionSuite&#34;&gt;https://github.com/sirnfs/OptionSuite&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/DS4SD/docling&#34;&gt;https://github.com/DS4SD/docling&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gist.github.com/N8python/b31c84d04caca53e0de3361161646883&#34;&gt;https://gist.github.com/N8python/b31c84d04caca53e0de3361161646883&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/volfpeter/fastapi-htmx-tailwind-example&#34;&gt;https://github.com/volfpeter/fastapi-htmx-tailwind-example&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://blog.entropy.observer/sorting-400-tabs-in-60-seconds/&#34;&gt;https://blog.entropy.observer/sorting-400-tabs-in-60-seconds/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://drew.silcock.dev/blog/everything-you-need-to-know-about-python-3-13/&#34;&gt;https://drew.silcock.dev/blog/everything-you-need-to-know-about-python-3-13/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://brooker.co.za/blog/2023/04/20/hobbies.html&#34;&gt;https://brooker.co.za/blog/2023/04/20/hobbies.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://newsletter.maartengrootendorst.com/p/a-visual-guide-to-quantization&#34;&gt;https://newsletter.maartengrootendorst.com/p/a-visual-guide-to-quantization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/jaredhstocks/status/1852811651554443760?s=12&#34;&gt;https://x.com/jaredhstocks/status/1852811651554443760?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&#34;&gt;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/emollick/status/1853255574843982241?s=12&#34;&gt;https://x.com/emollick/status/1853255574843982241?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ahmetsait/toolgit&#34;&gt;https://github.com/ahmetsait/toolgit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/hyperfield/yt-channel-downloader&#34;&gt;https://github.com/hyperfield/yt-channel-downloader&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://eieio.games/nonsense/game-16-paccam-pacman-with-your-face/&#34;&gt;https://eieio.games/nonsense/game-16-paccam-pacman-with-your-face/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&#34;&gt;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/bartowski/SuperNova-Medius-GGUF&#34;&gt;https://huggingface.co/bartowski/SuperNova-Medius-GGUF&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dottxt-ai/demos/tree/main/its-a-smol-world&#34;&gt;https://github.com/dottxt-ai/demos/tree/main/its-a-smol-world&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.optionstocksmachines.com/post/2024-11-04-day-12-iteration/&#34;&gt;https://www.optionstocksmachines.com/post/2024-11-04-day-12-iteration/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/huggingface/smollm&#34;&gt;https://github.com/huggingface/smollm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-10-14</title>
      <link>/posts/1728891496-linklist-2024-10-13/</link>
      <pubDate>Mon, 14 Oct 2024 08:38:16 +0100</pubDate>
      <guid>/posts/1728891496-linklist-2024-10-13/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/wiki/toolbox/links/&#34;&gt;https://www.reddit.com/r/options/wiki/toolbox/links/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here are some resources for option trading:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Backtesting Tools**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* OptionStack (backtesting tool, free trial)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* thinkorswim &amp;#34;thinkBack&amp;#34; (backtesting tool within a broker&amp;#39;s platform)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TradeMachine Pro (paid only, but has 30-day free trial)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Tastylive backtesting webapp (free, with account registration)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Technical Analysis**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Daytrading Simulator article on TA for options&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Fidelity TA for options trading Webinar PDF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Investopedia top technical indicators for options trading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TDA three indicators to check before the trade&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Research &amp;amp; Indicators**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Finlo (research and portfolio tracking, free 7-day trial)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Predicting Alpha (volatility forecasting and strategy-focused dashboard, requires registration)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Qwidgets customizable dashboard for researching options trades (free, requires registration)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Simpler Trading (research, analysis, and education, mostly paid but some free resources)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Screeners &amp;amp; Scanners**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Barchart options screener&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* CME Open Interest heatmap for CME options/futures products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* FDScanner&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Golden Sweeps (freemium web site)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Market Chameleon options screener&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Option Samurai (paid subscription only)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Option Sonar unusual activity scanner (free alerts are delayed, paid subscriptions are real-time)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Option Trading Blogs, Video and Podcast Channels**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* InTheMoney YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Option Alpha YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Poor vs. Standard podcast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* projectoption YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Sky View Trading YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Start Options tutorial blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Tastytrade YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TrackingStockPundits options analysis and blogs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Other Resources**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* ORATS backtesting blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Spintwig (mostly credit trading strategies)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Thinkorswim&amp;#39;s &amp;#34;How to Trade&amp;#34; section&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sliday/stupid-ai-coder&#34;&gt;https://github.com/sliday/stupid-ai-coder&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Python script for AI-powered code generation and improvement&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Supports multiple AI models (Claude, GPT-4, Llama)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Iterative code improvement with diff visualization&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Automatic error detection and correction&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Generates complete project folder structure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Creates README and requirements.txt files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Colorful console output with progress indicators&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Option to input task description from a file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Requires Python 3.7+ and installation of dependencies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Usage: `python ai-coder.py` or `python ai-coder.py -f path/to/task_description.txt`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Prompts user for task description, number of iterations, and AI model choice&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Generates project folder with final code, README, requirements.txt, .gitignore, and versions subfolder&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Customizable for AI models, iterations, error handling, and logging verbosity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Quality depends on chosen AI model and task description clarity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Requires internet connection for AI model communication&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Review and test generated code before production use&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/PsyChip/machina&#34;&gt;https://github.com/PsyChip/machina&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- MACHINA: CCTV viewer with realtime object tagger [WIP]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Uses LLAVA, YOLO 11, OpenCV, and FAISS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Connects to high-resolution RTSP stream, queues frames, and resamples for processing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- YOLO detects objects, assigns IDs based on coordinates, size, and timestamp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Background thread makes LLM requests to Ollama server for object tagging&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Object matching uses center of detection boxes with 16px tolerance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Test environment: 640x480 processing, 20ms inference time on GTX 1060&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Stream delays 1-2 seconds every ~10 minutes, frame skip mechanism implemented&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Prerequisites:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Python 3.12.x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ollama server with LLAVA model&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Compatible PyTorch version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Dependencies from requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Usage:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - S: snapshot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - R: start/stop recording&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Q: quit app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Left mouse: select&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Middle mouse: zoom&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Right mouse: pan&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Project aims to create a complete headless security system&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- TODO:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Additional UI Layer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - RTS style object selection box with detailed information&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Detection of crowds, car crashes, police, ambulance, running humans&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Webhook callbacks for new/disappeared objects and movement after long stays&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ekiefl/pooltool&#34;&gt;https://github.com/ekiefl/pooltool&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pooltool is a general purpose billiards simulator crafted specifically for science and engineering.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Its core design principles focus on speed, flexibility, and the ease of visualization and analysis. With an interactive 3D interface, a robust API, and extensive documentation, pooltool aims to be a systemic tool in billiards-related research. Continuously evolving through active maintenance and bolstered by a growing community, this vision for pooltool emphasizes not just its current capabilities, but also its potential for growth and adaptation within billiards simulation.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pooltool is peer-reviewed and published in the Journal of Open Source Software (JOSS) and pyOpenSci.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/souzatharsis/podcastfy-demo?tab=readme-ov-file&#34;&gt;https://github.com/souzatharsis/podcastfy-demo?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Transforming Multi-Sourced Text into Captivating Multi-Lingual Audio Conversations with GenAI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/1fzx8t5/what_is_a_good_first_project_to_learn_how_llms/&#34;&gt;https://www.reddit.com/r/LocalLLaMA/comments/1fzx8t5/what_is_a_good_first_project_to_learn_how_llms/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Watch YouTube videos on how transformers and LLMs work:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - 3Blue1Brown&amp;#39;s video on transformers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Sebastian Raschka&amp;#39;s &amp;#34;Build a Large Language Model From Scratch&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Andrej Karpathy&amp;#39;s &amp;#34;Neural Networks: Zero to Hero&amp;#34; playlist&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Start with understanding embeddings:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use SentenceTransformer to embed texts and visualize vectors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Learn fundamentals of neural networks:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Implement a basic feed-forward network (e.g. for MNIST)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Understand backpropagation algorithm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Study simpler language models:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Character-level prediction with RNNs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Word embeddings like word2vec&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Implement a small transformer from scratch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Read architecture papers on models like T5, BERT, GPT-2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Try recreating a minimal LLM implementation:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Karpathy&amp;#39;s llama2.c as a starting point&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Explore &amp;#34;Spreadsheets are all you need&amp;#34; Excel implementation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Review detailed LLM architecture diagrams&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-10-08</title>
      <link>/posts/1728891487-linklist-2024-10-06/</link>
      <pubDate>Tue, 08 Oct 2024 08:38:07 +0100</pubDate>
      <guid>/posts/1728891487-linklist-2024-10-06/</guid>
      <description>&lt;p&gt;&lt;em&gt;Last 7 days (as of 2024-10-08 10:10)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://markrbest.github.io/reading-list/&#34;&gt;https://markrbest.github.io/reading-list/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Book list covers various topics in trading, finance, and programming&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- General trading books:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Advances in Financial Machine Learning&amp;#34; by Marcos Lopez de Prado&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Trading Systems and Methods&amp;#34; by Perry J. Kaufman&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ernie Chan&amp;#39;s books on algorithmic trading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Portfolio management:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Quantitative Portfolio Management&amp;#34; by Michael Isichenko&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Advanced Portfolio Management&amp;#34; by Giuseppe A. Paleologo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Market making and trade cost analysis:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Algorithmic Trading: A Practitioner&amp;#39;s Guide&amp;#34; by Rishi K. Narang&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Strategy optimization:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Experimentation for Engineers&amp;#34; by Aparna Oruganti&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Timothy Master&amp;#39;s books on statistically sound trading strategies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Statistical arbitrage:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Statistical Arbitrage&amp;#34; by Andrew Pole&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The Modern Spirit of Statistical Arbitrage&amp;#34; (article)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Volume price analysis:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;A Complete Guide To Volume Price Analysis&amp;#34; by Anna Coulling&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Books on order flow and volume profile trading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Macro/cycle analysis:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Mastering The Market Cycle&amp;#34; by Howard Marks&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Risk management:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Value at Risk&amp;#34; by Philippe Jorion&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Regime change:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Detecting Regime Change in Computational Finance&amp;#34; by Carl Chiarella et al.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Books about traders:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The New Market Wizards&amp;#34; by Jack D. Schwager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Pit Bull&amp;#34; by Martin Schwartz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Reminiscences of a Stock Operator&amp;#34; by Edwin Lefèvre&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Peter L. Bernstein&amp;#39;s books on economic history and risk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Tail risk management books by Vineer Bhansali&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Trading platform and HPC:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Developing High-Frequency Trading Systems&amp;#34; by Juanjo Ruiz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The Art of Writing Efficient Programs&amp;#34; by Fedor G. Pikus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- General programming:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Joel on Software&amp;#34; by Joel Spolsky&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Refactoring:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Tidy First&amp;#34; by Kent Beck&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Five Lines of Code&amp;#34; by Christian Clausen&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Naming Things&amp;#34; by Sergey Golitsynskiy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Rust programming:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Rust Brain Teasers&amp;#34; by Ferris the Crab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Rust Atomics and Locks&amp;#34; by Mara Bos&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The Rust Programming Language&amp;#34; by Steve Klabnik and Carol Nichols&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/mickcolburn_/status/1840421695099691409?s=12&#34;&gt;https://x.com/mickcolburn_/status/1840421695099691409?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mick Colburn, a trader on X, shared an interview he liked with @TradesTurbo and @RealSimpleAriel. The interview discussed a trading strategy that uses a 50-day Moving Average (MA) / ATR multiple rule, which reminds him of what @jfsrevg speaks about. Colburn believes it&amp;#39;s worth looking into as multiple successful traders have endorsed the strategy. He shared the tweet with his followers and encouraged them to check out the interview on youtube.com.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://mathspp.com/blog/how-i-prepare-a-technical-talk&#34;&gt;https://mathspp.com/blog/how-i-prepare-a-technical-talk&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Slide design:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Minimize text, use bullet points&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Large font size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Avoid distractions and animations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Simplify and enlarge code samples&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use high-contrast, light theme for code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Audience engagement:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Interact with audience&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use shows of hands&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ask simple questions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ask questions you know the answer to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Talk delivery:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use humor&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Be cautious with live coding&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Manage voice rhythm and tone&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Have fun while presenting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Practice:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Practice repeatedly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Record and critique yourself&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Practice standing up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Learn key points instead of scripting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use speaker notes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Practice timing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Managing Q&amp;amp;A:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Be comfortable saying &amp;#34;I don&amp;#39;t know&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Suggest private conversations for complex questions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Politely dismiss inappropriate questions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Content preparation:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Brainstorm ideas&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Organize thoughts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Write a blog article as reference&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Create slides last&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Remember:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Guidelines are subjective&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Experiment to find what works for you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=8UuW8o4bHbw&#34;&gt;https://m.youtube.com/watch?v=8UuW8o4bHbw&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- UV is a Python packaging tool written in Rust&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Aims to be blazingly fast and a single binary blob&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Goal: become the only tool needed for Python projects&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Initially reimplemented virtualenv, pip, and pip-tools functionality&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Kept core features in UV pip and UV VF namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Version 0.3.0 aims to replace workflow tools like PDM, Poetry, or Rye&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Now a complete workflow tool, addressing Python&amp;#39;s biggest criticism&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Can potentially be the only tool needed to work with Python projects&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Downloads Python interpreters from Gregory Szorc&amp;#39;s standalone builds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Standalone builds are single directories with complete Python installations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- UV uses Python installations transparently for virtual environments and commands&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Aims to simplify Python environment management for new programmers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Standalone builds may have quirks due to Python&amp;#39;s resistance to such builds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- UV allows running a local mirror of Python versions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Some users may prefer official Python builds for production environments&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/TeamCinco/Quant-Tools&#34;&gt;https://github.com/TeamCinco/Quant-Tools&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Repository of quantitative analysis tools for financial markets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Covers backtesting, options analysis, correlation studies, and Monte Carlo simulations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Includes tools for:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Backtesting trading strategies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Correlation analysis between financial instruments&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Financial analysis and visualizations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Macroeconomic analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Options analysis and Greeks calculations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Monte Carlo simulations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Stock performance analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Each script can be run independently&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Most scripts prompt for user input (e.g., ticker symbols, date ranges, parameters)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Requires Python 3.x and libraries:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - yfinance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - pandas&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - numpy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - matplotlib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - scipy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - scikit-learn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - pandas_datareader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - backtesting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Dependencies can be installed using pip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Open for contributions and improvements&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/awnihannun/status/1841109315383648325?s=12&#34;&gt;https://x.com/awnihannun/status/1841109315383648325?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;/images/2024/10/14/1728894852.png&#34; alt=&#34;images/2024/10/14/1728894852.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-30</title>
      <link>/posts/1727687969-linklist-2024-09-30/</link>
      <pubDate>Mon, 30 Sep 2024 10:19:29 +0100</pubDate>
      <guid>/posts/1727687969-linklist-2024-09-30/</guid>
      <description>&lt;p&gt;&lt;em&gt;Last 7 days (as of 2024-09-28 18:57)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Optopsy is an open-source backtesting library for option strategies.&#xA;* The library focuses on answering core questions about option strategies, rather than simulating every possible scenario.&#xA;* The backtesting algorithm involves:&#xA;    * Evaluating option chains within specified entry and exit dates.&#xA;    * Grouping evaluated chains into buckets based on Days to Expiration (DTE) and delta or strike distance percent.&#xA;    * Constructing option strategy legs and calculating profit/loss.&#xA;    * Aggregating results to show average profit/loss for each bucket combination.&#xA;* The algorithm uses bucketing and approximations for performance, so results shouldn&amp;#39;t be the sole basis for trade decisions.&#xA;* The library&amp;#39;s methodology is transparently explained.&#xA;* Contributions (pull requests, comments, suggestions) are welcome.&#xA;* Copyright © 2020 Michael Chu.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MightyMoud/sidekick&#34;&gt;https://github.com/MightyMoud/sidekick&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Sidekick is a CLI tool for deploying applications to a VPS, aiming for Fly.io-like simplicity.&#xA;* **Features:**&#xA;    * One-command VPS setup (Docker, Traefik, sOPS, age).&#xA;    * Deploys applications from a Dockerfile.&#xA;    * Zero-downtime deployments.&#xA;    * High availability and load balancing.&#xA;    * Zero-config SSL certificates.&#xA;    * sslip.io integration.&#xA;    * Built-in SOPS integration for secure secret management.&#xA;* **Installation:** `brew install sidekick` (macOS) or `go install github.com/mightymoud/sidekick@latest` (Linux/Windows).&#xA;* **Requires:** Ubuntu LTS VPS (DigitalOcean or Hetzner recommended), SSH key access.&#xA;* **`sidekick init`:** Sets up the VPS: creates a user, disables root login, updates the system, installs Docker, Traefik, sOPS, age, and configures SSL certificates.&#xA;* **`sidekick launch`:** Deploys an application: requires a Dockerfile and specifies the app name, exposed port, and domain (can use sslip.io).  Handles encryption of `.env` files using sOPS.&#xA;* **`sidekick deploy`:** Deploys a new version of an application with zero downtime.  Checks for `.env` file changes and re-encrypts if necessary.&#xA;* **`sidekick deploy preview`:** Deploys a preview environment tied to the current git commit.&#xA;* **Roadmap:**  Includes features like docker-compose support, improved zero-downtime deploys, firewall setup, multi-VPS management, database deployment, a TUI, and CI/CD integration.&#xA;* **License:** GPL-3.0&#xA;* **Website:** www.sidekickdeploy.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://studio.langchain.com/&#34;&gt;https://studio.langchain.com/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* LangGraph Studio is a desktop application for prototyping and debugging LangGraph applications locally.  Available for MacOS.&#xA;* Offers various templates to jumpstart development:&#xA;    * LangGraph ReAct Agent Template: A simple ReAct agent chatbot with persistent chat memory. ([langchain-ai/react-agent](https://github.com/langchain-ai/react-agent))&#xA;    * LangGraph Data Enrichment Template:  For building data enrichment agents. ([langchain-ai/data-enrichment](https://github.com/langchain-ai/data-enrichment))&#xA;    * LangGraph Retrieval Agent Template: A basic question-answering agent using a retriever. ([langchain-ai/retrieval-agent-template](https://github.com/langchain-ai/retrieval-agent-template))&#xA;    * LangGraph.js Data Enrichment Template:  Similar to the above, but using LangGraph.js. ([langchain-ai/data-enrichment-js](https://github.com/langchain-ai/data-enrichment-js))&#xA;    * LangGraph.js Retrieval Agent Template:  A basic question-answering agent using LangGraph.js and a retriever. ([langchain-ai/retrieval-agent-template-js](https://github.com/langchain-ai/retrieval-agent-template-js))&#xA;    * LangGraph.js ReAct Agent Template: A ReAct agent using LangGraph.js. ([langchain-ai/react-agent-js](https://github.com/langchain-ai/react-agent-js))&#xA;    * New LangGraph Project: A blank template to start a new project. ([langchain-ai/new-langgraph-project](https://github.com/langchain-ai/new-langgraph-project))&#xA;    * New LangGraph.js Project: A blank template to start a new LangGraph.js project. ([langchain-ai/new-langgraphjs-project](https://github.com/langchain-ai/new-langgraphjs-project))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/tcsenpai/multi1&#34;&gt;https://github.com/tcsenpai/multi1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* **multi1:** Creates o1-like reasoning chains using multiple AI providers (locally and remotely).&#xA;* **Supports LiteLLM:**  Enables access to 100+ providers.&#xA;* **Key Features:** Unified interface, LiteLLM default provider (local &amp;amp; remote), configurable sidebar, modular design for easy provider addition.&#xA;* **Supported Providers:** LiteLLM (local &amp;amp; remote), Ollama (local), Perplexity (remote, API key required), Groq (remote, API key required).&#xA;* **Reasoning Chains:** Improves LLM reasoning by creating dynamic Chain of Thought, prompting the model to explore multiple methods and alternative answers.&#xA;* **Improved Accuracy:** Achieves ~70% accuracy on the Strawberry problem (compared to 0% for Llama-3.1-70b and 30% for ChatGPT-4o without prompting).&#xA;* **Open Source and Experimental:** Aims to inspire development of new reasoning strategies.  Not a replication of OpenAI&amp;#39;s o1, which uses different training techniques.&#xA;* **Quickstart:** Requires Python 3, `venv` (optional), and `pip`.  Installation via `pip install -r requirements.txt`. API keys needed for some providers.  Runs using `streamlit run app/main.py`.&#xA;* **Contributing:**  Contributions welcome!  Fork the repo, create a branch, make changes, and submit a pull request.&#xA;* **Derived from g1:**  Originally developed by Benjamin Klieger.&#xA;* **License:** MIT license.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dena-sohrabi/There?tab=readme-ov-file&#34;&gt;https://github.com/dena-sohrabi/There?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A native macOS menubar app to track time zones for friends, teammates, or cities.&#xA;* Installation via Homebrew: `brew install --cask there`&#xA;* Add people from X (Twitter), Telegram, or local photos.&#xA;* Add cities without needing to know the time zone.&#xA;* Supports raw UTC offsets.&#xA;* Ultra-low resource usage (CPU and memory).&#xA;* Built with SwiftUI.&#xA;* Requires macOS 13+.&#xA;* Roadmap: Widgets, time slider, auto-update, AppleScript API.&#xA;* Contributions welcome (PRs for small fixes, issues for larger features).&#xA;* Licensed under the MIT License.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=5V6Lam8GZo4&amp;amp;list=PLjTveVh7FakJOoY6GPZGWHHl4shhDT8iV&amp;amp;index=1&#34;&gt;https://m.youtube.com/watch?v=5V6Lam8GZo4&amp;amp;list=PLjTveVh7FakJOoY6GPZGWHHl4shhDT8iV&amp;amp;index=1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-23</title>
      <link>/posts/1727117710-linklist-2024-09-23/</link>
      <pubDate>Mon, 23 Sep 2024 19:55:10 +0100</pubDate>
      <guid>/posts/1727117710-linklist-2024-09-23/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Prompt used for generating summary of each page in Poe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;As instructed before, Summarise it using only bullet points in markdown syntax.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No headings, just bullet points.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I want it as raw markdown so that I can use it in README.md file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{clipboard}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Optopsy is an open source Python library for backtesting options trading strategies&#xA;- Created by Michael Chu and hosted on GitHub&#xA;- Uses a bucketing methodology to group option chains&#xA;- Groups option chains by days to expiration and delta/strike distance from current price&#xA;- Evaluates profit/loss of each option chain and aggregates results into buckets&#xA;- Generates statistics including average profit/loss, minimum, maximum, and distributions&#xA;- Focuses on answering core questions rather than fully replicating real-world events&#xA;- Results are meant for theoretical understanding, not actual trade recommendations&#xA;- Does not factor in external events or sequence of events over time&#xA;- Accuracy can be improved by refining bucket intervals&#xA;- Wiki covers methodology, API reference, data feeds, usage, and contributing&#xA;- Feedback and contributions are welcomed by the developer&#xA;- Allows programmatic backtesting of options strategies in Python&#xA;- Analyzes statistical outcomes across different implied market states&#xA;- Goal is insight into potential performance rather than replicating real events&#xA;- Available open source on GitHub for use, learning, and contribution&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://compute.hyper.space/&#34;&gt;https://compute.hyper.space/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Compute by hyperspace is an agent-driven research engine for power AI users&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/phiresky/thought-forge-ai&#34;&gt;https://github.com/phiresky/thought-forge-ai&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Project: thought-forge-ai&#xA;- Created by: phiresky&#xA;- Purpose: Generate 30-60 second &amp;#34;deep thought&amp;#34; TikTok-style videos&#xA;- Video components:&#xA;    - Spoken monologue&#xA;    - Moving video scenes&#xA;    - Background music&#xA;    - Subtitles&#xA;&#xA;- Key features:&#xA;    - Fully automated content creation&#xA;    - Uses various AI tools and custom code&#xA;    - Generates philosophical and self-improvement content&#xA;&#xA;- Process steps:&#xA;    1. Choose topics, voice, and clickbait title&#xA;    2. Write monologue script&#xA;    3. Convert text to speech&#xA;    4. Split monologue into scenes and create image prompts&#xA;    5. Generate starting images for each scene&#xA;    6. Create scene videos&#xA;    7. Generate music prompt and create music&#xA;    8. Create subtitles&#xA;    9. Merge and finalize video&#xA;&#xA;- Tools used:&#xA;    - LLM (Claude 3.5 or Llama 3.1)&#xA;    - Text-to-Speech (Elevenlabs or coqui-ai)&#xA;    - Text-to-Image (Flux.1 Pro)&#xA;    - Image-to-Video (RunwayML Gen-3 Alpha)&#xA;    - Text-to-Audio for music (MusicGen)&#xA;    - FFmpeg for video processing&#xA;&#xA;- Setup:&#xA;    - Uses pnpm for dependency management&#xA;    - Requires multiple API keys for various services&#xA;    - Provides commands for generating topics and videos&#xA;&#xA;- Current state:&#xA;    - Quality varies from mediocre to surprisingly good&#xA;    - Potential for improvement with better prompts or human input&#xA;    - Video generation is the most expensive and challenging part&#xA;&#xA;- License: Included but not specified in the summary&#xA;- Language: 100% TypeScript&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Doriandarko/maestro&#34;&gt;https://github.com/Doriandarko/maestro&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Maestro is a framework for AI models to orchestrate subagents for task breakdown and execution&#xA;- Breaks down objectives into sub-tasks, executes them, and refines results into a final output&#xA;- Supports multiple AI providers (Anthropic, OpenAI, Google, etc.)&#xA;- Can run locally with LMStudio or Ollama&#xA;- Generates detailed exchange logs&#xA;- Recently added support for Claude 3.5 Sonnet&#xA;- Integrates with LiteLLM for easier model selection&#xA;- Supports GPT-4 and GPT-4o&#xA;- Includes Groq API integration for faster responses&#xA;- Features search capability using Tavily API&#xA;- Requires Python and relevant API keys to run&#xA;- Main script is `python maestro.py`, with variants for different providers&#xA;- Uses orchestrator, sub-agent, and refiner models&#xA;- Allows customization of token limits, model selection, and console output formatting&#xA;- Creates code files and folders for coding projects&#xA;- Generates Markdown log files&#xA;- Released under the MIT License&#xA;- Has 4.1k stars and 640 forks on GitHub&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Blaizzy/fastmlx&#34;&gt;https://github.com/Blaizzy/fastmlx&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- FastMLX is a high-performance, production-ready API for hosting MLX models&#xA;- Supports Vision Language Models (VLMs) and Language Models (LMs)&#xA;- Licensed under Apache Software License 2.0&#xA;- Features include:&#xA;    - OpenAI-compatible API&#xA;    - Dynamic model loading&#xA;    - Support for multiple model types&#xA;    - Image processing capabilities&#xA;    - Efficient resource management&#xA;    - Robust error handling&#xA;    - Customizable and extendable&#xA;- Installation via pip: `pip install fastmlx`&#xA;- Can be run with `fastmlx` command or using uvicorn&#xA;- Supports multiple workers for parallel processing&#xA;- Allows setting number of workers via command line or environment variable&#xA;- API calls similar to OpenAI&amp;#39;s chat completions&#xA;- Supports both Vision Language Models and Language Models&#xA;- Enables streaming responses&#xA;- Implements function calling for specific models (e.g., Llama 3.1, Arcee Agent)&#xA;- Provides endpoints for listing available models&#xA;- Allows adding new models to the API&#xA;- Offers functionality to delete models from memory&#xA;- Has 170 stars and 14 forks on GitHub&#xA;- Latest release is v0.2.1 (as of August 10, 2024)&#xA;- Written primarily in Python (89.1%) and Jinja (10.9%)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kturung/langgraph_streamlit_codeassistant&#34;&gt;https://github.com/kturung/langgraph_streamlit_codeassistant&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- AI-powered assistant integrating Python execution and React component rendering&#xA;- Utilizes Claude 3.5 Sonnet AI model from Anthropic&#xA;- Key features:&#xA;    - Intelligent chat interface&#xA;    - Python code execution in a secure Jupyter notebook environment&#xA;    - Dynamic React component creation and rendering&#xA;    - Integrated file operations (upload, download, management)&#xA;    - Advanced data visualization using matplotlib and other libraries&#xA;    - LangGraph-based workflow with real-time Mermaid diagram&#xA;    - Streamlit interface for user-friendly interaction&#xA;    - Adaptive tool utilization (Python, React, file operations)&#xA;    - Flexible package management&#xA;    - Web resource access capabilities&#xA;    - Robust error handling&#xA;- New feature (03.07.2024): Multimodal support with vision capability&#xA;    - Processes and analyzes images alongside text and code&#xA;    - AI generates content from referenced images&#xA;- Setup instructions provided for Python and Node.js environments&#xA;- Application started using `streamlit run main.py`&#xA;- Automatically initiates React development server in a subprocess&#xA;- Licensed under MIT license&#xA;- Has 451 stars and 92 forks on GitHub&#xA;- Latest release is v0.1.0 (as of July 7, 2024)&#xA;- Written primarily in Python (78.0%), JavaScript (11.1%), HTML (8.0%), and CSS (2.9%)&#xA;- 2 contributors to the project&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/PatrickJS/awesome-cursorrules&#34;&gt;https://github.com/PatrickJS/awesome-cursorrules&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Curated list of awesome .cursorrules files for enhancing Cursor AI experience&#xA;- Cursor AI is an AI-powered code editor&#xA;- .cursorrules files define custom rules for Cursor AI to follow when generating code&#xA;- Benefits of using .cursorrules:&#xA;    - Customized AI behavior&#xA;    - Consistency in coding standards&#xA;    - Context awareness for projects&#xA;    - Improved productivity&#xA;    - Team alignment&#xA;    - Project-specific knowledge integration&#xA;- Contains rules for various categories:&#xA;    - Frontend Frameworks and Libraries&#xA;    - Backend and Full-Stack&#xA;    - Mobile Development&#xA;    - CSS and Styling&#xA;    - State Management&#xA;    - Database and API&#xA;    - Testing&#xA;    - Build Tools and Development&#xA;    - Language-Specific&#xA;    - Other&#xA;- How to use:&#xA;    - Install Cursor AI&#xA;    - Browse and choose a .cursorrules file&#xA;    - Copy it to your project&amp;#39;s root directory&#xA;    - Customize as needed&#xA;- Contributions are welcome:&#xA;    - Fork the repository&#xA;    - Create a new folder in the rules directory&#xA;    - Add your .cursorrules file&#xA;    - Update the main README.md&#xA;    - Submit a pull request&#xA;- Licensed under CC0-1.0&#xA;- Has 469 stars and 20 forks on GitHub&#xA;- 2 contributors to the project&#xA;- Topics: awesome, awesome-list, cursor, cursorrules, cursor-ai-editor&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/finic-ai/finic&#34;&gt;https://github.com/finic-ai/finic&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Finic is a cloud platform for deploying and managing browser-based automation agents&#xA;- Focuses on fault-tolerant execution of bots, scrapers, and RPA integrations&#xA;- Designed to be unopinionated about development process&#xA;- Currently supports Playwright for DOM interactions and recommends BeautifulSoup for HTML parsing&#xA;- Key features:&#xA;    - Cloud Deployment: Deploy Playwright containers to Finic Cloud&#xA;    - Secure Credential Management: Built-in secret manager&#xA;    - Monitoring: Track agent execution and view logs through dashboard&#xA;- Quickstart:&#xA;    - Install via `pip install finicapi`&#xA;    - Create new agent with `create-finic-app example-project`&#xA;    - Run locally with Poetry&#xA;    - Deploy to Finic Cloud with `finic-deploy`&#xA;- Roadmap includes:&#xA;    - Automated deployment from GitHub&#xA;    - Containers with X11 for advanced UI automation&#xA;    - Session impersonation&#xA;    - Self-healing selectors using LLMs&#xA;    - Scheduling and orchestration features&#xA;    - Automatic rate limit detection&#xA;    - Custom timeouts for long-running tasks&#xA;- Open-source project under Apache-2.0 license&#xA;- 2.1k stars and 117 forks on GitHub&#xA;- Written primarily in TypeScript (80.5%) and Python (15.9%)&#xA;- 10 contributors to the project&#xA;- Topics: integrations, scraper, automation, rpa, generative-ai&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/linoy_tsaban/status/1836313928940556550?s=12&#34;&gt;https://x.com/linoy_tsaban/status/1836313928940556550?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-16</title>
      <link>/posts/1726471582-linklist-2024-09-16/</link>
      <pubDate>Mon, 16 Sep 2024 08:26:22 +0100</pubDate>
      <guid>/posts/1726471582-linklist-2024-09-16/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://algorithms-tour.stitchfix.com/&#34;&gt;https://algorithms-tour.stitchfix.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&#34;&gt;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vallandingham.me/scroller.html&#34;&gt;https://vallandingham.me/scroller.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.joelonsoftware.com/2002/01/06/fire-and-motion/&#34;&gt;https://www.joelonsoftware.com/2002/01/06/fire-and-motion/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/blotterfyi/velocity&#34;&gt;https://github.com/blotterfyi/velocity&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/aorwall/moatless-tools&#34;&gt;https://github.com/aorwall/moatless-tools&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/morishin/XDeck&#34;&gt;https://github.com/morishin/XDeck&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://compute.hyper.space/&#34;&gt;https://compute.hyper.space/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/phiresky/thought-forge-ai?tab=readme-ov-file&#34;&gt;https://github.com/phiresky/thought-forge-ai?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Doriandarko/maestro&#34;&gt;https://github.com/Doriandarko/maestro&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Blaizzy/fastmlx&#34;&gt;https://github.com/Blaizzy/fastmlx&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kturung/langgraph_streamlit_codeassistant&#34;&gt;https://github.com/kturung/langgraph_streamlit_codeassistant&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-07</title>
      <link>/posts/1726471302-linklist-2024-09-07/</link>
      <pubDate>Sat, 07 Sep 2024 08:21:43 +0100</pubDate>
      <guid>/posts/1726471302-linklist-2024-09-07/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/roboflow/sports&#34;&gt;https://github.com/roboflow/sports&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/raznem/parsera&#34;&gt;https://github.com/raznem/parsera&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/Peng-YM/LeetCode-Anki&#34;&gt;https://github.com/Peng-YM/LeetCode-Anki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/ading2210/poe-api&#34;&gt;https://github.com/ading2210/poe-api&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/linyimin0812/spring-startup-analyzer&#34;&gt;https://github.com/linyimin0812/spring-startup-analyzer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://optionalpha.com/blog/0dte-options-strategy-performance&#34;&gt;https://optionalpha.com/blog/0dte-options-strategy-performance&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/paul-gauthier/aider/blob/main/benchmark/README.md&#34;&gt;https://github.com/paul-gauthier/aider/blob/main/benchmark/README.md&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/simonw/tools&#34;&gt;https://github.com/simonw/tools&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/geographyclub/qgis-expressions/tree/main/screens&#34;&gt;https://github.com/geographyclub/qgis-expressions/tree/main/screens&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://www.gpu-mart.com/blog/import-models-from-huggingface-to-ollama&#34;&gt;https://www.gpu-mart.com/blog/import-models-from-huggingface-to-ollama&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/1exe1lu/tutorial_getting_phi_35_mini_running_locally_in/&#34;&gt;https://www.reddit.com/r/LocalLLaMA/comments/1exe1lu/tutorial_getting_phi_35_mini_running_locally_in/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
