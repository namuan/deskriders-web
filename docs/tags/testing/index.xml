<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on deskriders</title>
    <link>/tags/testing/</link>
    <description>Recent content in testing on deskriders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 16 Nov 2019 16:24:01 +0000</lastBuildDate><atom:link href="/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Performance testing with HttpRider</title>
      <link>/posts/004-httprider-performance-testing/</link>
      <pubDate>Sat, 16 Nov 2019 16:24:01 +0000</pubDate>
      
      <guid>/posts/004-httprider-performance-testing/</guid>
      <description>The title is a bit misleading as HttpRider can&amp;rsquo;t run performance tests (as of now), however it can be used to generate performance tests using a couple of different approach.
Slow cooker: SlowCooker is a command line tool for load testing. Here is an excellent blog post about the background and difference from other similar tools.
Generating code to run slow cooker is as simple as selecting an API call and click on the export button to generate code.</description>
    </item>
    
    <item>
      <title>Generating BDD tests with HttpRider</title>
      <link>/posts/003-httprider-generating-bdd-tests/</link>
      <pubDate>Mon, 28 Oct 2019 11:30:47 +0000</pubDate>
      
      <guid>/posts/003-httprider-generating-bdd-tests/</guid>
      <description>In this post, we&amp;rsquo;ll see how we can easily generate BDD tests with HttpRider.
Instead of writing the code behind the REST api calls, we&amp;rsquo;ll use an open source framework called Apickli to do the heavy lifting. Apickli is based on cucumber.js and defines a number of pre-built Gherkin expressions.
I&amp;rsquo;ve also created a sample project using Apicki framework to make it easy to get it up and running.
Let&amp;rsquo;s start with a few API calls using the sample database provided with source.</description>
    </item>
    
  </channel>
</rss>
