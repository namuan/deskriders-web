<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gradle on deskriders</title>
    <link>/tags/gradle/</link>
    <description>Recent content in gradle on deskriders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 08 May 2020 15:00:06 +0100</lastBuildDate>
    
	<atom:link href="/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gradle custom task for selectively running tests</title>
      <link>/posts/028-gradle-contract-tests/</link>
      <pubDate>Fri, 08 May 2020 15:00:06 +0100</pubDate>
      
      <guid>/posts/028-gradle-contract-tests/</guid>
      <description>Q: How do I define contract tests which can be run on-demand from Gradle while ignoring them from unit test runs?
Here, I&amp;rsquo;ll add a test which is ignored when running ./gradlew test but it can be triggered when needed (eg. from a separate Jenkins Job).
The current directory structure look this
The first step is to exclude all the tests under contracts/
test { ... exclude(&amp;#39;**/contracts/*.*&amp;#39;) } Then we&amp;rsquo;ll define another Gradle task so that contract tests can be executed on demand</description>
    </item>
    
  </channel>
</rss>