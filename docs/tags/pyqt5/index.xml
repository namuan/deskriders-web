<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pyqt5 on deskriders</title>
    <link>/tags/pyqt5/</link>
    <description>Recent content in pyqt5 on deskriders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Jan 2020 11:51:10 +0000</lastBuildDate>
    
	<atom:link href="/tags/pyqt5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overlay button on a PyQt5 widget</title>
      <link>/posts/007-pyqt5-overlay-button-widget/</link>
      <pubDate>Thu, 02 Jan 2020 11:51:10 +0000</pubDate>
      
      <guid>/posts/007-pyqt5-overlay-button-widget/</guid>
      <description>This is a short post on how to add a floating button on top of a widget in PyQt5.
First, we&#39;ll define the button and the relative positioning.
class FloatingButtonWidget(QtWidgets.QPushButton): #1 def __init__(self, parent): super().__init__(parent) self.paddingLeft = 5 self.paddingTop = 5 def update_position(self): if hasattr(self.parent(), &amp;#39;viewport&amp;#39;): parent_rect = self.parent().viewport().rect() else: parent_rect = self.parent().rect() if not parent_rect: return x = parent_rect.width() - self.width() - self.paddingLeft y = self.paddingTop #3 self.setGeometry(x, y, self.</description>
    </item>
    
  </channel>
</rss>