<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on deskriders</title>
    <link>/categories/programming/</link>
    <description>Recent content in programming on deskriders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 26 Nov 2024 11:49:29 +0000</lastBuildDate><atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Quick Guide to Downloading DevDocs Documentation</title>
      <link>/posts/1732621769-devdocs-offline-documentation-llm/</link>
      <pubDate>Tue, 26 Nov 2024 11:49:29 +0000</pubDate>
      
      <guid>/posts/1732621769-devdocs-offline-documentation-llm/</guid>
      <description>Here is a quick way to download a copy of the documentation for any package available at https://devdocs.io
git clone https://github.com/freeCodeCamp/devdocs.git &amp;amp;&amp;amp; cd devdocs Replace the existing Dockerfile with this:
# Stage 1: Setup dependencies FROM ruby:3.3.6 as builder ENV LANG=C.UTF-8 ENV ENABLE_SERVICE_WORKER=true WORKDIR /devdocs RUN apt-get update &amp;amp;&amp;amp; \ apt-get -y install git nodejs libcurl4 &amp;amp;&amp;amp; \ gem install bundler &amp;amp;&amp;amp; \ rm -rf /var/lib/apt/lists/* COPY Gemfile Gemfile.lock Rakefile /devdocs/ RUN bundle install --system &amp;amp;&amp;amp; \ rm -rf ~/.</description>
    </item>
    
    <item>
      <title>Auto-scroll to bottom of infinite scroll page using Microsoft Playwright</title>
      <link>/posts/1672317337-questions-2022-12-29/</link>
      <pubDate>Thu, 29 Dec 2022 12:35:37 +0000</pubDate>
      
      <guid>/posts/1672317337-questions-2022-12-29/</guid>
      <description>These two functions will help with scrolling to the bottom of the page.
def scroll_speed(): return random.randint(300, 500) def scroll_to_end(page): current_scroll_position, new_height = 0, 1 while current_scroll_position &amp;lt;= new_height: page.evaluate(f&amp;#34;&amp;#34;&amp;#34;() =&amp;gt; {{ window.scrollTo(0, {current_scroll_position}); }} &amp;#34;&amp;#34;&amp;#34;) new_height = page.evaluate(&amp;#34;&amp;#34;&amp;#34;() =&amp;gt; { return document.body.scrollHeight; } &amp;#34;&amp;#34;&amp;#34;) current_scroll_position += scroll_speed() logging.info(f&amp;#34;current_scroll_position: {current_scroll_position}, new_height: {new_height}&amp;#34;) time.sleep(2) Full source code
#!/usr/bin/env python3 import logging import random import time from argparse import ArgumentParser, RawDescriptionHelpFormatter from pathlib import Path from dotenv import load_dotenv from playwright.</description>
    </item>
    
  </channel>
</rss>
