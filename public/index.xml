<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>deskriders</title>
    <link>//localhost:1313/</link>
    <description>Recent content on deskriders</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 May 2025 10:00:25 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Http Rider :: Cross-Platform Open Source Desktop API Client</title>
      <link>//localhost:1313/projects/http-rider/</link>
      <pubDate>Sun, 01 Dec 2019 12:21:06 +0000</pubDate>
      <guid>//localhost:1313/projects/http-rider/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://httprider.com&#34;&gt;HttpRider&lt;/a&gt; is a cross-platfom open souce desktop API client built using Python and PyQt.&#xA;It is a lean alternative to Postman and other tools developed using Electron.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/http-rider-osx/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/namuan/http-rider-osx?label=macos&#34; alt=&#34;MacOS Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/http-rider-win/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/namuan/http-rider-win?label=windows&#34; alt=&#34;Windows Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/http-rider/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/namuan/http-rider?label=Linux&#34; alt=&#34;Linux Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/http-rider/blob/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/namuan/http-rider.svg&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/deskriders_twt&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/deskriders_twt.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/httprider-cover-image.png&#34; alt=&#34;HttpRider Cover Image&#34;&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;features&#34;&gt;Features:&lt;/h5&gt;&#xA;&lt;p&gt;🚀 Open source and Cross-Platform&lt;/p&gt;&#xA;&lt;p&gt;🚀 Lean and Faster than Java/Electron alternatives&lt;/p&gt;&#xA;&lt;p&gt;🚀 OpenAPI V3 exporter: You can export to OpenAPI v3 including the request/response schema which is lacking in other clients.&lt;/p&gt;&#xA;&lt;p&gt;🚀 Feature rich generators: Generating code for running performance tests using Locust.io or Slowcooker. Monitor with Runscope or just generate tests using Apickli or RestAssured.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TradingUtils :: Collection of scripts and utilities for stock market analysis, strategies</title>
      <link>//localhost:1313/projects/trading-utils/</link>
      <pubDate>Sun, 29 Aug 2021 09:27:38 +0000</pubDate>
      <guid>//localhost:1313/projects/trading-utils/</guid>
      <description>&lt;p&gt;👉 &lt;a href=&#34;https://github.com/namuan/trading-utils&#34;&gt;https://github.com/namuan/trading-utils&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/trading-utils.gif&#34; alt=&#34;TradingUtils&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kube Rider :: Desktop Kubernetes Client</title>
      <link>//localhost:1313/projects/kube-rider/</link>
      <pubDate>Sun, 13 Oct 2019 08:46:20 +0000</pubDate>
      <guid>//localhost:1313/projects/kube-rider/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/kube-rider&#34;&gt;KubeRider&lt;/a&gt; is a simple desktop client for working with Kubernetes.&#xA;It is a wrapper over kubectl which means you don&amp;rsquo;t have to remember CLI options and arguments.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/kuberider-cover-image.png&#34; alt=&#34;KubeRider Cover Image&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;downloads&#34;&gt;Downloads&lt;/h4&gt;&#xA;&lt;p&gt;Downloads are currently only available for MacOS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/kube-rider-osx/releases/latest&#34;&gt;Mac OS App&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;features&#34;&gt;Features:&lt;/h5&gt;&#xA;&lt;p&gt;🚀 Uses kubectl so no extra configuration required&lt;/p&gt;&#xA;&lt;p&gt;🚀 Display kubectl commands for learning&lt;/p&gt;&#xA;&lt;p&gt;🚀 Context and Namespace switching&lt;/p&gt;&#xA;&lt;p&gt;🚀 Pod list and watching&lt;/p&gt;&#xA;&lt;p&gt;🚀 Create/Delete Pods&lt;/p&gt;&#xA;&lt;p&gt;🚀 List Pod containers and Events&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dev Rider :: Development Tools/Utilities In One Place</title>
      <link>//localhost:1313/projects/dev-rider/</link>
      <pubDate>Fri, 17 Jan 2020 08:46:26 +0000</pubDate>
      <guid>//localhost:1313/projects/dev-rider/</guid>
      <description>&lt;p&gt;There is a serious problem with the state of simple development tools on the internet.&#xA;Most of the websites providing simple encoders/decoders/formatters/prettifiers are filled with ads and popups 😷 which makes it difficult and risky to use.&#xA;And then there is also a huge problem with privacy 👀 and leaking any private data that is used on any of these websites.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/dev-rider&#34;&gt;DevRider&lt;/a&gt; is an attempt to provide a desktop tool which includes a shell and addins for various utilities.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tube Stats :: Export Youtube Comments</title>
      <link>//localhost:1313/projects/tube-stats/</link>
      <pubDate>Tue, 25 Dec 2018 09:27:30 +0000</pubDate>
      <guid>//localhost:1313/projects/tube-stats/</guid>
      <description>&lt;p&gt;Completely serverless e-commerce service built using Python, Serverless Framework and DynamoDB and deployed on AWS Platform.&lt;/p&gt;&#xA;&lt;p&gt;👉 &lt;a href=&#34;https://tubestats.bettercallbots.com/&#34;&gt;TubeStats&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/tubestats-cover-image.png&#34; alt=&#34;TubeStats&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Files :: Dockerfile(s) for NodeJS, Python, Java, Ruby etc</title>
      <link>//localhost:1313/projects/docker-files/</link>
      <pubDate>Fri, 18 Jan 2019 09:27:38 +0000</pubDate>
      <guid>//localhost:1313/projects/docker-files/</guid>
      <description>&lt;p&gt;👉 &lt;a href=&#34;https://docker-files.com/&#34;&gt;docker-files&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/dockerfiles-cover-image.png&#34; alt=&#34;Dockerfiles&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-05-25</title>
      <link>//localhost:1313/posts/1748181366-linklist-2025-05-25/</link>
      <pubDate>Sun, 25 May 2025 10:00:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1748181366-linklist-2025-05-25/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomrneatherwaygh-slack&#34;&gt;&lt;a href=&#34;https://github.com/rneatherway/gh-slack&#34;&gt;https://github.com/rneatherway/gh-slack&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* This project provides a means of archiving a Slack conversation or thread as markdown.&#xA;* For convenience, it is installable as a gh extension: `gh extension install https://github.com/rneatherway/gh-slack` and then upgrade with `gh extension upgrade gh-slack`&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomautomataaicodeguidetabreadme-ov-filevibe&#34;&gt;&lt;a href=&#34;https://github.com/automata/aicodeguide?tab=readme-ov-file#vibe&#34;&gt;https://github.com/automata/aicodeguide?tab=readme-ov-file#vibe&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is an extensive guide on how to use Large Language Models (LLMs) for coding purposes. Here&amp;rsquo;s a summary of the main points:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Getting started with LLMs&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Choose an LLM tool, such as Cursor Agent or Aider.&lt;/li&gt;&#xA;&lt;li&gt;Set up your development environment and project structure.&lt;/li&gt;&#xA;&lt;li&gt;Create a PRD (Product Requirements Document) to guide your LLM&amp;rsquo;s implementation.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;LLM Training and Guidelines&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-03-30</title>
      <link>//localhost:1313/posts/1743339206-linklist-2025-03-30/</link>
      <pubDate>Sun, 30 Mar 2025 10:00:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1743339206-linklist-2025-03-30/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomfocused-dot-iohotmic&#34;&gt;&lt;a href=&#34;https://github.com/focused-dot-io/hotmic&#34;&gt;https://github.com/focused-dot-io/hotmic&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Lightweight desktop application for audio transcription using Groq API and Whisper-large-v3 model&#xA;* Press global shortcut to start/stop recording&#xA;* Audio sent to Groq API for transcription&#xA;* Results automatically copied to clipboard&#xA;* Visual feedback during recording and processing&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomjbellisbrokk&#34;&gt;&lt;a href=&#34;https://github.com/jbellis/brokk/&#34;&gt;https://github.com/jbellis/brokk/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Brokk: first code assistant that understands code semantically, designed for large codebases&#xA;- Run using jbang (recommended): install jbang and run `jbang run brokk@jbellis/brokk` or download JAR and run manually&#xA;- Features:&#xA;  - Agentic search/code retrieval&#xA;  - Automatically capture context from search results&#xA;  - Capture/incorporate external context using &amp;#34;Run&amp;#34; combined with &amp;#34;Capture Text&amp;#34;/&amp;#34;Edit Files&amp;#34;&#xA;  - Undo includes filesystem changes&#xA;  - Use History Panel to keep track, undo, or redo changes&#xA;- Scenarios:&#xA;  - Identify commit causing regression using `git bisect`&#xA;  - Load commit and files changed by that commit as editable context&#xA;  - Tell LLM to look at changes to see what could cause problem&#xA;- Real-world tasks:&#xA;  - Make complex, multi-file edits with o1pro&#xA;  - Use Brokk to help with poorly documented dependencies&#xA;  - Summarize classes using `Summarize Fields` and use globbing&#xA;- Limitations:&#xA;  - &amp;#34;Stop&amp;#34; button not working reliably during search (langchain4j/langchain4j#2658)&#xA;  - Joern needs to run delombok before analysis can begin&#xA;  - No automatic running of tests&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomrefly-airefly&#34;&gt;&lt;a href=&#34;https://github.com/refly-ai/refly&#34;&gt;https://github.com/refly-ai/refly&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Refly is an open-source AI-native creation engine powered by 13+ leading AI models.&#xA;&#xA;* # Features and Capabilities&#xA;- Multi-threaded architecture for parallel management of independent conversation contexts&#xA;- Integration with 13+ leading language models&#xA;- Support for model hybrid scheduling and parallel processing&#xA;- Flexible model switching mechanism with unified conversation interface&#xA;- Multi-model knowledge base collaboration&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomzajakofallogical&#34;&gt;&lt;a href=&#34;https://github.com/zajako/Fallogical&#34;&gt;https://github.com/zajako/Fallogical&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Fallogical is an application that listens to conversations, detects logical fallacies in real-time, and interrupts with explanations when fallacies are identified using local Ollama models for AI processing.&#xA;* Real-time audio recording and transcription&#xA;* Logical fallacy detection using local Ollama AI models&#xA;* Voice interruptions with fallacy explanations&#xA;* Support for detecting common logical fallacies like ad hominem, straw man, appeal to authority, etc.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomevoluteurisomorphic-table-cards&#34;&gt;&lt;a href=&#34;https://github.com/evoluteur/isomorphic-table-cards&#34;&gt;https://github.com/evoluteur/isomorphic-table-cards&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Isomorphic-Table-Cards: a JavaScript class for Table and Cards views with animated transitions&#xA;* Uses Vanilla Javascript, CSS, and HTML&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomcaioricciuticr-mac-helper&#34;&gt;&lt;a href=&#34;https://github.com/caioricciuti/cr-mac-helper&#34;&gt;https://github.com/caioricciuti/cr-mac-helper&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* CR-Mac Helper is a personal project designed to streamline Mac maintenance and management, automating cleaning, auditing, and optimizing macOS environment.&#xA;* The script offers various modules for:&#xA; + App Cleanup and Management&#xA; + Path Management&#xA; + Cache and Temp File Management&#xA; + Login Items Management&#xA; + System Maintenance&#xA; + System Optimization&#xA; + Network Optimization&#xA; + Battery Optimization (for MacBooks)&#xA; + Security Cleanup&#xA; + Hidden Folders Cleanup&#xA; + System Audit and Reports&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcommartin226vibe-draw&#34;&gt;&lt;a href=&#34;https://github.com/martin226/vibe-draw&#34;&gt;https://github.com/martin226/vibe-draw&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Turn your roughest sketches into stunning 3D worlds by vibe drawing&#xA;* Sketch: Draw freely on the 2D canvas&#xA;* Enhance: Use the &amp;#34;Improve Drawing&amp;#34; button to refine sketches into detailed, polished drawings&#xA;* Transform: Click &amp;#34;Make 3D&amp;#34; to convert your drawing into a 3D model&#xA;* Build: Add your 3D models to the world by switching to the 3D World tab&#xA;* Iterate: Edit and refine your 3D models by sketching or by writing a text prompt&#xA;* Export: Export your 3D world with 1 click in a standard format (.glTF)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-03-22</title>
      <link>//localhost:1313/posts/1743338145-linklist-2025-03-22/</link>
      <pubDate>Sat, 22 Mar 2025 18:00:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1743338145-linklist-2025-03-22/</guid>
      <description>&lt;h2 id=&#34;httpswwwevanmillerorgfunctional-tests-as-a-tree-of-continuationshtml&#34;&gt;&lt;a href=&#34;https://www.evanmiller.org/functional-tests-as-a-tree-of-continuations.html&#34;&gt;https://www.evanmiller.org/functional-tests-as-a-tree-of-continuations.html&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. **Eliminates code duplication**: No need to repeat steps when testing different actions in the same step.&#xA;2. **Eliminates most setup code**: Setup can be done as part of the testing tree with no performance penalty.&#xA;3. **Pinpoints source of failing tests**: Failing tests are immediately stopped before running child nodes, making it easier to find the source of failures.&#xA;4. **Well-structured tests**: The test hierarchy is clear and easy to understand, with a 1-1 mapping between nodes and something the user sees.&#xA;5. **Previous responses in scope**: All previous responses are available in the response variables.&#xA;&#xA;**Why this approach hasn&amp;#39;t been widely adopted:**&#xA;&#xA;1. **OO language tendencies**: Many OO languages encourage a &amp;#34;wrecking ball&amp;#34; mentality when it comes to unit tests, destroying all possible state after each test.&#xA;2. **Inefficiency**: Testing every rung on a ladder can be inefficient and wasteful.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomcodespin-aicodespin-chrome-extension&#34;&gt;&lt;a href=&#34;https://github.com/codespin-ai/codespin-chrome-extension&#34;&gt;https://github.com/codespin-ai/codespin-chrome-extension&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* This Chrome Extension allows you to use Claude and ChatGPT to edit your local project using new File System APIs available on Chrome.&#xA;* The extension is not yet available on the Chrome Web Store (it takes weeks for approval), so it must be installed manually.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcompatelnavctrlspeak&#34;&gt;&lt;a href=&#34;https://github.com/patelnav/ctrlspeak&#34;&gt;https://github.com/patelnav/ctrlspeak&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Minimal Interface: Runs quietly in the background via the command line&#xA;* Triple-Tap Magic: Start/stop recording with a quick Ctrl triple-tap - Auto-Paste: Text lands right where you need it, no extra clicks&#xA;* Audio Cues: Hear when recording begins and ends&#xA;* Mac Optimized: Harnesses Apple Silicon&amp;#39;s MPS for blazing performance&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomowulveryckgomcptest&#34;&gt;&lt;a href=&#34;https://github.com/owulveryck/gomcptest&#34;&gt;https://github.com/owulveryck/gomcptest&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A proof of concept demonstrating Model Context Protocol (MCP) implementation with a custom-built host&#xA;* Enabling easy testing of agentic systems through MCP&#xA;* Primarily written from scratch for clarity on underlying mechanisms&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomabilzerianllm-prompt-library&#34;&gt;&lt;a href=&#34;https://github.com/abilzerian/LLM-Prompt-Library&#34;&gt;https://github.com/abilzerian/LLM-Prompt-Library&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* This repository contains a curated collection of prompts for various large language models (LLMs) like Deepseek, GPT o3, Claude 3 Opus, Llama3, Gemini, and others.&#xA;* The library includes several tools to help you work with prompts:&#xA;    + Prompt Validator - Validates the format and contents of prompt files&#xA;    + Prompt Mixer - Create new prompts by mixing and matching elements from existing prompts&#xA;    + Token Counter - Analyze prompt files to count tokens and estimate API costs&#xA;    + Prompt Analyzer - Evaluate the quality of prompts and get suggestions for improvements&#xA;    + Prompt Evolution - Automatically optimize prompts through iterative self-improvement cycles&#xA;    + Financial Metacognition - Analyze AI interpretations of financial prompts to detect biases and limitations&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomcasparwyliecascii-core&#34;&gt;&lt;a href=&#34;https://github.com/casparwylie/cascii-core&#34;&gt;https://github.com/casparwylie/cascii-core&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Cascii is a web-based ASCII and Unicode diagram builder written in vanilla Javascript.&#xA;* It has zero dependencies on any servers, web packing, libraries, and is no-markup and no-stylesheets.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomtrycuacomputer&#34;&gt;&lt;a href=&#34;https://github.com/trycua/computer&#34;&gt;https://github.com/trycua/computer&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Create and run high-performance macOS and Linux VMs on Apple Silicon, with built-in support for AI agents.&#xA;* Library&#xA;  * Lume: CLI for running macOS/Linux VMs with near-native performance using Apple&amp;#39;s Virtualization.Framework&#xA;  * Computer: Computer-Use Interface (CUI) framework for interacting with macOS/Linux sandboxes&#xA;  * Agent (Experimental): Computer-Use Agent (CUA) framework for running agentic workflows in macOS/Linux dedicated sandboxes&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsarxivorgabs250310737&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2503.10737&#34;&gt;https://arxiv.org/abs/2503.10737&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Title: Commenting Higher-level Code Unit: Full Code, Reduced Code, or Hierarchical Code Summarization&#xA;* Abstract: Commenting code is a crucial activity in software development, as it aids in facilitating future maintenance and updates.&#xA;* Researchers have proposed various automated code summarization (ACS) techniques to automatically generate comments/summaries for given code units.&#xA;* ACS techniques primarily focus on generating summaries for code units at the method level.&#xA;* Higher-level code units, such as file-level and module-level code units, are highly useful for quickly gaining a macro-level understanding of software components and architecture.&#xA;* To fill this gap, we conduct a systematic study on how to use LLMs for commenting higher-level code units.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpswwwredditcomrchatgptcodingcomments1jdi4o6i_finetuned_qwen_25_coder_on_a_single_repo_and&#34;&gt;&lt;a href=&#34;https://www.reddit.com/r/ChatGPTCoding/comments/1jdi4o6/i_finetuned_qwen_25_coder_on_a_single_repo_and/&#34;&gt;https://www.reddit.com/r/ChatGPTCoding/comments/1jdi4o6/i_finetuned_qwen_25_coder_on_a_single_repo_and/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Tl;dr: The fine-tuned model achieves a 47% improvement in the code completion task (tab autocomplete). Accuracy goes from 25% to 36% (exact match against ground truth) after a short training run of only 500 iterations on a single RTX 4090 GPU.&#xA;* Highlights of the experiment:&#xA;* Model: qwen2.5-coder 14b, 4-bit quantized&#xA;* Training data: Svelte source files from this repo: https://github.com/hcengineering/platform&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsclaudioukpostsunvibehtml&#34;&gt;&lt;a href=&#34;https://claudio.uk/posts/unvibe.html&#34;&gt;https://claudio.uk/posts/unvibe.html&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Unvibe is an open-source tool that uses large language models to generate code for a given set of specifications. Here&amp;#39;s a summary of the article:&#xA;&#xA;**Key Features**&#xA;&#xA;* Unvibe can be used to generate code in various programming languages.&#xA;* It uses a simple tree search algorithm to explore the space of possible programs.&#xA;* The algorithm starts with a random initial tree spread and attempts different LLM temperatures before picking the most promising nodes.&#xA;* Unvibe can run on a Macbook or other low-power hardware.&#xA;&#xA;**Models**&#xA;&#xA;* Small coding models (~7B params) seem to work well for Unvibe, such as qwen2.5-coder:7b and Claude Haiku.&#xA;* Large generic models (&amp;gt;20B params) are also effective, but may be slower due to their larger size.&#xA;* Reasoning models can sometimes help, but are generally slower than coding models.&#xA;&#xA;**Search Algorithm**&#xA;&#xA;* Unvibe uses a simple tree search algorithm that is suitable for running on low-power hardware.&#xA;* The algorithm starts with a random initial tree spread and attempts different LLM temperatures before picking the most promising nodes.&#xA;&#xA;**Sandboxing**&#xA;&#xA;* Unvibe can run on your local machine, but this is not recommended due to the risk of running code generated by an LLM.&#xA;* Running Unvibe in a Docker container or as a separate user with limited permissions is a safer option.&#xA;&#xA;**Future Features**&#xA;&#xA;* HTML-based UI to explore the search graph and look at the reward function rise.&#xA;* Support for multiple LLMs, with Unvibe swapping between them if the score plateaus.&#xA;* Integration with Pytest.&#xA;* Support for other programming languages.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomrobertpiosikgemini-coder&#34;&gt;&lt;a href=&#34;https://github.com/robertpiosik/gemini-coder&#34;&gt;https://github.com/robertpiosik/gemini-coder&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Copy folders and files for chatbots or initialize them hands-free using Gemini Coder&amp;#39;s browser extension&#xA;* Use the free Gemini API for FIM completions, file refactoring, and applying AI-suggested changes&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcommaxnowackanthropic-proxy&#34;&gt;&lt;a href=&#34;https://github.com/maxnowack/anthropic-proxy&#34;&gt;https://github.com/maxnowack/anthropic-proxy&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A proxy server that transforms Anthropic API requests to OpenAI format and sends it to openrouter.ai.&#xA;* Enables use of Anthropic&amp;#39;s API format with OpenAI-compatible endpoints by sending requests through the proxy server.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomprvnsmpthfinetune-code-assistant&#34;&gt;&lt;a href=&#34;https://github.com/prvnsmpth/finetune-code-assistant/&#34;&gt;https://github.com/prvnsmpth/finetune-code-assistant/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Blog post: Build Your Own GitHub Copilot&#xA;* This repo contains:&#xA;*   - Scripts for generating a fill-in-the-middle (FIM) dataset from a codebase &#xA;*   - A Jupyter notebook for running SFT on the generated FIM dataset&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomsantinicunvibe&#34;&gt;&lt;a href=&#34;https://github.com/santinic/unvibe&#34;&gt;https://github.com/santinic/unvibe&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Unvibe is a tool that generates alternative implementations for functions and classes annotated with `@ai`, which has been demonstrated to produce better results than traditional code generation alone.&#xA;* It&amp;#39;s particularly effective on large projects with decent test coverage and works with most AI providers, including local Ollama, OpenAI, DeepSeek, Claude, and Gemini.&#xA;* To use Unvibe, add it as a dependency to your project with `pip install unvibe`, define a new function in your existing Python project, annotate it with `@ai`, and write unit tests to define how the function should behave.&#xA;* Use `unvibe` command to search for a valid implementation that passes all the tests, generating many alternatives and feeding back test errors to the LLM until a correct implementation is found.&#xA;* Configuration file can be created in `.unvibe.toml` with options such as provider, model, temperature, and cache settings.&#xA;* Running Unvibe on your local machine can be risky due to code generation by an LLM; recommended practice is to run it inside a Docker container or create a new user with limited permissions.&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-03-15</title>
      <link>//localhost:1313/posts/1743337329-linklist-2025-03-15/</link>
      <pubDate>Sat, 15 Mar 2025 18:00:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1743337329-linklist-2025-03-15/</guid>
      <description>&lt;h2 id=&#34;httpssetosaioevmarkov-chains&#34;&gt;&lt;a href=&#34;https://setosa.io/ev/markov-chains/&#34;&gt;https://setosa.io/ev/markov-chains/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Markov chains are mathematical systems that hop from one &amp;#34;state&amp;#34; to another.&#xA;* A state space is a list of all possible states in a system.&#xA;* A Markov chain tells you the probability of hopping, or &amp;#34;transitioning,&amp;#34; from one state to any other state.&#xA;* Real modelers use a &amp;#34;transition matrix&amp;#34; to tally transition probabilities instead of drawing diagrams.&#xA;* The number of cells in a transition matrix grows quadratically as you add states to your Markov chain.&#xA;* One use of Markov chains is to include real-world phenomena in computer simulations.&#xA;* A two-state Markov chain can mimic the &amp;#34;stickyness&amp;#34; of real-world data, such as weather patterns.&#xA;* Markov chains are used by meteorologists, ecologists, computer scientists, and financial engineers to model big phenomena.&#xA;* Examples of Markov chains include PageRank algorithm used by Google and customizable Markov chains in a playground.&#xA;* You can access more examples and explanations at setosa.io/markov or visit the Explained Visually project homepage.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgistgithubcomhalljson4a6ca0f8f37af82784f32786b63f163b&#34;&gt;&lt;a href=&#34;https://gist.github.com/halljson/4a6ca0f8f37af82784f32786b63f163b&#34;&gt;https://gist.github.com/halljson/4a6ca0f8f37af82784f32786b63f163b&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Define main function: `get_chain(ticker, expiration_list)`&#xA;  * Queries market data for options contracts&#xA;  * Iterates over expiration list and contract details&#xA;  * Processes data into pandas DataFrame&#xA;* Define additional helper function:&#xA;  + `get_individual(ticker, exp, strike, kind)`: gets individual option snapshot&#xA;* Use IB connection to execute requests&#xA;* Handle potential errors with `ib.sleep(0.025)`&#xA;* Set display options for pandas DataFrame&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomdhravyaapple-mcp&#34;&gt;&lt;a href=&#34;https://github.com/Dhravya/apple-mcp&#34;&gt;https://github.com/Dhravya/apple-mcp&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* This is a collection of apple-native tools for the MCP protocol.&#xA;* To install Apple MCP for Claude Desktop automatically via Smithery, use:&#xA;npx -y @smithery/cli@latest install @Dhravya/apple-mcp --client claude&#xA;* Or for cursor, use:&#xA;npx -y @smithery/cli@latest install @Dhravya/apple-mcp --client cursor&#xA;&#xA;* Messages can be sent using the Apple Messages app or read out.&#xA;* Notes can be listed, searched and read in the Apple Notes app.&#xA;* Contacts can be searched for sending messages.&#xA;* Emails can be sent with multiple recipients, scheduled and searched.&#xA;* Reminders can be listed, searched and created with optional due dates and notes.&#xA;* TODO: Search and open calendar events in Apple Calendar app, photos in Apple Photos app, and music in Apple Music app.&#xA;* Commands can be daisy-chained to create workflows.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomplatops-aigoosecode-server&#34;&gt;&lt;a href=&#34;https://github.com/PlatOps-AI/goosecode-server&#34;&gt;https://github.com/PlatOps-AI/goosecode-server&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Browser-Based Development: Access VS Code directly from your browser&#xA;- Goose AI Agent: Pre-installed and configured Goose AI Coding agent&#xA;- Shared Terminal Session: The same Goose session is visible in all browser windows&#xA;- Goose Terminal API: REST API for sending commands to the terminal and retrieving session logs&#xA;- Streaming Conversations: Real-time streaming of Goose AI conversations using Server-Sent Events (SSE)&#xA;- Material Design: Dark theme with Material icons for a beautiful coding experience&#xA;- Secure Environment: Password-protected VS Code Server instance&#xA;- Git Integration: Git pre-installed and ready for repository operations&#xA;- Persistent Configuration: Environment variables and configuration preserved between sessions (Unless workspace is deleted)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcommwalkerrbookmarkcanvas&#34;&gt;&lt;a href=&#34;https://github.com/mwalkerr/BookmarkCanvas&#34;&gt;https://github.com/mwalkerr/BookmarkCanvas&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* This plugin provides a canvas for organizing bookmarks in IntelliJ IDEs such as IntelliJ IDEA, PyCharm, Android Studio, and WebStorm.&#xA;* The goal is to make it easy to create a visual representation both of bookmarks and of the relationships between them.&#xA;* The canvas should make it easy to quickly jump to a bookmarked location.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcombradd3rsfull-stack-starter-backend&#34;&gt;&lt;a href=&#34;https://github.com/Bradd3rs/full-stack-starter-backend&#34;&gt;https://github.com/Bradd3rs/full-stack-starter-backend&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- 🚀 FastAPI + PostgreSQL Backend: The perfect match for your Next.js Frontend!&#xA;  * 🔥 FastAPI - Lightning-fast API with automatic docs (seriously, it&amp;#39;s FAST!)&#xA;  * 🐘 PostgreSQL - Reliable database that just works&#xA;  * 🐳 Docker - One command to rule them all&#xA;  * 🔄 CORS - Already configured for your frontend needs&#xA;  * 📝 Todo API - Ready-to-use example endpoints&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpstruptinatusubstackcomppayments-engineering-playbookr2r26nftriedredirecttrue&#34;&gt;&lt;a href=&#34;https://truptinatu.substack.com/p/payments-engineering-playbook?r=2r26nf&amp;amp;triedRedirect=true&#34;&gt;https://truptinatu.substack.com/p/payments-engineering-playbook?r=2r26nf&amp;amp;triedRedirect=true&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* In payments engineering, it&amp;#39;s essential to have an architecture that facilitates easy and accurate money movement functions with domain awareness for long-term scalability and regulatory compliance in mind.&#xA;* Best practices include:&#xA;    + Log every event (request - response calls) and use a state-machine on top of this database to access the latest state.&#xA;    + Build a double entry ledger (reconciliation daily EOD).&#xA;    + Always store money in integer format (in cents), not float ($ in decimal).&#xA;    + Ensure idempotency for consistent responses.&#xA;* Audited financials require immutable and double entry ledgers.&#xA;* A Payments PM should map out all events triggering a payment capture() call to ensure consistency.&#xA;* Understanding your codebase and state machine is crucial for architecting a good payments engineering platform.&#xA;* Best practices include:&#xA;    + Using microservices architecture to avoid spaghetti code.&#xA;    + Having a consistent approach when displaying pricing on product SKUs or in the cart.&#xA;    + Optimistic locking (tx_id, event#) on database logs.&#xA;    + Maintaining an immutable ledger and a transaction state machine for auditing.&#xA;* Data engineering and Data Science use the state machine&amp;#39;s latest state for analysis.&#xA;* Always store money in cents for calculations to avoid inconsistencies.&#xA;* Use AWS instead of internal datastores for industry-guaranteed reliability.&#xA;* Immutable ledgers are essential for audited financials.&#xA;* Consider mapping out events triggering a payment capture() call for consistency.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomdnakovanon-kode&#34;&gt;&lt;a href=&#34;https://github.com/dnakov/anon-kode&#34;&gt;https://github.com/dnakov/anon-kode&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Terminal-based AI coding tool that uses any model supporting OpenAI-style API&#xA;* Fixes spaghetti code&#xA;* Explains function purpose&#xA;* Runs tests, shell commands and more&#xA;* Manually set models in /config if not available on list&#xA;* Requires openai-like endpoint to work&#xA;* Install with npm install -g anon-kode&#xA;* Run with pnpm i, pnpm run dev, pnpm run build&#xA;* Get verbose debug logs with NODE_ENV=development pnpm run dev --verbose --debug&#xA;* Submit bugs via /bug, creates GitHub issue template&#xA;* Use at own risk, no telemetry or backend servers other than AI providers&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpshandbookgitlabcomhandbookproductproduct-principles&#34;&gt;&lt;a href=&#34;https://handbook.gitlab.com/handbook/product/product-principles/&#34;&gt;https://handbook.gitlab.com/handbook/product/product-principles/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This document outlines a set of principles and guidelines for developing and maintaining the GitLab platform. Here&amp;#39;s a summary of the key points:&#xA;&#xA;**General Principles**&#xA;&#xA;1. **Customer First**: Prioritize customer needs and provide support for all features in paid tiers, regardless of their license level.&#xA;2. **Developer-First**: Focus on solving problems for developers first, then adapt to other personas (e.g., operations, security) while maintaining a developer-centric approach.&#xA;3. **Cloud-Native First**: Build features for cloud-native first and then support the rest, focusing on modern development flows and architectures.&#xA;&#xA;**Feature Naming**&#xA;&#xA;1. Use prepositions when referring to third-party products and services in names (e.g., &amp;#34;GitLab.com for Jira Cloud&amp;#34;).&#xA;2. Prioritize complete maturity for developers building cloud-native applications before moving to other development methodologies and personas.&#xA;3. Use a &amp;#34;modern first&amp;#34; approach, solving problems for modern development teams before addressing legacy teams.&#xA;&#xA;**Prioritization**&#xA;&#xA;1. Focus on next-generation development flows, personas, and use cases, even if they&amp;#39;re not currently adopted by your initial users.&#xA;2. Optimize GitLab to support the larger number of current and future adopters of next-generation principles.&#xA;3. Clearly communicate with users what the preferred path is and ensure that legacy methods are deprecated.&#xA;&#xA;**Core Values**&#xA;&#xA;1. **Stewardship**: Ensure that no feature is removed from Core into paid tiers, but can build additional features around existing ones for paying customers only.&#xA;2. **Preparation**: Plan ahead and invest in modern workflows and architectures to support the future needs of your users.&#xA;3. **Adaptability**: Be willing to adapt and evolve based on user feedback and changing market conditions.&#xA;&#xA;**Guidelines**&#xA;&#xA;1. Use prepositions when naming features that integrate with third-party products or services (e.g., &amp;#34;GitLab for Slack&amp;#34;).&#xA;2. Avoid using internal terminology or acronyms when referring to external products or services.&#xA;3. Document all changes, deprecations, and additions to features in a clear and concise manner.&#xA;&#xA;Overall, this document outlines a set of guidelines and principles that aim to ensure the long-term success and growth of the GitLab platform. By prioritizing customer needs, developer-centricity, cloud-native first development, and continuous improvement, GitLab can maintain its position as a leader in the DevOps and software development space.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpswwwenginesdevblogcode-navigationstack-graphs&#34;&gt;&lt;a href=&#34;https://www.engines.dev/blog/code-navigation#stack-graphs&#34;&gt;https://www.engines.dev/blog/code-navigation#stack-graphs&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* tl;dr: We explored various approaches to code navigation for AI SWEs and share our findings on what works and what doesn&amp;#39;t.&#xA;* We&amp;#39;re building the best platform to run AI SWEs with a purpose-built code navigation system.&#xA;* Current research approaches include:&#xA;    - SWE-Agent&#xA;    - CodeMonkey&#xA;    - Moatless&#xA;* Our approach is similar to OpenHands, exposing tools for finding all references and going to definition.&#xA;* Our vision for code navigation includes:&#xA;    - Scalability&#xA;    - Incremental indexing&#xA;    - Flexibility&#xA;    - Permissively licensed&#xA;* We explored different systems, including:&#xA;    - lsproxy (purpose-built LSP library)&#xA;    - Stack Graphs (advanced data structure)&#xA;        - Pros: incremental, theoretically language agnostic, fast queries&#xA;        - Cons: limited support for languages, complex files required&#xA;    - Glean (production code indexing system at Meta)&#xA;        - Pros: incremental, scalable, flexible, can navigate arbitrary commits&#xA;        - Cons: proprietary Thrift protocol, requires custom parser for languages&#xA;    - multilspy (Python library providing a convenient wrapper around LSP servers)&#xA;* Our solution is to add convenience wrapping around multilspy.&#xA;* Looking forward to further explorations and comparisons with the AI SWE community.&#xA;* Further reading:&#xA;    - Nuanced.dev&#xA;    - CodeMonkeys&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpssimonwillisonnet2025mar6aider-using-uv-as-an-installer&#34;&gt;&lt;a href=&#34;https://simonwillison.net/2025/Mar/6/aider-using-uv-as-an-installer/&#34;&gt;https://simonwillison.net/2025/Mar/6/aider-using-uv-as-an-installer/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Aider uses `pip install aider-install &amp;amp;&amp;amp; aider-install` to install in an isolated virtual environment.&#xA;* The `aider-install` package depends on the `uv` library.&#xA;* When running `aider-install`, it executes Python code that:&#xA;    + Finds the location of the `uv` binary&#xA;    + Installs Aider using `uv tool install`&#xA;    + Updates the shell to include the Aider directory in the PATH&#xA;* The installation process creates a new standalone copy of Python 3.12 and places it in `uv&amp;#39;s managed directory structure.&#xA;* The `--force` flag is used to overwrite any previous attempts at installing Aider.&#xA;* Running `uv tool update-shell` ensures that the bin directory is on the user&amp;#39;s PATH.&#xA;* This installation method is recommended for non-expert Python users due to its minimal risk of breaking the system.&#xA;* The method has significantly reduced GitHub issues related to conflicted or broken Python environments.&#xA;* An alternative installation mechanism may be preferred by experienced users.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsblog6nokorgtailscale-is-pretty-useful&#34;&gt;&lt;a href=&#34;https://blog.6nok.org/tailscale-is-pretty-useful/&#34;&gt;https://blog.6nok.org/tailscale-is-pretty-useful/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Tailscale is a useful tool for creating a virtual private network, allowing access to devices anywhere with domain shorthands.&#xA;* It was recommended after experiencing issues with DDNS and CGNAT2, which made port forwarding impossible.&#xA;* The client software needs to be installed on devices, logging in is an easy process.&#xA;* Additional benefits include:&#xA;  * Exposing a port from laptop to phone for web application testing.&#xA;  * Taildrop: file transfer between devices without close proximity.&#xA;  * Exit nodes: appointing a machine as an exit node for VPN-like functionality.&#xA;  * Mullvad integration: two-tier VPN with privacy features.&#xA;* Note that Tailscale is open-source, but some wrappers are not.&#xA;* Headscale is an open-source server implementation compatible with Tailscale&amp;#39;s client software.&#xA;* Some links to external resources mentioned in the article:&#xA;  * Dynamic DNS&#xA;  * Carrier-grade NAT&#xA;  * Home theater PC&#xA;  * Snapdrop and Pairdrop comparison&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomjlevychopdiff&#34;&gt;&lt;a href=&#34;https://github.com/jlevy/chopdiff&#34;&gt;https://github.com/jlevy/chopdiff&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpswwwbbccoukfuturearticle20250304-the-countries-that-never-locked-down-for-covid-19&#34;&gt;&lt;a href=&#34;https://www.bbc.co.uk/future/article/20250304-the-countries-that-never-locked-down-for-covid-19&#34;&gt;https://www.bbc.co.uk/future/article/20250304-the-countries-that-never-locked-down-for-covid-19&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcompysheetspysheets&#34;&gt;&lt;a href=&#34;https://github.com/PySheets/pysheets&#34;&gt;https://github.com/PySheets/pysheets&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* PySheets is a spreadsheet UI for Python, implemented in Python, running logic and saving data in the browser, using PyScript and IndexedDB.&#xA;* To run PySheets without locally installing it, simply visit pysheets.app&#xA;* To install and run PySheets on your local machine, run: pip install pysheets-app pysheets&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcombooleandilemmahn-blacklist&#34;&gt;&lt;a href=&#34;https://github.com/booleandilemma/hn-blacklist&#34;&gt;https://github.com/booleandilemma/hn-blacklist&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Tired of seeing articles from certain sources on Hacker News? HN Blacklist is for you.&#xA;* HN Blacklist is a userscript which can be run with tools like Greasemonkey and Tampermonkey right in your browser.&#xA;* Find it on Greasy Fork, or copy and paste it right from hn-blacklist.js in this repository.&#xA;* HN Blacklist provides a UI at the bottom of HN. You can add entries and see helpful output from HN Blacklist there.&#xA;* Prefix blacklist entries with source: to filter out articles.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcompsviderskiuncloud&#34;&gt;&lt;a href=&#34;https://github.com/psviderski/uncloud&#34;&gt;https://github.com/psviderski/uncloud&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This text describes a new networking system called &amp;#34;Uncloud&amp;#34; that allows multiple machines to work together without a centralized control plane or master nodes. Here&amp;#39;s a summary of how it works:&#xA;&#xA;**Key Components**&#xA;&#xA;1. **WireGuard**: Uncloud uses WireGuard for secure, encrypted communication between machines.&#xA;2. **Caddy**: Caddy is used as a reverse proxy and watches the cluster state for new services.&#xA;3. **uncloudd**: uncloudd is the CLI tool that communicates with uncloudd on target machines to launch containers.&#xA;&#xA;**How it Works**&#xA;&#xA;1. Multiple machines are provisioned, each with its own subnet (e.g., `10.210.X.2-254`).&#xA;2. Machines establish a WireGuard connection with each other, creating an overlay network.&#xA;3. When a service is run using the CLI (`uc run`), uncloudd on a target machine launches a Docker container in the bridge network.&#xA;4. The container gets a cluster-unique IP address from the bridge network and becomes accessible from other machines in the cluster.&#xA;5. Caddy watches the cluster state for new services and updates its configuration to route traffic to the new container.&#xA;&#xA;**Benefits**&#xA;&#xA;1. **Decentralized**: No need for control plane or master nodes.&#xA;2. **Fault-tolerant**: If one machine goes offline, others can still serve cluster operations.&#xA;3. **Easy maintenance**: Any machine has access to the complete cluster state and can make changes.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsarxivorgabs250302948&#34;&gt;&lt;a href=&#34;https://arxiv.org/abs/2503.02948&#34;&gt;https://arxiv.org/abs/2503.02948&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Abstract: Generating high-quality question-answer pairs for specialized technical domains remains challenging, with existing approaches facing a tradeoff between leveraging expert examples and achieving topical diversity.&#xA;* We present ExpertGenQA, a protocol that combines few-shot learning with structured topic and style categorization to generate comprehensive domain-specific QA pairs.&#xA;* Using U.S. Federal Railroad Administration documents as a test bed, we demonstrate that ExpertGenQA achieves twice the efficiency of baseline few-shot approaches while maintaining 94.4% topic coverage.&#xA;* Through systematic evaluation, we show that current LLM-based judges and reward models exhibit strong bias toward superficial writing styles rather than content quality.&#xA;* Our analysis using Bloom&amp;#39;s Taxonomy reveals that ExpertGenQA better preserves the cognitive complexity distribution of expert-written questions compared to template-based approaches.&#xA;* When used to train retrieval models, our generated queries improve top-1 accuracy by 13.02% over baseline performance, demonstrating their effectiveness for downstream applications in technical domains.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomyuruotong1automate&#34;&gt;&lt;a href=&#34;https://github.com/yuruotong1/autoMate&#34;&gt;https://github.com/yuruotong1/autoMate&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* # AI-powered Local Automation Tool&#xA;* ## Description&#xA;*  &amp;#34;Automate the tedious, reclaim your time for life&amp;#34;&#xA;* &#xA;* * autoMate is a revolutionary AI+RPA automation tool built on OmniParser that can:&#xA;*   - Understand your needs and automatically plan tasks&#xA;*   - Intelligently comprehend screen content, simulating human vision and operations&#xA;*   - Make autonomous decisions, judging and taking actions based on task requirements&#xA;*   - Support local deployment to protect your data security and privacy&#xA;*   - No-Code Automation &#xA;*   - Full Interface Control &#xA;*   - Simplified Installation &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsrivetggblog2025-02-16-sqlite-on-the-server-is-misunderstood&#34;&gt;&lt;a href=&#34;https://rivet.gg/blog/2025-02-16-sqlite-on-the-server-is-misunderstood&#34;&gt;https://rivet.gg/blog/2025-02-16-sqlite-on-the-server-is-misunderstood&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* SQLite-on-the-Server Is Misunderstood: Better At Hyper-Scale Than Micro-Scale&#xA;* We&amp;#39;re Rivet, a new open-source, self-hostable serverless platform. &#xA;* There&amp;#39;s been a lot of discussion recently about the pros and cons of SQLite on the server.&#xA;* After reading many of these conversations, I realized that my perspective on the power of SQLite-on-the-server is lopsided from popular opinion:&#xA;  + SQLite&amp;#39;s strengths really shine at scale, instead of with small hobbyist deployments.&#xA;* Background&#xA;  * Why Developers Love SQLite for Micro-Scale Deployments&#xA;    - Low infrastructure costs: No need for separate database servers—just a single file.&#xA;    - Seamless development and testing: The same database file can be used across client and server.&#xA;    - Minimal management overhead: No complex configurations or database daemons.&#xA;    - Proven reliability: It&amp;#39;s been around forever. It&amp;#39;s the world&amp;#39;s most widely deployed database and built to withstand battleships getting blown to bits.&#xA;* Tools for SQLite-on-the-server&#xA;  * Enhance SQLite with replication and high availability tools like LiteFS, Litestream, rqlite, Dqlite, and Bedrock:&#xA;    - Specifically focusing on Cloudflare Durable Objects and Turso&#xA;* Databases at Hyper-Scale Today: Sharded Databases &amp;amp; Partitioning Keys&#xA;  + High-scale systems struggle with scaling databases like Postgres or MySQL.&#xA;  + Companies often turn to sharded databases like Cassandra, ScyllaDB, DynamoDB, Vitess (sharded MySQL), and Citus (sharded Postgres).&#xA;    - These systems use partitioning keys to co-locate related &amp;amp; similarly structured data.&#xA;* Benefits of Sharded Databases&#xA;  + Efficient batch reads with data grouped in the same partition.&#xA;  + Horizontal scalability by partitioning data across nodes.&#xA;  + Optimized writes for high-ingestion workloads&#xA;* Challenges with Current Partitioning Solutions&#xA;  + Rigid schemas limiting flexibility.&#xA;  + Complex schema changes requiring significant operational overhead.&#xA;  + Complex cross-partition operations enforcing ACID properties is difficult.&#xA;  + Data inconsistency without strong constraints between tables &amp;amp; partitions.&#xA;* Enter SQLite at Scale: Cloudflare Durable Objects &amp;amp; Turso&#xA;  * Provide dynamic scaling, infinite cheap databases, global distribution, and built-in replication and durability:&#xA;    - Leverage to replace partitioning keys with SQLite database per partition&#xA;* Benefits of SQLite-Per-Partition&#xA;  + Local ACID transactions without cross-partition complexities.&#xA;  + Efficient I/O within partitions for high performance.&#xA;  + Leverage existing SQLite extensions and SQL migrations tools&#xA;  + Lazy schema migrations allowing changes on demand.&#xA;* Who are the Turso founders?&#xA;  * Founded by people who used to work at ScyllaDB and saw the challenges of large-scale partitioned databases firsthand.&#xA;* Where SQLite Still Falls Short&#xA;  + Lack of an open-source, self-hosted solution.&#xA;  + Limited database tooling like SQL browsers, ETL pipelines, monitoring, and backups.&#xA;  + Non-standard protocols for communicating with SQLite-on-the-server.&#xA;  + No case studies at hyper-scale using SQLite with this architecture.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcompathonailitewebagent&#34;&gt;&lt;a href=&#34;https://github.com/PathOnAI/LiteWebAgent&#34;&gt;https://github.com/PathOnAI/LiteWebAgent&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LiteWebAgent is an open-source library developed by PathOnAI that provides a framework for building web-agent applications using large language models (LLMs). Here&amp;#39;s an overview of LiteWebAgent:&#xA;&#xA;**Key Features:**&#xA;&#xA;1. **LLM-based web-agents**: LiteWebAgent allows developers to build web-agents using popular LLMs such as transformer-based models.&#xA;2. **Auto-login and session management**: The library provides a simple way to auto-login to websites and manage sessions, allowing the agent to interact with the website seamlessly.&#xA;3. **Task induction**: LiteWebAgent enables users to induce workflows from mind2web datasets, which are pre-defined tasks that can be executed on various websites.&#xA;4. **Workflow memory**: The library includes an &amp;#34;Agent Workflow Memory&amp;#34; module that allows developers to store and retrieve induced workflows for later use.&#xA;&#xA;**Agents:**&#xA;&#xA;LiteWebAgent provides several pre-built agents that can be used as a starting point for building web-agents:&#xA;&#xA;1. **PromptAgent**: A simple agent that uses prompt engineering to interact with websites.&#xA;2. **ContextAwarePlanningAgent**: An agent that uses context-aware planning to navigate through websites.&#xA;3. **LLMWebAgent**: A basic LLM-based web-agent that can be customized for specific tasks.&#xA;&#xA;**Integration:**&#xA;&#xA;LiteWebAgent can be integrated into various frameworks and tools, including:&#xA;&#xA;1. **Chrome extensions**: Developers can build Chrome extensions using LiteWebAgent as the AI backend server.&#xA;2. **Python APIs**: The library provides a Python API that allows developers to interact with websites and execute tasks programmatically.&#xA;3. **Other frameworks**: LiteWebAgent can be integrated into other frameworks and tools, such as TensorFlow or PyTorch.&#xA;&#xA;**Use Cases:**&#xA;&#xA;LiteWebAgent has various use cases, including:&#xA;&#xA;1. **Automating web tasks**: Developers can use LiteWebAgent to automate repetitive web tasks, such as filling out forms or clicking buttons.&#xA;2. **Web scraping**: The library can be used for web scraping tasks, where the agent extracts data from websites.&#xA;3. **E-commerce automation**: LiteWebAgent can be used to automate tasks on e-commerce websites, such as booking flights or hotels.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpswwwoxenaiblogtraining-a-rust-1-5b-coder-lm-with-reinforcement-learning-grpo&#34;&gt;&lt;a href=&#34;https://www.oxen.ai/blog/training-a-rust-1-5b-coder-lm-with-reinforcement-learning-grpo&#34;&gt;https://www.oxen.ai/blog/training-a-rust-1-5b-coder-lm-with-reinforcement-learning-grpo&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This text appears to be a blog post or article about a machine learning experiment using the GRPO (Generative Reward Policy Optimization) algorithm on a coding model. The author describes the setup of the experiment, including the dataset, reward functions, and training process.&#xA;&#xA;Here are some key points from the article:&#xA;&#xA;1. **GRPO Algorithm**: The author explains that GRPO is a type of reinforcement learning algorithm that uses generative models to optimize rewards for a policy.&#xA;2. **Dataset**: The experiment uses a small dataset of coding tasks with unit tests, including writing functions and fixing errors from the compiler.&#xA;3. **Reward Functions**: The author defines multiple reward functions, including:&#xA;&#x9;* `build`: passing the build step&#xA;&#x9;* `test`: passing the unit tests&#xA;&#x9;* `error`: fixing errors from the compiler&#xA;&#x9;* `fill_in_middle`: filling in missing code&#xA;&#x9;* `diff_given_prompt`: creating a patch/diff given a prompt&#xA;4. **Training Process**: The author describes the training process, including:&#xA;&#x9;* Training the model with the defined reward functions for a single epoch (24 hours)&#xA;&#x9;* Logging the results to Oxen.ai, which allows for visualization and monitoring of performance over time&#xA;5. **Results**: The article reports impressive results, including:&#xA;&#x9;* A 20% increase in build pass rate from 61% to 80%&#xA;&#x9;* A 15% increase in test pass rate from 22% to 37%&#xA;6. **Cost and Time**: The experiment was run on a Lambda Labs instance for under $100 over 24 hours.&#xA;7. **Future Work**: The author mentions plans to extend the dataset with additional task categories, such as creating a patch/diff given a prompt or next edit (tab) prediction.&#xA;&#xA;Overall, this article presents an exciting example of how GRPO can be applied to coding tasks and achieve impressive results in a relatively short period of time.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomafnanenayetdiffsitter&#34;&gt;&lt;a href=&#34;https://github.com/afnanenayet/diffsitter&#34;&gt;https://github.com/afnanenayet/diffsitter&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- creates semantically meaningful diffs that ignore formatting differences like spacing&#xA;- uses tree-sitter project parsers to parse source code, supporting 11 languages&#xA;- supports the following languages: Bash, C#, C++, CSS, Go, Java, OCaml, PHP, Python, Ruby, Rust, Typescript/TSX, HCL&#xA;- generates diffs with line numbers and formatting options via config file&#xA;- has logging and terminal aware formatting features&#xA;- can exclude or include specific tree-sitter node types in diffs using config file&#xA;- uses Github actions to build and publish binaries for each tagged release&#xA;- can be installed from source using cargo, brew, apk, or Docker&#xA;- supports customizing config file associations and formatting options&#xA;- provides completion files and other assets with the diffsitter_completions binary&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomx1xhlolsystem-prompts-and-models-of-ai-tools&#34;&gt;&lt;a href=&#34;https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools&#34;&gt;https://github.com/x1xhlol/system-prompts-and-models-of-ai-tools&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* 🚀 I managed to obtain FULL official v0, Manus, Cursor, Same.dev &amp;amp; Lovable system prompts and internal tools.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomjoseph-branchomni&#34;&gt;&lt;a href=&#34;https://github.com/joseph-branch/omni&#34;&gt;https://github.com/joseph-branch/omni&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Omni CLI is a command-line interface for interacting with different AI models within the same session. It&amp;#39;s currently in early alpha stages and may have bugs or incomplete functionality.&#xA;* The project follows a clean architecture with separation of concerns:&#xA;    + Contexts: Manage global state and provide access to it through hooks&#xA;    + Hooks: Encapsulate reusable logic and side effects&#xA;    + Components: UI elements that consume contexts and hooks&#xA;    + Utils: Pure utility functions&#xA;* Multiple AI Model Support: Integrates with OpenAI, Anthropic, Mistral, and Google AI models.&#xA;* Persistent Conversation Context: Maintains conversation history throughout the session.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomthe-pocketpocketflow&#34;&gt;&lt;a href=&#34;https://github.com/The-Pocket/PocketFlow&#34;&gt;https://github.com/The-Pocket/PocketFlow&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Pocket Flow: 100-line minimalist LLM framework&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcombypirobairo&#34;&gt;&lt;a href=&#34;https://github.com/bypirob/airo&#34;&gt;https://github.com/bypirob/airo&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Deploy projects directly from local computer to production server with Airo.&#xA;* Focus on building product, not managing infrastructure.&#xA;* Build and push Docker images directly from local machine to container registry.&#xA;* Deploy instantly with a single command from computer.&#xA;* Easily update configurations and containers securely using SSH.&#xA;* Set up HTTPS and reverse proxy automatically using Caddy.&#xA;* Define services in compose.yml file.&#xA;* Configure deployment details in env.yml file.&#xA;* Prepare Dockerfile for each service.&#xA;* Set up Caddyfile for automatic HTTPS and reverse proxy setup.&#xA;* Run command `airo deploy` to deploy new updates.&#xA;* Create a new project directory and navigate to it.&#xA;* Configure env.yaml file with server IP, user credentials, and services.&#xA;* Add Dockerfile to project for each service.&#xA;* Configure compose.yml file with services and their details.&#xA;* Deploy project using command `airo deploy`.&#xA;* Use `airo compose` to build and push Docker image without deploying.&#xA;* Use `airo caddy` to update Caddyfile.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomcle-bhttpdbg&#34;&gt;&lt;a href=&#34;https://github.com/cle-b/httpdbg&#34;&gt;https://github.com/cle-b/httpdbg&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* httpdbg: a tool for Python developers to debug HTTP(S) client and server requests in a Python program&#xA;* To use it, execute your program using `pyhttpdbg` command instead of `python`&#xA;* Open a browser to `http://localhost:4909` to view the requests&#xA;* Full documentation =&amp;gt; https://httpdbg.readthedocs.io/&#xA;* pip install httpdbg&#xA;* By default, both client and server requests are recorded&#xA;* To record only client requests, use the `--only-client` command line argument&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomfus3ngem-assist&#34;&gt;&lt;a href=&#34;https://github.com/Fus3n/gem-assist&#34;&gt;https://github.com/Fus3n/gem-assist&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Gem-Assist is a Python-based personal assistant that leverages Google&amp;#39;s Gemini models (and other) to help with various tasks, designed to be versatile and extensible.&#xA;* Powered by LLM: Utilizes LLMs for natural language understanding and generation.&#xA;* Tool-based architecture: Equipped with a variety of tools for tasks like web searching, file system operations, system information retrieval, Reddit interaction, running shell commands, and more.&#xA;* Customizable: Easily configure the assistant&amp;#39;s behavior and extend its capabilities with new tools.&#xA;* Simple Chat Interface: Interact with the assistant through a straightforward command-line chat interface.&#xA;* Memory: Can save notes between conversation and remember them.&#xA;* Saving Conversation: Save and load previous conversations.&#xA;* Commands: Supports creating/executing code, use /commands for more information.&#xA;* Extension: For now you are required to write some code to extend its capabilities like adding commands to CommandExecutor or making new tools.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomalan2207bulletproof-react&#34;&gt;&lt;a href=&#34;https://github.com/alan2207/bulletproof-react&#34;&gt;https://github.com/alan2207/bulletproof-react&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A simple, scalable, and powerful architecture for building production ready React applications.&#xA;* React has a diverse ecosystem with hundreds of great libraries but can be overwhelming due to the many choices.&#xA;* The repo presents a way of creating React applications using some of the best tools in the ecosystem with a good project structure that scales well.&#xA;* The goal is to serve as a collection of resources and best practices for developing React applications, showcasing practical solutions to real-world problems.&#xA;* This repo provides a solid foundation for building applications based on principles such as ease of use, maintainability, using the right tools, clean boundaries, security, performance, scalability, and early issue detection.&#xA;* The guide is opinionated but not a template or framework, allowing developers to decide what works best for their team and stay consistent with their style.&#xA;* The tools and libraries used are just suggestions, and developers can replace them with something that fits their needs better.&#xA;* Key concepts include application overview, project standards, project structure, components and styling, API layer, state management, testing, error handling, security, performance, deployment, and additional resources.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomstopngoreact-proto-lite&#34;&gt;&lt;a href=&#34;https://github.com/StopNGo/react-proto-lite&#34;&gt;https://github.com/StopNGo/react-proto-lite&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Template React Project for Fast SPA Prototyping&#xA;* A lite version of the React Proto - React TypeScript Boilerplate&#xA;* Contains only the essentials for Single Page Application (SPA) projects&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomfleuristesfleur&#34;&gt;&lt;a href=&#34;https://github.com/fleuristes/fleur&#34;&gt;https://github.com/fleuristes/fleur&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Fleur is a desktop application that serves as an app marketplace for MCPs, allowing discovery, installation, and management without using a command line.&#xA;* It&amp;#39;s made for non-technical users but is open-source and extensible for developers.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcommatiasmolinasevolving-agents&#34;&gt;&lt;a href=&#34;https://github.com/matiasmolinas/evolving-agents&#34;&gt;https://github.com/matiasmolinas/evolving-agents&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;The text describes an open-source framework called Evolving Agents Framework (EAF), which is designed to simplify the development of intelligent agents using a combination of machine learning, natural language processing, and software engineering principles.&#xA;&#xA;**Key Components**&#xA;&#xA;1. **SystemAgent**: A ReAct agent that orchestrates operations by leveraging specialized tools.&#xA;2. **ArchitectZero**: Handles solution design and multi-framework support through Providers and Adapters.&#xA;3. **SmartLibrary**: Powers semantic search capabilities for component persistence and discovery via ChromaDB.&#xA;4. **SmartAgentBus**: Enables capability-based routing for agent interactions.&#xA;5. **CreateComponentTool**: Invokes the AgentFactory to create agents from different frameworks.&#xA;&#xA;**Features**&#xA;&#xA;1. **Multi-framework support**: Supports multiple machine learning frameworks, including BeeAI and OpenAI Agents SDK.&#xA;2. **Dependency injection**: Simplifies component wiring and initialization.&#xA;3. **Modular design**: Core components are decoupled, facilitating extension and testing.&#xA;4. **Clear logging**: Provides insights into agent thinking and component interactions.&#xA;5. **LLM caching**: Reduces API costs during development by caching completions and embeddings.&#xA;&#xA;**Usage**&#xA;&#xA;1. Run the Comprehensive Demo: `python examples/invoice_processing/architect_zero_comprehensive_demo_refactored.py`&#xA;2. Explore Output files, including:&#xA;&#x9;* `architect_design_output.json`: Solution blueprint from ArchitectZero&#xA;&#x9;* `workflow_execution_output.json`: Executable workflow generated by SystemAgent&#xA;&#x9;* `smart_library_demo.json`: State of the component library after the run&#xA;3. Use the toolkit to design and process conversational forms (forms/), create and evolve agents (agent_evolution/), or explore autocomplete systems (autocomplete/).&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomgabriansaexplicit-agent&#34;&gt;&lt;a href=&#34;https://github.com/gabriansa/explicit-agent&#34;&gt;https://github.com/gabriansa/explicit-agent&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- A minimalist framework for building AI agents with full user control and zero abstraction layers&#xA;- Complete transparency: No hidden prompts or &amp;#34;magic&amp;#34; under the hood&#xA;- Full control: You define exactly how your agent behaves&#xA;- Minimal infrastructure: Only the essentials needed to run capable AI agents&#xA;- Simplicity first: Ability to build complex behaviors from simple, understandable components&#xA;&#xA;- User-defined state management is completely up to you&#xA;- Flexible implementation options for state management&#xA;- Direct manipulation of state between tools creates a simple and transparent flow of information&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomarnestrickmannnotechat&#34;&gt;&lt;a href=&#34;https://github.com/arnestrickmann/Notechat&#34;&gt;https://github.com/arnestrickmann/Notechat&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- NoteChat is a desktop application that enables you to interact with your Apple Notes through a chat interface, built with Electron and React.&#xA;- The application uses Vite as the development server and build tool for the React part of the application.&#xA;- Electron handles the desktop application wrapper and native system interactions.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomriazarbiiblncr&#34;&gt;&lt;a href=&#34;https://github.com/riazarbi/iblncr&#34;&gt;https://github.com/riazarbi/iblncr&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A command line tool for rebalancing a portfolio of stocks and ETFs via Interactive Brokers, installed with `pipx install git+https://github.com/riazarbi/iblncr.git`.&#xA;* The Interactive Brokers API requires a locally installed Trader Workstation or IB Gateway application to be used.&#xA;* To start the IB Gateway Docker container, use either:&#xA;  * Manual command: `docker run -it --rm --name broker -p 4003:4003 ghcr.io/riazarbi/ib-headless:10.30.1t`&#xA;  * Built-in launch command: `iblncr launch`&#xA;* To start the application, use: `iblncr rebalance --account &amp;lt;account_number&amp;gt; --model &amp;lt;model_file&amp;gt; --port &amp;lt;port_number&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcombytebot-aibytebot&#34;&gt;&lt;a href=&#34;https://github.com/bytebot-ai/bytebot&#34;&gt;https://github.com/bytebot-ai/bytebot&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This document provides an overview of Bytebot, a platform for building intelligent computer use agents. The agent uses AI models to understand visual contexts, interact with desktop applications, and automate tasks.&#xA;&#xA;**Key Features:**&#xA;&#xA;1.  **AI Model Integration:** Bytebot integrates with various AI models, including Anthropic Claude, OpenAI GPT-4V, Google Gemini, Mistral Large, DeepSeek, OmniParser, CLIP/ViT, Segment Anything Model (SAM), and others.&#xA;2.  **Customization:** Developers can integrate their preferred programming languages or frameworks to build agents using Bytebot&amp;#39;s REST API.&#xA;3.  **REST API:** The platform provides a REST API for easy integration with other applications.&#xA;4.  **Desktop Automation:** Bytebot allows users to automate tasks on desktop computers, including UI interactions and task automation.&#xA;&#xA;**Integrating AI Models:**&#xA;&#xA;1.  **API-Based Integration:** Use the model provider&amp;#39;s API to send screenshots and receive instructions.&#xA;2.  **Local Model Deployment:** Run smaller models locally alongside Bytebot.&#xA;3.  **Hybrid Approaches:** Combine local processing with cloud-based intelligence.&#xA;&#xA;**Building Agents:**&#xA;&#xA;1.  **Python Integration:** Ideal for data science and ML integration using libraries like requests, Pillow, and PyTorch.&#xA;2.  **JavaScript/TypeScript Integration:** Great for web-based agents using Node.js or browser environments.&#xA;3.  **Java/Kotlin Integration:** Robust options for enterprise applications.&#xA;4.  **Go Integration:** Excellent for high-performance, concurrent agents.&#xA;5.  **Rust Integration:** For memory-safe, high-performance implementations.&#xA;6.  **C#/.NET Integration:** Strong integration with Windows environments and enterprise systems.&#xA;&#xA;**Best Practices:**&#xA;&#xA;1.  **Automated Testing:** Run end-to-end tests in a consistent environment.&#xA;2.  **Web Scraping:** Automate web browsing and data collection.&#xA;3.  **UI Automation:** Create agents that interact with desktop applications.&#xA;4.  **AI Training:** Generate training data for computer vision and UI interaction models.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomjohnbean393sidekick&#34;&gt;&lt;a href=&#34;https://github.com/johnbean393/Sidekick&#34;&gt;https://github.com/johnbean393/Sidekick&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Chat with a local LLM that can respond with information from your files, folders and websites on your Mac without installing any other software.&#xA;* All conversations happen offline, and your data stays secure. &#xA;* Sidekick is a local first application –– with a built in inference engine for local models, while accomodating OpenAI compatible APIs for additional model options.&#xA;* Access files, folders, and websites from your experts, which can be individually configured to contain resources related to specific areas of interest.&#xA;* Sidekick accesses files, folders, and websites from your experts, which can be individually configured to contain resources related to specific areas of interest. &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsseeinglogiccompostsvisual-readability-patterns&#34;&gt;&lt;a href=&#34;https://seeinglogic.com/posts/visual-readability-patterns/&#34;&gt;https://seeinglogic.com/posts/visual-readability-patterns/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;This is an excellent article on improving code readability. Here&amp;#39;s a summary of the key points:&#xA;&#xA;**The importance of readability**&#xA;&#xA;Readability is crucial for maintainable and efficient software development. It allows developers to quickly understand the code, fix issues, and make changes without getting bogged down in complexity.&#xA;&#xA;**8 patterns for improving code readability**&#xA;&#xA;The article identifies 8 patterns that can help improve code readability:&#xA;&#xA;1. **Line/Operator/Operand count**: Break up long functions with fewer variables and operators.&#xA;2. **Novelty**: Avoid novelty in function shapes, operators, or syntactic sugars; reuse common patterns instead.&#xA;3. **Grouping**: Split series of long function chains, iterators, or comprehensions into logical groupings via helper functions or intermediate variables.&#xA;4. **Conditional simplicity**: Keep conditional tests as short as possible and prefer sequences of the same logical operator over mixing operators within a conditional.&#xA;5. **Gotos**: Use gotos only when necessary (e.g., to avoid alternatives that are worse).&#xA;6. **Nesting**: Minimize nested logic (avoid large variations in indentation) and isolate deep nesting in separate functions.&#xA;7. **Variable distinction**: Always use descriptive and visually distinct variable names; avoid variable shadowing.&#xA;8. **Variable liveness**: Prefer shorter liveness durations for variables, especially with regard to function boundaries.&#xA;&#xA;**Additional tips**&#xA;&#xA;* Reuse familiar code patterns and follow the Principle of Least Surprise when writing code.&#xA;* Use templated or generic functions to reduce repetition and make code more predictable.&#xA;* Avoid premature optimization; computers are fast enough.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomtracktorplaysmart&#34;&gt;&lt;a href=&#34;https://github.com/Tracktor/playsmart&#34;&gt;https://github.com/Tracktor/playsmart&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- End the never-ending game of manually recording, inspecting, and updating E2E tests with Playwright.&#xA;- Playsmart is a code-first approach for automating web interactions using real-time LLM agents.&#xA;- Install via pip: `pip install playsmart` (requires Python 3.10+).&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomcodingworkflowai-code-fusion&#34;&gt;&lt;a href=&#34;https://github.com/codingworkflow/ai-code-fusion&#34;&gt;https://github.com/codingworkflow/ai-code-fusion&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* - Visual directory explorer for selecting code files&#xA;* - Advanced file filtering with customizable patterns&#xA;* - Accurate token counting for various AI models&#xA;* - Code content processing with statistics&#xA;* - Cross-platform support (Windows, macOS, Linux)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomezyangcodemcp&#34;&gt;&lt;a href=&#34;https://github.com/ezyang/codemcp&#34;&gt;https://github.com/ezyang/codemcp&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Install codemcp to make Claude Desktop a pair programming assistant&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Engineering Project Proposal Template</title>
      <link>//localhost:1313/posts/1741422244-engineering-request-proposal-template/</link>
      <pubDate>Sat, 08 Mar 2025 08:24:04 +0000</pubDate>
      <guid>//localhost:1313/posts/1741422244-engineering-request-proposal-template/</guid>
      <description>&lt;h2 id=&#34;questions-to-ask&#34;&gt;Questions to ask:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;What is the underlying problem you are trying to address?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Should be well defined&lt;/li&gt;&#xA;&lt;li&gt;Focus on the issue&lt;/li&gt;&#xA;&lt;li&gt;No solutions yet&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why should we solve this problem?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Impact on the org&lt;/li&gt;&#xA;&lt;li&gt;Significance and urgency&lt;/li&gt;&#xA;&lt;li&gt;Add data (quantitative or qualitative)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;How can we solve this problem?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Proposed changes required.&lt;/li&gt;&#xA;&lt;li&gt;Incorporate different views (4+1 architectural view model)&lt;/li&gt;&#xA;&lt;li&gt;What are we optimising? (Deadline/Tech Debt)&lt;/li&gt;&#xA;&lt;li&gt;What are we sacrificing? (Tech Debt/Complexity)&lt;/li&gt;&#xA;&lt;li&gt;What are some alternatives to solve this problem (Important)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;What are the risks with the solution?&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-03-03</title>
      <link>//localhost:1313/posts/1743337915-linklist-2025-03-03/</link>
      <pubDate>Mon, 03 Mar 2025 18:00:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1743337915-linklist-2025-03-03/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomsupercog-aiagentic&#34;&gt;&lt;a href=&#34;https://github.com/supercog-ai/agentic&#34;&gt;https://github.com/supercog-ai/agentic&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Agentic is a lightweight agent framework, reference implementation of the agent protocol, and an agent runtime built on Ray&#xA;* Supports teams of cooperating agents, Human-in-the-loop, easy definition and use of tools, production-tested tools&#xA;* Can be used for full browser automation, including authenticated sessions&#xA;* Example applications include daily podcast creation and meeting bot agents&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomscaliseraoulambrogio&#34;&gt;&lt;a href=&#34;https://github.com/scaliseraoul/ambrogio&#34;&gt;https://github.com/scaliseraoul/ambrogio&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Ambrogio is an intelligent dev agent that helps tackle technical debt in your codebase.&#xA;* It systematically enhances code quality and maintainability through automated analysis and improvements.&#xA;* Starting with docstring improvements, Ambrogio uses advanced language models to understand your code and generate meaningful documentation.&#xA;* Features:&#xA;  * Smart Docstring Generation: Automatically adds clear, comprehensive docstrings to classes and methods&#xA;  * Multi-Provider Support: Works with various LLM providers through LiteLLM integration&#xA;  * Unit Test Generation (Beta): Analyzes code coverage and generates missing unit tests&#xA;  * Pre-PR test runs to prevent regressions&#xA;  * Improve existing docstrings in modified methods&#xA;  * Documentation generation for easier understanding&#xA;  * Type safety refactoring&#xA;  * Spaghetti code cleanup&#xA;  * Code formatting and best practices enforcement&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomjendrikseippvulture&#34;&gt;&lt;a href=&#34;https://github.com/jendrikseipp/vulture&#34;&gt;https://github.com/jendrikseipp/vulture&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Vulture is a tool that analyzes Python code to identify unused imports, variables, functions, and other code elements.&#xA;&#xA;**Features**&#xA;&#xA;1. **Unused import detection**: Finds unused imports in the analyzed code.&#xA;2. **Unused variable detection**: Detects unused variables, including global and local ones.&#xA;3. **Unused function detection**: Identifies unused functions.&#xA;4. **Unreachable code detection**: Finds unreachable code, such as code after `return`, `break`, `continue`, or `raise` statements.&#xA;&#xA;**How it works**&#xA;&#xA;Vulture uses the Abstract Syntax Tree (AST) module to build a tree representation of the analyzed code. It then traverses this tree and records the names of defined and used objects. The tool reports the objects that have been defined but not used, which are considered dead code.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcompagezero-devpagezero&#34;&gt;&lt;a href=&#34;https://github.com/pagezero-dev/pagezero&#34;&gt;https://github.com/pagezero-dev/pagezero&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  * Open-source TypeScript starter for full-stack web development on Cloudflare&#xA;&#xA;- # Building on Strong Foundations&#xA;  * Core:&#xA;    + Vite + React + React Router v7&#xA;    + Cloudflare Pages (hosting) + D1 (database)&#xA;    + TypeScript + TailwindCSS + Drizzle ORM&#xA;  * Tooling:&#xA;    + GitHub Actions (CI/CD)&#xA;    + Prettier + ESLint (code quality)&#xA;    + Vitest + Playwright (testing)&#xA;    + Storybook + MDX (docs &amp;amp; components)&#xA;&#xA;- # Essential npm Scripts&#xA;  * `npm run setup`&#xA;    - Performs `npm install`, setups basic env vars, database and playwright browser drivers&#xA;  * `npm run dev`&#xA;    - Boots development server&#xA;  * `npm run build`&#xA;    - Builds the app&#xA;  * `npm start`&#xA;    - Runs built app; this is how your app will be run on production&#xA;  * `npm test`&#xA;    - Executes unit tests&#xA;  * `npm run test:types`&#xA;    - TypeScript types check&#xA;  * `npm run test:e2e:ui`&#xA;    - Executes browser tests in UI mode, perfect for development&#xA;  * `npm run lint`&#xA;    - ESLint check&#xA;  * `npm run format`&#xA;    - Prettier check&#xA;  * `npm run storybook`&#xA;    - Boots Storybook&#xA;  * `npm run doctor`&#xA;    - Runs all basic sanity checks: format, lint, types check and unit tests&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomlambdasecautogrep&#34;&gt;&lt;a href=&#34;https://github.com/lambdasec/autogrep&#34;&gt;https://github.com/lambdasec/autogrep&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Autogrep Tool&#xA;&#xA;* Autogrep is a tool for automatically generating and filtering Semgrep rules from vulnerability patches.&#xA;* It addresses the need for high-quality security rules after Sem Gregg&amp;#39;s official rules are no longer available under permissive licenses.&#xA;* Autogrep leverages Large Language Models (LLMs) to automate rule generation and validation.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomwhiteshadow1234whispertranscriber&#34;&gt;&lt;a href=&#34;https://github.com/whiteSHADOW1234/WhisperTranscriber&#34;&gt;https://github.com/whiteSHADOW1234/WhisperTranscriber&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Easily transcribe YouTube videos, MP4, and MP3 files to text using Whisper on Google Colab.&#xA;* No local setup required — runs entirely on Google Colab&#xA;* Supports YouTube URLs, MP4, and MP3 files&#xA;* Outputs transcribed text in .txt format&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomduriantacopykomodo&#34;&gt;&lt;a href=&#34;https://github.com/duriantaco/pykomodo&#34;&gt;https://github.com/duriantaco/pykomodo&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* **ParallelChunker**: A class used to split a large codebase into equal chunks suitable for Large Language Models (LLMs).&#xA;* **Code Chunking**: The process of dividing a large codebase into smaller, more manageable chunks.&#xA;* **LLM Context Windows**: The size of the context window for LLMs, which determines how much code is processed at once.&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-02-16</title>
      <link>//localhost:1313/posts/1739728778-linklist-2025-02-16/</link>
      <pubDate>Sun, 16 Feb 2025 18:00:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1739728778-linklist-2025-02-16/</guid>
      <description>&lt;h2 id=&#34;httpswwwrunpulsecomblogwhy-llms-suck-at-ocr&#34;&gt;&lt;a href=&#34;https://www.runpulse.com/blog/why-llms-suck-at-ocr&#34;&gt;https://www.runpulse.com/blog/why-llms-suck-at-ocr&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We believed LLMs could solve data extraction by plugging in the latest models.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;However, we found that their probabilistic approach favors common words over exact transcription.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LMMs suck at complex OCR because they are excellent for text-generation or summarization tasks but falter at precise character recognition.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Their probabilistic nature causes fatal errors in OCR tasks due to lossy transformations and blindspots.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*I. How Do LLMs “See” and Process Images?*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LLMs process images through high-dimensional embeddings prioritizing semantic understanding over precise character recognition.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The attention mechanism splits images into fixed-size patches, losing fine-grained spatial relationships and critical information about data relationships.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LMMs struggle with complex 2D relationships like table structure recognition and extraction.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;*II. Real-World Failures and Hidden Risks*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LMMs fail in catastrophic ways for business-critical applications in industries like legal and healthcare.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Failures include financial and medical data corruption, equation solving problems, and prompt injection + ethical vulnerabilities.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;httpsgithubcomms-jpqsad&#34;&gt;&lt;a href=&#34;https://github.com/ms-jpq/sad&#34;&gt;https://github.com/ms-jpq/sad&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Space Age sed is a Batch File Edit tool that shows a nice diff of proposed changes before committing them, allowing double-checking of edits.&lt;/li&gt;&#xA;&lt;li&gt;Unlike sed, this tool enables selective replacement and choosing the clustering factor for changes using &amp;ndash;unified=&lt;!-- raw HTML omitted --&gt;.&lt;/li&gt;&#xA;&lt;li&gt;It can display side-by-side changes using delta if installed.&lt;/li&gt;&#xA;&lt;li&gt;To replace all occurrences of a pattern with another in a repository, use &lt;code&gt;find &amp;quot;$FIND_ARGS&amp;quot; | sad &#39;&amp;lt;pattern&amp;gt;&#39; &#39;&amp;lt;replacement&amp;gt;&#39;&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsoldredditcomrlocalllamacomments1im35ylhow_to_scale_rag_to_20_million_documents&#34;&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1im35yl/how_to_scale_rag_to_20_million_documents/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1im35yl/how_to_scale_rag_to_20_million_documents/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Popular vector databases for scaling RAG include Weaviate, PGVector, Pinecone, and Qdrant, with hybrid RAG techniques mentioned for optimization.&lt;/li&gt;&#xA;&lt;li&gt;ParadeDB (Postgres + pg_vector) and LanceDB are suggested for scalability and hybrid search.&lt;/li&gt;&#xA;&lt;li&gt;GraphRAG/LightRAG approaches can be used but are computationally expensive due to graph-based complexity.&lt;/li&gt;&#xA;&lt;li&gt;Horizontal scaling is supported by modern vector DBs through sharding and replication, though graph traversal slows down as data grows.&lt;/li&gt;&#xA;&lt;li&gt;Embedding models like stella_en_400M_v5 are recommended, with binary embeddings (quantized vectors) suggested to reduce storage and improve performance.&lt;/li&gt;&#xA;&lt;li&gt;HNSW indexing is a popular choice, while alternatives like IVF or IVF-PQ can improve performance through cluster-based indexing.&lt;/li&gt;&#xA;&lt;li&gt;Sparse rerankers like BM25 combined with dense embeddings enable hybrid search for better results.&lt;/li&gt;&#xA;&lt;li&gt;Index creation is more efficient when the index is dropped before ingestion and rebuilt after data ingestion is complete.&lt;/li&gt;&#xA;&lt;li&gt;Chunking strategies, like adaptive window chunking, dynamically adjust chunk sizes based on dataset requirements.&lt;/li&gt;&#xA;&lt;li&gt;Proper chunk overlap is critical to avoid losing context during retrieval.&lt;/li&gt;&#xA;&lt;li&gt;Preprocessing should include metadata extraction, semantic enrichment, and duplicate removal to optimize embeddings and indexing.&lt;/li&gt;&#xA;&lt;li&gt;Efficient pipelines are essential for handling diverse document types such as PDFs, scanned images, and statistical data.&lt;/li&gt;&#xA;&lt;li&gt;Segmenting documents by topic or content type and routing them to appropriate vector DBs improves pipeline efficiency.&lt;/li&gt;&#xA;&lt;li&gt;Middleware layers can compress, deduplicate, and summarize embeddings to optimize data ingestion.&lt;/li&gt;&#xA;&lt;li&gt;Azure AI Search is recommended for enterprise-level ingestion pipelines.&lt;/li&gt;&#xA;&lt;li&gt;Hybrid RAG combines dense vector search and sparse retrieval (e.g., BM25) for improved performance and relevance.&lt;/li&gt;&#xA;&lt;li&gt;Hierarchical RAG methods involve topic-based sorting before diving into chunk-level retrieval.&lt;/li&gt;&#xA;&lt;li&gt;ElasticSearch and BM25 are suggested as alternatives to vector DBs for certain domains with better relevance.&lt;/li&gt;&#xA;&lt;li&gt;Fine-tuning models on 20M documents can encode domain-specific knowledge but is more expensive and risks overfitting.&lt;/li&gt;&#xA;&lt;li&gt;RAG is cheaper, faster, and more flexible than fine-tuning and is preferred for large-scale data retrieval.&lt;/li&gt;&#xA;&lt;li&gt;Embedding 20M documents can take significant time but can be parallelized with multiple GPUs, costing between $1,000 and $20,000.&lt;/li&gt;&#xA;&lt;li&gt;Trade-offs between speed, cost, and accuracy can be adjusted by tweaking clustering sizes or chunking strategies.&lt;/li&gt;&#xA;&lt;li&gt;Ensure the dataset is relevant and up-to-date since larger scales do not always yield better results.&lt;/li&gt;&#xA;&lt;li&gt;Vendor solutions like Azure AI Search are helpful but should be used cautiously to avoid vendor lock-in.&lt;/li&gt;&#xA;&lt;li&gt;Iterative testing is necessary to identify the best combination of embeddings, chunking, and retrieval strategies for the specific dataset.&lt;/li&gt;&#xA;&lt;li&gt;Critics argue RAG struggles at scale, but others dismiss this as overly pessimistic, citing successful implementations at larger scales.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsoldredditcomrpythoncomments1ime8jaa_modern_python_repository_template_with_uv_and&#34;&gt;&lt;a href=&#34;https://old.reddit.com/r/Python/comments/1ime8ja/a_modern_python_repository_template_with_uv_and/&#34;&gt;https://old.reddit.com/r/Python/comments/1ime8ja/a_modern_python_repository_template_with_uv_and/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Showcased a modern Python repository template&lt;/li&gt;&#xA;&lt;li&gt;Features UV and Just for self-hosting&lt;/li&gt;&#xA;&lt;li&gt;Aims to provide a clean and minimalistic template&lt;/li&gt;&#xA;&lt;li&gt;Includes example use cases and explanations&lt;/li&gt;&#xA;&lt;li&gt;Meant to serve as a starting point for new projects&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomranjanprjagentollama&#34;&gt;&lt;a href=&#34;https://github.com/ranjanprj/agentollama&#34;&gt;https://github.com/ranjanprj/agentollama&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The Agentollama Framework enables creation, execution, and monitoring of intelligent Agents without writing business logic.&lt;/li&gt;&#xA;&lt;li&gt;AI determines which functions to call dynamically, without hardcoding.&lt;/li&gt;&#xA;&lt;li&gt;Generates code dynamically for API calls using AI.&lt;/li&gt;&#xA;&lt;li&gt;Tools are loaded dynamically when an Agent is called to perform a task.&lt;/li&gt;&#xA;&lt;li&gt;Can be used to integrate with legacy applications for productivity enhancement.&lt;/li&gt;&#xA;&lt;li&gt;Real-time execution step tracking and logs of task execution and decision-making by Agents.&lt;/li&gt;&#xA;&lt;li&gt;Helps debug why a particular Agent took a specific action.&lt;/li&gt;&#xA;&lt;li&gt;Ensures Agents produce outputs in a predefined format.&lt;/li&gt;&#xA;&lt;li&gt;Prevents deviation in reasoning and decision-making.&lt;/li&gt;&#xA;&lt;li&gt;Essential for enterprise use cases where multiple API interactions must follow strict formats.&lt;/li&gt;&#xA;&lt;li&gt;Vectorized file storage for intelligent querying.&lt;/li&gt;&#xA;&lt;li&gt;Retrieval-Augmented Generation (RAG) Agents to enhance decision-making with external knowledge.&lt;/li&gt;&#xA;&lt;li&gt;Loop Agents to iterate over datasets and execute workflows dynamically.&lt;/li&gt;&#xA;&lt;li&gt;Enables seamless multi-agent orchestration for business processes.&lt;/li&gt;&#xA;&lt;li&gt;Supports the DeepSeek R1 (8B Model) Integration for on-device tool code generation.&lt;/li&gt;&#xA;&lt;li&gt;UI-based Agent Execution, no need to touch an IDE!&lt;/li&gt;&#xA;&lt;li&gt;Performance Metrics &amp;amp; Testing (Upcoming Feature) to analyze Agent efficiency and decision-making accuracy.&lt;/li&gt;&#xA;&lt;li&gt;Compatible with Python 3.x.&lt;/li&gt;&#xA;&lt;li&gt;Built using Ollama (AI Model Server), Django, and Vector Database.&lt;/li&gt;&#xA;&lt;li&gt;Clone the repository via git clone &lt;a href=&#34;https://github.com/your-repo/agentollama.git&#34;&gt;https://github.com/your-repo/agentollama.git&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create and activate virtual environment: python -m venv venv, source venv/bin/activate&lt;/li&gt;&#xA;&lt;li&gt;Install dependencies: pip install django ollama&lt;/li&gt;&#xA;&lt;li&gt;Run Ollama server in the background with Llama3.1 8B Model.&lt;/li&gt;&#xA;&lt;li&gt;Run the Django server: python manage.py runserver&lt;/li&gt;&#xA;&lt;li&gt;Define Agents through the UI and automate workflows effortlessly.&lt;/li&gt;&#xA;&lt;li&gt;Advanced features include dynamic business testing &amp;amp; performance metrics, advanced agent collaboration, and enhanced RAG capabilities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcommpaeppervibevoice&#34;&gt;&lt;a href=&#34;https://github.com/mpaepper/vibevoice&#34;&gt;https://github.com/mpaepper/vibevoice&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hi, I&amp;rsquo;m Marc Päpper and I extended Vlad&amp;rsquo;s work to run with a local whisper model.&lt;/li&gt;&#xA;&lt;li&gt;Original inspiration: whisper-keyboard by Vlad.&lt;/li&gt;&#xA;&lt;li&gt;Faster Whisper implementation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcompravko-solutionsflashlearn&#34;&gt;&lt;a href=&#34;https://github.com/Pravko-Solutions/FlashLearn&#34;&gt;https://github.com/Pravko-Solutions/FlashLearn&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is an introduction to the FlashLearn library, which provides a simple way to integrate large language models (LLMs) into workflows. The library aims to make it easy for startups to use LLMs in their products.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-02-10</title>
      <link>//localhost:1313/posts/1739216844-linklist-2025-02-10/</link>
      <pubDate>Mon, 10 Feb 2025 19:47:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1739216844-linklist-2025-02-10/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomfareedkhan-devtrain-llm-from-scratch&#34;&gt;&lt;a href=&#34;https://github.com/FareedKhan-dev/train-llm-from-scratch&#34;&gt;https://github.com/FareedKhan-dev/train-llm-from-scratch&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is a thorough analysis of two large language models (LLMs), one with 13 million parameters and another with 1 billion parameters. The author provides an in-depth comparison of their strengths and weaknesses, highlighting both the benefits and limitations of each model.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Takeaways:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Smaller model can be effective&lt;/strong&gt;: The 13 million-parameter model is able to generate clear and accurate text, even in longer contexts, making it a viable option for goal-oriented tasks.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bigger model requires deeper architecture&lt;/strong&gt;: The 1 billion-parameter model&amp;rsquo;s ability to handle complex contexts and generate coherent text relies on a more sophisticated architecture that requires careful consideration of its design and training data.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Overfitting is a risk&lt;/strong&gt;: If the bigger model is not designed with sufficient depth and complexity, it may overfit the training data and fail to improve performance compared to smaller models.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Fine-tuning can improve performance&lt;/strong&gt;: Fine-tuning the 1 billion-parameter model on domain-specific data, such as writing emails or essays, can help improve its ability to generate high-quality text.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Recommendations:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-01-26</title>
      <link>//localhost:1313/posts/1737900105-linklist-2025-01-26/</link>
      <pubDate>Sun, 26 Jan 2025 14:01:45 +0000</pubDate>
      <guid>//localhost:1313/posts/1737900105-linklist-2025-01-26/</guid>
      <description>&lt;h2 id=&#34;httpsgithubcomlanggptaiawesome-claude-prompts&#34;&gt;&lt;a href=&#34;https://github.com/langgptai/awesome-claude-prompts&#34;&gt;https://github.com/langgptai/awesome-claude-prompts&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomlsgrepchrome-extension-ollama-chat&#34;&gt;&lt;a href=&#34;https://github.com/lsgrep/chrome-extension-ollama-chat&#34;&gt;https://github.com/lsgrep/chrome-extension-ollama-chat&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A Chrome extension that adds a sleek sidebar interface for chatting with local LLMs using Ollama, built with React, TypeScript, and Vite.&lt;/li&gt;&#xA;&lt;li&gt;Supports smooth sidebar integration with any webpage&lt;/li&gt;&#xA;&lt;li&gt;Includes chat interface with support for Markdown formatting&lt;/li&gt;&#xA;&lt;li&gt;Features real-time streaming responses&lt;/li&gt;&#xA;&lt;li&gt;Offers clean and modern UI design&lt;/li&gt;&#xA;&lt;li&gt;Allows multiple model support via Ollama&lt;/li&gt;&#xA;&lt;li&gt;Provides keyboard shortcuts for quick access&lt;/li&gt;&#xA;&lt;li&gt;Requires Node.js (v16 or higher), npm, yarn, Chrome browser, and Ollama installed and running locally&lt;/li&gt;&#xA;&lt;li&gt;Clone the repository using &lt;code&gt;git clone &amp;lt;repository-url&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Install dependencies with &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Build the extension with &lt;code&gt;npm run build&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Load the extension in Chrome by enabling &amp;ldquo;Developer mode&amp;rdquo; and loading it from the &lt;code&gt;dist&lt;/code&gt; directory&lt;/li&gt;&#xA;&lt;li&gt;Start Ollama with CORS enabled by running &lt;code&gt;OLLAMA_ORIGINS=chrome-extension://* ollama serve&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Pull a model (if necessary) using &lt;code&gt;ollama pull &amp;lt;model-name&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Start the development server with &lt;code&gt;npm run dev&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;The extension will rebuild automatically when changes are made&lt;/li&gt;&#xA;&lt;li&gt;Click the extension icon to toggle the sidebar, select an Ollama model, and start chatting&lt;/li&gt;&#xA;&lt;li&gt;Features React + TypeScript for the UI, Vite for building and development, Chrome Extension Manifest V3, and Ollama API for local LLM integration&lt;/li&gt;&#xA;&lt;li&gt;Utilizes real-time streaming using Server-Sent Events&lt;/li&gt;&#xA;&lt;li&gt;Includes improved sidebar styling and layout, smooth animations, and fixed visibility toggle&lt;/li&gt;&#xA;&lt;li&gt;Adjusted width for better readability&lt;/li&gt;&#xA;&lt;li&gt;Initial release with basic chat functionality and Ollama integration&lt;/li&gt;&#xA;&lt;li&gt;Supports Markdown formatting&lt;/li&gt;&#xA;&lt;li&gt;Licensed under the WTFPL - Do What the Fuck You Want to Public License (see LICENSE file)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomkoljabrealtimestt&#34;&gt;&lt;a href=&#34;https://github.com/KoljaB/RealtimeSTT&#34;&gt;https://github.com/KoljaB/RealtimeSTT&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;A Python library used for speech recognition and transcription.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-01-18</title>
      <link>//localhost:1313/posts/1737221187-linklist-2025-01-18/</link>
      <pubDate>Sat, 18 Jan 2025 17:26:27 +0000</pubDate>
      <guid>//localhost:1313/posts/1737221187-linklist-2025-01-18/</guid>
      <description>&lt;h2 id=&#34;httpselmwealthcommicrostrategy-bitcoin&#34;&gt;&lt;a href=&#34;https://elmwealth.com/microstrategy-bitcoin/&#34;&gt;https://elmwealth.com/microstrategy-bitcoin/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;The text is a research report on MicroStrategy (MSTR), a company that has been focused on buying Bitcoin and other cryptocurrencies. The authors of the report provide an analysis of various aspects of MSTR, including its stock price, options trading activity, and return characteristics.&lt;/p&gt;&#xA;&lt;p&gt;Some key points from the report include:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;MicroStrategy&amp;rsquo;s stock price:&lt;/strong&gt; The report notes that MicroStrategy&amp;rsquo;s stock price has returned a significant 200% in about seven months, making it one of the best-performing stocks in the past year.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Options trading activity:&lt;/strong&gt; The authors highlight that hundreds of bullish options trades have been executed on MSTR, which suggests strong investor interest in the stock.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Return characteristics:&lt;/strong&gt; The report notes that the return pattern of MicroStrategy&amp;rsquo;s stock is not very enticing compared to other long-short ETFs, which would be a convenient way to take advantage of potential underperformance.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Risk and frictions:&lt;/strong&gt; The authors caution that MSTR trading comes with high risks and frictions, making it difficult to short or leveraged trade the stock effectively.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Leveraged ETF analysis:&lt;/strong&gt; They analyze a hypothetical long-short ETF that would be long 1x Bitcoin and short 1x MSTR, which they conclude would not be an attractive investment opportunity due to its relatively low return and high risks.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Overall, the report suggests that while MicroStrategy&amp;rsquo;s stock price has been strong, investors should exercise caution when considering leveraged trading or shorting the stock due to the high risks involved.&lt;/p&gt;</description>
    </item>
    <item>
      <title>EPUB to Conversational Audio: AI-Powered Podcast Generator</title>
      <link>//localhost:1313/posts/1737196960-epub-to-audio-setup/</link>
      <pubDate>Sat, 18 Jan 2025 10:42:41 +0000</pubDate>
      <guid>//localhost:1313/posts/1737196960-epub-to-audio-setup/</guid>
      <description>&lt;p&gt;This script extracts text from an EPUB file, formats it, and converts it into an engaging audio podcast.&#xA;It uses AI-based transcript generation, rewriting, and text-to-speech synthesis to create a conversational and captivating audio output.&lt;/p&gt;&#xA;&lt;p&gt;Here is the &lt;a href=&#34;https://github.com/namuan/llm-playground/blob/main/epub-to-audio.py&#34;&gt;source code&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/namuan/llm-playground.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pre-requisites&#34;&gt;Pre-Requisites:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;MLX Qwen2.5 Models:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;These will be downloaded when the script runs for the first time.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FIRST_PASS_LLM = &amp;#34;mlx-community/Qwen2.5-14B-Instruct-4bit&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SECOND_PASS_LLM = &amp;#34;mlx-community/Qwen2.5-7B-Instruct-4bit&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Although you can configure a different MLX model if you already have it downloaded.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2025-01-11</title>
      <link>//localhost:1313/posts/1737221182-linklist-2025-01-11/</link>
      <pubDate>Sat, 11 Jan 2025 17:26:22 +0000</pubDate>
      <guid>//localhost:1313/posts/1737221182-linklist-2025-01-11/</guid>
      <description>&lt;h2 id=&#34;httpswwwkagglecomcodefaressayahstock-market-analysis-prediction-using-lstm&#34;&gt;&lt;a href=&#34;https://www.kaggle.com/code/faressayah/stock-market-analysis-prediction-using-lstm&#34;&gt;https://www.kaggle.com/code/faressayah/stock-market-analysis-prediction-using-lstm&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomarihanvfasthtml-modal&#34;&gt;&lt;a href=&#34;https://github.com/arihanv/fasthtml-modal&#34;&gt;https://github.com/arihanv/fasthtml-modal&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Deploy a FastHTML app on Modal&amp;#39;s serverless infra with simple python code&#xA;* Install required packages with pip install -r requirements.txt&#xA;* Run the app with python app.py&#xA;* Create a free account at modal.com and authenticate in CLI&#xA;* Deploy the app with modal deploy deploy.py&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomnikitabobkoaerospace&#34;&gt;&lt;a href=&#34;https://github.com/nikitabobko/AeroSpace&#34;&gt;https://github.com/nikitabobko/AeroSpace&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* AeroSpace is an i3-like tiling window manager for macOS.&#xA;* Based on a tree paradigm and i3 inspired design.&#xA;* Fast workspaces switching without animations, no SIP disabling required.&#xA;* Uses virtual workspaces emulation instead of native Spaces.&#xA;* Plain text configuration (dotfiles friendly), CLI first with manpages and shell completion.&#xA;* No SIP disabling required.&#xA;* Multi-monitor support in i3-like paradigm.&#xA;* Install via Homebrew with autoupdates preferred.&#xA;* Installation options available: https://nikitabobko.github.io/AeroSpace/guide#installation&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsquantpediacomtop-ten-blog-posts-on-quantpedia-in-2024a6080&#34;&gt;&lt;a href=&#34;https://quantpedia.com/top-ten-blog-posts-on-quantpedia-in-2024/?a=6080&#34;&gt;https://quantpedia.com/top-ten-blog-posts-on-quantpedia-in-2024/?a=6080&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Top Ten Blog Posts on Quantpedia in 2024 were the most popular based on Google Analytics ranking.&#xA;* The top 10 posts are:&#xA;  * #10: Pre-Holiday Effect in Commodities – historical data reveals a short-term price drift prior to major U.S. holidays&#xA;  * #9: How To Profitably Trade Bitcoin’s Overnight Sessions?&#xA;  * #8: How to Improve ETF Sector Momentum&#xA;  * #7: How to Improve Commodity Momentum Using Intra-Market Correlation&#xA;  * #6: Combining Discretionary and Algorithmic Trading&#xA;  * #5: Designing Robust Trend-Following System&#xA;  * #4: How to Build Mean Reversion Strategies in Currencies&#xA;  * #3: How Much Bitcoin Should We Allocate To the Portfolio?&#xA;  * #2: Pragmatic Asset Allocation Model for Semi-Active Investors &amp;amp; A Few Thoughts on Pragmatic Asset Allocation&#xA;  * #1: Exploration of CTA Momentum Strategies Using ETFs&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomn1teshypy-listenertabreadme-ov-file&#34;&gt;&lt;a href=&#34;https://github.com/n1teshy/py-listener?tab=readme-ov-file&#34;&gt;https://github.com/n1teshy/py-listener?tab=readme-ov-file&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* PyListener is a tool for near real-time voice processing and speech-to-text conversion.&#xA;* It can be fast or sluggish depending on the compute and memory availability of the environment.&#xA;* Suitable for situations with a 1-second delay, such as AI assistants and voice command processing.&#xA;* Installation: `pip install py-listener`&#xA;* The package contains only one class, `Listener`.&#xA;* The `Listener` class collects audio data into n-second chunks and checks for human voice.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomsimonschubertkai&#34;&gt;&lt;a href=&#34;https://github.com/SimonSchubert/Kai&#34;&gt;https://github.com/SimonSchubert/Kai&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A cross-platform open-source AI interface that runs on Android, iOS, Windows, Mac, Linux, and Web.&#xA;* https://simonschubert.github.io/Kai&#xA;* Gemini 2.0 Flash, Gemini 1.5 Flash, Gemini 1.5 Flash-8B&#xA;* Llama 3.3, Mixtral, Gemma2...&#xA;* Features:&#xA;+ Chat histories&#xA;+ Voice chat&#xA;* Lottie animation: https://lottiefiles.com/free-animation/loading-wDUukARCPj&#xA;* GroqCloud: https://groq.com&#xA;* Gemini: https://gemini.google.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomtilmangrieselchipper&#34;&gt;&lt;a href=&#34;https://github.com/TilmanGriesel/chipper&#34;&gt;https://github.com/TilmanGriesel/chipper&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Chipper provides a web interface, CLI, and simple architecture for embedding pipelines, document chunking, web scraping, and query workflows.&#xA;* Built with Haystack, Ollama, Hugging Face, Docker, Tailwind, and ElasticSearch.&#xA;* Runs locally or scales as a Dockerized service.&#xA;* Started as a project to help author with their book, now growing into a fully dockerized service architecture.&#xA;* Features:&#xA;    + Local Ollama and hosted Hugging Face API&#xA;    + Build powerful knowledge base using ElasticSearch embeddings.&#xA;    + Automatically split documents via Haystack.&#xA;    + Scrape content from web sources.&#xA;    + Transcribe audio files into text.&#xA;    + Access via user-friendly CLI or web client interface.&#xA;    + Deploy effortlessly using Docker.&#xA;* Project is a research project, not built for production.&#xA;* Goals:&#xA;    + Create approachable tools for beginners and helpful for experts.&#xA;    + Provide a framework to teach AI concepts in a manageable way.&#xA;    + Offer a playground for educators, explorers, tinkerers, and companies to experiment and innovate.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpshealeycodescombuilding-game-prototypes-with-love&#34;&gt;&lt;a href=&#34;https://healeycodes.com/building-game-prototypes-with-love&#34;&gt;https://healeycodes.com/building-game-prototypes-with-love&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is an article about using the LÖVE programming framework to build prototypes for game development projects. The author shares their experience and lessons learned from building two prototypes: one for a card game and another for a notebook/pen-based game.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Short Straddles with Laddering</title>
      <link>//localhost:1313/posts/1736507408-short-straddle-with-laddering/</link>
      <pubDate>Fri, 10 Jan 2025 11:10:08 +0000</pubDate>
      <guid>//localhost:1313/posts/1736507408-short-straddle-with-laddering/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Short Straddles&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;For e.g. Given that our account can trade 5 SPX contracts at once.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;We can either trade 1 contract every day - 5 different positions&lt;/li&gt;&#xA;&lt;li&gt;Or we can trade all 5 contracts at the same time in a single trade - 1 position&lt;/li&gt;&#xA;&lt;li&gt;Or we can stagger 5 contracts in a single trade. Add 1 contract every day&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here are the results&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;(a)&lt;/strong&gt; &lt;em&gt;1 Contract Every Day (Max 5 Positions) &amp;gt; 45 DTE Expiry&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Short Straddles with RSI based market filters</title>
      <link>//localhost:1313/posts/1736250948-short-straddle-rsi-market-filter/</link>
      <pubDate>Tue, 07 Jan 2025 11:55:48 +0000</pubDate>
      <guid>//localhost:1313/posts/1736250948-short-straddle-rsi-market-filter/</guid>
      <description>&lt;p&gt;Hypothesis: What if we avoid new trade if RSI is overbought or oversold?&lt;/p&gt;&#xA;&lt;p&gt;Backtest with different RSI thresholds and different RSI periods&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;RSI Thresholds:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RSI Period: 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsi_low_values=(0 10 20 30)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsi_high_values=(70 80 90 100)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2025/01/07/1736255462-1.png&#34; alt=&#34;images/2025/01/07/1736255462-1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Best Parameters by Expectancy Ratio:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;rsi_low_threshold=20, rsi_high_threshold=100&lt;/strong&gt;&lt;br&gt;&#xA;Expectancy Ratio: 1.08&lt;br&gt;&#xA;This combination shows the highest expectancy ratio, indicating it provides the best risk-adjusted returns.&lt;/li&gt;&#xA;&lt;li&gt;rsi_low_threshold=30, rsi_high_threshold=100&lt;br&gt;&#xA;Expectancy Ratio: 1.06&lt;br&gt;&#xA;Second-best expectancy ratio.&lt;/li&gt;&#xA;&lt;li&gt;rsi_low_threshold=30, rsi_high_threshold=70&lt;br&gt;&#xA;Expectancy Ratio: 1.04&lt;br&gt;&#xA;Third-best expectancy ratio.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Key Observations:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Trello API</title>
      <link>//localhost:1313/posts/1735815480-trello-api-usage/</link>
      <pubDate>Thu, 02 Jan 2025 10:58:00 +0000</pubDate>
      <guid>//localhost:1313/posts/1735815480-trello-api-usage/</guid>
      <description>&lt;p&gt;Create a new API Key&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://trello.com/power-ups/admin&#34;&gt;https://trello.com/power-ups/admin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once the API Key is created, there is a link to create API Token&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2025/01/02/1735815846-1.png&#34; alt=&#34;images/2025/01/02/1735815846-1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-group-actions&#34;&gt;Trello REST API Reference&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is a simple Python script to list all the cards under a certain list.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env -S uv run --quiet --script&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /// script&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# dependencies = [&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#   &amp;#34;requests&amp;#34;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ///&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_trello_cards&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Get environment variables&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    api_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TRELLO_KEY&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    api_token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TRELLO_TOKEN&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    board_name_to_match &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TRELLO_BOARDNAME&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    list_name_to_match &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TRELLO_LISTNAME&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;environ&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TRELLO_USER&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Common parameters for all requests&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base_params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;: api_key,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;token&amp;#39;&lt;/span&gt;: api_token&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;make_request&lt;/span&gt;(url, params&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        request_params &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; base_params&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;copy()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; params:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            request_params&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update(params)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(url, params&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;request_params)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;raise_for_status()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; response&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Get user&amp;#39;s boards&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    boards_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.trello.com/1/members/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/boards&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    boards &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_request(boards_url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Find the specific board&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    board_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; board &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; boards:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; board[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; board_name_to_match:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            board_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; board[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; board_id:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Board &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;board_name_to_match&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; not found&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Get lists on the board&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lists_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.trello.com/1/boards/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;board_id&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/lists&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_request(lists_url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Find the specific list&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    list_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; list_ &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lists:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; list_[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; list_name_to_match:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            list_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list_[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; list_id:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;raise&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;List &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;list_name_to_match&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; not found&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Get cards in the list&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cards_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.trello.com/1/lists/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;list_id&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/cards&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cards &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_request(cards_url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Print cards&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; card &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cards:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;card[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; | href=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;card[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shortUrl&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        get_trello_cards()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Error: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;str(e)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also get a JSON representation of the board by requesting a &lt;code&gt;.json&lt;/code&gt; url.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-12-31</title>
      <link>//localhost:1313/posts/1735636186-linklist-2024-12-31/</link>
      <pubDate>Tue, 31 Dec 2024 09:09:47 +0000</pubDate>
      <guid>//localhost:1313/posts/1735636186-linklist-2024-12-31/</guid>
      <description>&lt;h2 id=&#34;httpscratesiocratesnpkl&#34;&gt;&lt;a href=&#34;https://crates.io/crates/npkl&#34;&gt;https://crates.io/crates/npkl&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpswwwnuancme&#34;&gt;&lt;a href=&#34;https://www.nuanc.me/&#34;&gt;https://www.nuanc.me/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;httpsgithubcomsturdy-devsemantic-code-search&#34;&gt;&lt;a href=&#34;https://github.com/sturdy-dev/semantic-code-search&#34;&gt;https://github.com/sturdy-dev/semantic-code-search&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* 🔍 Overview &#xA;*  • 🔧 Installation &#xA;*   pip3 install semantic-code-search&#xA;*  • 💻 Usage &#xA;*   sem &amp;#39;my query&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomwangxj03ai-cookbooktreemain&#34;&gt;&lt;a href=&#34;https://github.com/wangxj03/ai-cookbook/tree/main&#34;&gt;https://github.com/wangxj03/ai-cookbook/tree/main&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* wangxj03/ai-cookbook&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomandrewngo-iniagentic_rag&#34;&gt;&lt;a href=&#34;https://github.com/AndrewNgo-ini/agentic_rag&#34;&gt;https://github.com/AndrewNgo-ini/agentic_rag&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* # Project Overview&#xA;* A fully custom chatbot built with Agentic RAG (Retrieval-Augmented Generation), combining OpenAI models with a local knowledge base.&#xA;* Lightweight, dependency-free frontend and streamlined FastAPI backend for complete control and simplicity.&#xA;&#xA;* # Technical Details&#xA;* Pure HTML/CSS/JavaScript frontend with no external dependencies&#xA;* FastAPI backend with OpenAI integration&#xA;* Agentic RAG implementation:&#xA;  * Context retrieval using embeddings and cosine similarity&#xA;  * Step-by-step reasoning with Chain of Thought&#xA;  * Function calling for dynamic context retrieval&#xA;  * Comprehensive error handling and logging&#xA;  * Type-safe implementation with Python type hints&#xA;  * Configurable through environment variables&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpsgithubcomduriantacotreeline&#34;&gt;&lt;a href=&#34;https://github.com/duriantaco/treeline&#34;&gt;https://github.com/duriantaco/treeline&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install treeline &#xA;&#xA;from treeline import treeline &#xA;print(treeline(&amp;#34;/path/to/directory&amp;#34;)) &#xA;treeline(&amp;#34;/path/to/directory&amp;#34;, create_md=True) &#xA;&#xA;from treeline.dependency_analyzer import ModuleDependencyAnalyzer &#xA;from treeline.diff_visualizer import DiffVisualizer &#xA;from pathlib import Path &#xA;&#xA;analyzer = ModuleDependencyAnalyzer() &#xA;analyzer.analyze_directory(Path(&amp;#34;.&amp;#34;)) &#xA;with open(&amp;#34;dependencies.html&amp;#34;, &amp;#34;w&amp;#34;, encoding=&amp;#34;utf-8&amp;#34;) as f: &#xA;    f.write(analyzer.generate_html_visualization()) &#xA;    visualizer = DiffVisualizer() &#xA;    diff_html = visualizer.generate_structural_diff(&amp;#34;HEAD^&amp;#34;, &amp;#34;HEAD&amp;#34;) &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpswwwmacrohistorynetdatabase&#34;&gt;&lt;a href=&#34;https://www.macrohistory.net/database/&#34;&gt;https://www.macrohistory.net/database/&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;This is a list of contributors to the &amp;ldquo;History of Economic Thought&amp;rdquo; dataset, which appears to be an open-access project aimed at providing historical data on economic thought. Here are some observations and insights from reviewing this list:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up Alnoda: A Dockerized Development Workspace</title>
      <link>//localhost:1313/posts/1735467013-alnoda-workspaces/</link>
      <pubDate>Sun, 29 Dec 2024 10:10:13 +0000</pubDate>
      <guid>//localhost:1313/posts/1735467013-alnoda-workspaces/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Alnoda desktop&lt;/strong&gt; provides a dockerized development environment.&lt;/p&gt;&#xA;&lt;p&gt;According to the &lt;a href=&#34;https://github.com/bluxmit/alnoda-workspaces&#34;&gt;GitHub repo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Open-source portable containerized workspaces. Isolate your work, make backups, copy, move between computers and cloud seamlessly.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;You can start it up with the following command&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name space-1 -d -p 8020-8040:8020-8040 --restart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;always alnoda/alnoda-workspace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Although due to port conflicts, I had to change to different port sequence &lt;code&gt;(18020-18040)&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name space-1 -d -p 18020-18040:8020-8040 --restart&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;always alnoda/alnoda-workspace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once it is up, go to &lt;a href=&#34;http://localhost:18020&#34;&gt;http://localhost:18020&lt;/a&gt; see the environment&lt;/p&gt;</description>
    </item>
    <item>
      <title>List of very handy uvx use-cases</title>
      <link>//localhost:1313/posts/1734872892-uvx-example-usages/</link>
      <pubDate>Sun, 22 Dec 2024 13:08:12 +0000</pubDate>
      <guid>//localhost:1313/posts/1734872892-uvx-example-usages/</guid>
      <description>&lt;h3 id=&#34;open-marimo&#34;&gt;Open Marimo&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx marimo edit --sandbox&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx marimo tutorial intro&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/12/22/1734873549-1.png&#34; alt=&#34;images/2024/12/22/1734873549-1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;ipython-with-packages&#34;&gt;iPython with packages&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx --with pandas,yfinance ipython&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/12/22/1734873549-2.png&#34; alt=&#34;images/2024/12/22/1734873549-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;convert-files-to-markdown&#34;&gt;Convert files to markdown&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx markitdown ssrn-4990063.pdf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;aiderchat&#34;&gt;Aider.chat&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx aider&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;clean-up-pyc-files-and-__pycache__-directories&#34;&gt;Clean up .pyc files and &lt;strong&gt;pycache&lt;/strong&gt; directories&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx pyclean .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Collected from this &lt;a href=&#34;https://www.reddit.com/r/Python/comments/1guf2fh/if_you_use_uv_what_are_your_use_cases_for_uvx/&#34;&gt;Reddit thread&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;run-open-webui&#34;&gt;Run Open WebUI&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx open-webui@latest serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;run-autogen-studio&#34;&gt;Run Autogen Studio&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx autogenstudio@latest ui --port &lt;span style=&#34;color:#ae81ff&#34;&gt;8081&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;run-llm-cli-with-ollama&#34;&gt;Run llm (CLI) with Ollama&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvx --with llm-ollama llm -m llama3.1:latest &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fun facts about Squid Game&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Other examples in official &lt;a href=&#34;https://github.com/simonw/llm/blob/main/docs/setup.md&#34;&gt;docs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Key Metrics for Evaluating Trading System Performance</title>
      <link>//localhost:1313/posts/1734292310-key-metrics-trading-system-performance/</link>
      <pubDate>Sun, 15 Dec 2024 19:51:50 +0000</pubDate>
      <guid>//localhost:1313/posts/1734292310-key-metrics-trading-system-performance/</guid>
      <description>&lt;p&gt;Summary from &lt;a href=&#34;https://x.com/laurensbensdorp/status/1867255454373486768?s=12&#34;&gt;this tweet&lt;/a&gt; from Laurens Bensdorp&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s what seems to matter most:&lt;/p&gt;&#xA;&lt;h3 id=&#34;core-performance-metrics&#34;&gt;Core Performance Metrics:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CAGR (Compound Annual Growth Rate) and its variants&lt;/li&gt;&#xA;&lt;li&gt;CAGR/UI (Ulcer Index) ratio&lt;/li&gt;&#xA;&lt;li&gt;CAGR/MaxDD (Maximum Drawdown)&lt;/li&gt;&#xA;&lt;li&gt;Some use RAR (Risk-Adjusted Return) instead of CAGR for more date-independent analysis&lt;/li&gt;&#xA;&lt;li&gt;Risk Management Metrics:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;maximum-drawdown&#34;&gt;Maximum Drawdown&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Average Exposure (particularly important for mean reversion strategies)&lt;/li&gt;&#xA;&lt;li&gt;Drawdown Correlation&lt;/li&gt;&#xA;&lt;li&gt;Total Drawdown&lt;/li&gt;&#xA;&lt;li&gt;Ulcer Index&lt;/li&gt;&#xA;&lt;li&gt;Trade Quality Indicators:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;profit-factor&#34;&gt;Profit Factor&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Expectancy&lt;/li&gt;&#xA;&lt;li&gt;System Quality Number (SQN)&lt;/li&gt;&#xA;&lt;li&gt;Win Ratio&lt;/li&gt;&#xA;&lt;li&gt;Standard Deviation of Returns&lt;/li&gt;&#xA;&lt;li&gt;Coefficient of Variation&lt;/li&gt;&#xA;&lt;li&gt;Strategy-Specific Considerations:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;for-stocks&#34;&gt;For Stocks:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Individual trade statistics&lt;/li&gt;&#xA;&lt;li&gt;Capital utilization efficiency&lt;/li&gt;&#xA;&lt;li&gt;Average capital use per trade&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;for-futures&#34;&gt;For Futures:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Risk metrics&lt;/li&gt;&#xA;&lt;li&gt;Drawdown analysis&lt;/li&gt;&#xA;&lt;li&gt;Trend gain patterns&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;advanced-analysis&#34;&gt;Advanced Analysis:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Walk-forward testing results consistency&lt;/li&gt;&#xA;&lt;li&gt;Performance during &amp;ldquo;black swan&amp;rdquo; events (1987 crash, flash crashes)&lt;/li&gt;&#xA;&lt;li&gt;Stagnation periods&lt;/li&gt;&#xA;&lt;li&gt;Monthly Return on Risk (RoR)&lt;/li&gt;&#xA;&lt;li&gt;Monthly dollar performance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;evaluation-method-tip&#34;&gt;Evaluation Method Tip:&lt;/h3&gt;&#xA;&lt;p&gt;Some traders use conditional formatting with color ranking to aggregate multiple metrics, helping identify top-performing systems more easily.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Analysing a very simple Short Straddle strategy</title>
      <link>//localhost:1313/posts/1734004071-options-analysis-pipeline/</link>
      <pubDate>Thu, 12 Dec 2024 11:47:51 +0000</pubDate>
      <guid>//localhost:1313/posts/1734004071-options-analysis-pipeline/</guid>
      <description>&lt;h2 id=&#34;gather-data&#34;&gt;Gather data&lt;/h2&gt;&#xA;&lt;p&gt;The Options data is retrieved from &lt;a href=&#34;https://www.optionsdx.com&#34;&gt;optionsdx&lt;/a&gt;.&#xA;This page documents the &lt;a href=&#34;https://www.optionsdx.com/option-chain-field-definitions/&#34;&gt;field definitions&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The downloaded files will be zipped, so extract them into a single directory.&#xA;It&amp;rsquo;ll look something like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/12/12/1734006103-1.png&#34; alt=&#34;images/2024/12/12/1734006103-1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;import-data&#34;&gt;Import data&lt;/h2&gt;&#xA;&lt;p&gt;Use the &lt;a href=&#34;https://github.com/namuan/trading-utils/blob/main/optionsdx-data-importer.py&#34;&gt;optionsdx-data-importer.py&lt;/a&gt; script to import all the data in an SQLite database&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ uvr optionsdx-data-importer.py --input &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/data/spy_eod --output data/spy_eod.db -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The finished database will have an &lt;code&gt;options_data&lt;/code&gt; table with all the data from the downloaded files.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/12/12/1734006103-2.png&#34; alt=&#34;images/2024/12/12/1734006103-2.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-12-11</title>
      <link>//localhost:1313/posts/1733949322-linklist-2024-12-11/</link>
      <pubDate>Wed, 11 Dec 2024 20:35:22 +0000</pubDate>
      <guid>//localhost:1313/posts/1733949322-linklist-2024-12-11/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mljar/supertree&#34;&gt;https://github.com/mljar/supertree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/rudrankriyam/status/1862597006507876640?s=12&#34;&gt;https://x.com/rudrankriyam/status/1862597006507876640?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.blackpiercapital.com/post/leaning-into-discomfort&#34;&gt;https://www.blackpiercapital.com/post/leaning-into-discomfort&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=F3Ow28ImI5U&#34;&gt;https://m.youtube.com/watch?v=F3Ow28ImI5U&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://optionstradingiq.com/road-trip-trade/#&#34;&gt;https://optionstradingiq.com/road-trip-trade/#&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://robotwealth.com/modelling-uvxy-trading-strategies-with-excel/&#34;&gt;https://robotwealth.com/modelling-uvxy-trading-strategies-with-excel/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://minjunes.ai/posts/sleep/index.html&#34;&gt;https://minjunes.ai/posts/sleep/index.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://steelph0enix.github.io/posts/llama-cpp-guide/&#34;&gt;https://steelph0enix.github.io/posts/llama-cpp-guide/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://journals.sagepub.com/doi/abs/10.1177/09567976211044685?journalCode=pssa&#34;&gt;https://journals.sagepub.com/doi/abs/10.1177/09567976211044685?journalCode=pssa&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1h3fxey/convert_multimodal_model_to_gguf_to_run_locally/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1h3fxey/convert_multimodal_model_to_gguf_to_run_locally/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.datacamp.com/blog/mixture-of-million-experts&#34;&gt;https://www.datacamp.com/blog/mixture-of-million-experts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alexbilz/status/1829229314463932689?s=12&#34;&gt;https://x.com/alexbilz/status/1829229314463932689?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/breezedeus/Pix2Text&#34;&gt;https://github.com/breezedeus/Pix2Text&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://my.hrw.com/nsmedia/intgos/html/igo.htm&#34;&gt;https://my.hrw.com/nsmedia/intgos/html/igo.htm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/122pz4e/what_i_learned_from_citadels_training_software/&#34;&gt;https://www.reddit.com/r/options/comments/122pz4e/what_i_learned_from_citadels_training_software/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rahuljoshi44/GraphVega&#34;&gt;https://github.com/rahuljoshi44/GraphVega&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/phiresky/ripgrep-all&#34;&gt;https://github.com/phiresky/ripgrep-all&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/steel-dev/steel-browser&#34;&gt;https://github.com/steel-dev/steel-browser&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://astral.sh/blog/python-build-standalone&#34;&gt;https://astral.sh/blog/python-build-standalone&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/abus-aikorea/voice-pro&#34;&gt;https://github.com/abus-aikorea/voice-pro&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/hkdobrev/cleanmac&#34;&gt;https://github.com/hkdobrev/cleanmac&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kevinqhlin/status/1864356752369832327?s=12&#34;&gt;https://x.com/kevinqhlin/status/1864356752369832327?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/maryrosecook/status/1864364847150014926?s=12&#34;&gt;https://x.com/maryrosecook/status/1864364847150014926?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ruliad_ai/status/1864394941029322890?s=12&#34;&gt;https://x.com/ruliad_ai/status/1864394941029322890?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/physicslog/web-highlighter.user.js&#34;&gt;https://github.com/physicslog/web-highlighter.user.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/yeonholee50/AmpyFin&#34;&gt;https://github.com/yeonholee50/AmpyFin&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/prince_canuma/status/1864793820409319502?s=12&#34;&gt;https://x.com/prince_canuma/status/1864793820409319502?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=2flCDStm9ys&#34;&gt;https://m.youtube.com/watch?v=2flCDStm9ys&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/paulgauthier/status/1865048480080892402?s=12&#34;&gt;https://x.com/paulgauthier/status/1865048480080892402?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/jimwaterson/status/1865015304642023800?s=12&#34;&gt;https://x.com/jimwaterson/status/1865015304642023800?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/skynews/status/1864937759577608685?s=12&#34;&gt;https://x.com/skynews/status/1864937759577608685?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://treevis.net/&#34;&gt;https://treevis.net/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ashpreetbedi/status/1865164275209134411?s=12&#34;&gt;https://x.com/ashpreetbedi/status/1865164275209134411?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/RhetTbull/osxphotos&#34;&gt;https://github.com/RhetTbull/osxphotos&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://openwebui.com/f/latentvariable/o1_at_home&#34;&gt;https://openwebui.com/f/latentvariable/o1_at_home&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cs.au.dk/news-events/award-success-at-ieee-scivis-contest-2023&#34;&gt;https://cs.au.dk/news-events/award-success-at-ieee-scivis-contest-2023&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jjleng/copilot-more&#34;&gt;https://github.com/jjleng/copilot-more&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Upsonic/gpt-computer-assistant&#34;&gt;https://github.com/Upsonic/gpt-computer-assistant&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/chisasaw/redsage&#34;&gt;https://github.com/chisasaw/redsage&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ksidiii/status/1866088473985245220?s=12&#34;&gt;https://x.com/ksidiii/status/1866088473985245220?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/2-fly-4-ai/V0-system-prompt/blob/main/v0-system-prompt(updated%2022-11-2024)#L21&#34;&gt;https://github.com/2-fly-4-ai/V0-system-prompt/blob/main/v0-system-prompt(updated%2022-11-2024)#L21&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>VIX yearly highest values over the last 20 years</title>
      <link>//localhost:1313/posts/1733777812-vix-yearly-highest-high/</link>
      <pubDate>Mon, 09 Dec 2024 20:56:52 +0000</pubDate>
      <guid>//localhost:1313/posts/1733777812-vix-yearly-highest-high/</guid>
      <description>&lt;p&gt;Started as a question from this &lt;a href=&#34;https://x.com/ksidiii/status/1866088473985245220?s=12&#34;&gt;tweet&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;I downloaded &lt;code&gt;^VIX&lt;/code&gt; data from Yahoo Finance using this script.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/trading-utils/blob/main/download_stocks_ohlcv.py&#34;&gt;https://github.com/namuan/trading-utils/blob/main/download_stocks_ohlcv.py&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uvr download_stocks_ohlcv.py --tickers ^VIX --back-period-in-years &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Assuming the output data is download in a CSV file &lt;code&gt;output/\^VIX.csv&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;I imported the CSV data in an Sqlite3 database&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sqlite3 vix.db&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the Sqlite3 prompt&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; vix_prices (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    date &lt;span style=&#34;color:#66d9ef&#34;&gt;TIMESTAMP&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    adj_close REAL,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;close&lt;/span&gt; REAL,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    high REAL,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    low REAL,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;open&lt;/span&gt; REAL,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    volume INTEGER&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;mode&lt;/span&gt; csv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.import &lt;span style=&#34;color:#66d9ef&#34;&gt;output&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;VIX.csv vix_prices&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now run this from the prompt to verify that data is imported successfully.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projects developed using GenAI</title>
      <link>//localhost:1313/posts/1733734776-genai-developed-projects/</link>
      <pubDate>Mon, 09 Dec 2024 08:59:36 +0000</pubDate>
      <guid>//localhost:1313/posts/1733734776-genai-developed-projects/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/code_compass&#34;&gt;https://github.com/namuan/code_compass&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/pyremindkit&#34;&gt;https://github.com/namuan/pyremindkit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/active-breaks&#34;&gt;https://github.com/namuan/active-breaks&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/chat-circuit&#34;&gt;https://github.com/namuan/chat-circuit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/annotate-it&#34;&gt;https://github.com/namuan/annotate-it&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/llm-context-builder&#34;&gt;https://github.com/namuan/llm-context-builder&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/video-line-sdk&#34;&gt;https://github.com/namuan/video-line-sdk&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/persistent-cache&#34;&gt;https://github.com/namuan/persistent-cache&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/snapscan&#34;&gt;https://github.com/namuan/snapscan&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/stock-pulse&#34;&gt;https://github.com/namuan/stock-pulse&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/trading-utils&#34;&gt;https://github.com/namuan/trading-utils&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/namuan/bin-utils&#34;&gt;https://github.com/namuan/bin-utils&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Book recommendations from Mary Rose Cook Tweet</title>
      <link>//localhost:1313/posts/1733520014-book-recommendations-maryrosecook-tweet/</link>
      <pubDate>Fri, 06 Dec 2024 21:20:14 +0000</pubDate>
      <guid>//localhost:1313/posts/1733520014-book-recommendations-maryrosecook-tweet/</guid>
      <description>&lt;p&gt;Collection of interesting books from this &lt;a href=&#34;https://x.com/maryrosecook/status/1864364847150014926?s=12&#34;&gt;tweet&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Looking for book recommendations. UI design, history of technology, memoirs, how the world works, how something was made.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;books&#34;&gt;Books&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A Language Older Than Words&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/60970.A_Language_Older_Than_Words&#34;&gt;https://www.goodreads.com/book/show/60970.A_Language_Older_Than_Words&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;A Pattern Language&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/79766.A_Pattern_Language&#34;&gt;https://www.goodreads.com/book/show/79766.A_Pattern_Language&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Against the Odds (James Dyson autobio)&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/en/book/show/955045.Against_the_Odds&#34;&gt;https://www.goodreads.com/en/book/show/955045.Against_the_Odds&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Asterios Polyp&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/4070095-asterios-polyp&#34;&gt;https://www.goodreads.com/book/show/4070095-asterios-polyp&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Bonfire of the Vanities&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/2666.The_Bonfire_of_the_Vanities&#34;&gt;https://www.goodreads.com/book/show/2666.The_Bonfire_of_the_Vanities&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Building SimCity&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/author/show/42653907.Chaim_Gingold&#34;&gt;https://www.goodreads.com/author/show/42653907.Chaim_Gingold&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Chaos&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/64582.Chaos&#34;&gt;https://www.goodreads.com/book/show/64582.Chaos&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Code Name Ginger&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/en/book/show/1889947.Code_Name_Ginger&#34;&gt;https://www.goodreads.com/en/book/show/1889947.Code_Name_Ginger&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Failure Is Not an Option&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/141499.Failure_is_Not_an_Option&#34;&gt;https://www.goodreads.com/book/show/141499.Failure_is_Not_an_Option&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Game Feel&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/42989445&#34;&gt;https://www.goodreads.com/book/show/42989445&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Game Over (early history of Nintendo)&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/work/editions/858602-game-over-press-start-to-continue&#34;&gt;https://www.goodreads.com/work/editions/858602-game-over-press-start-to-continue&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;In praise of shadows&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/34473.In_Praise_of_Shadows&#34;&gt;https://www.goodreads.com/book/show/34473.In_Praise_of_Shadows&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;del&gt;Making of Prince of Persia&lt;/del&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/13561618-the-making-of-prince-of-persia&#34;&gt;https://www.goodreads.com/book/show/13561618-the-making-of-prince-of-persia&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;del&gt;Masters of Doom&lt;/del&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/222146.Masters_of_Doom&#34;&gt;https://www.goodreads.com/book/show/222146.Masters_of_Doom&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mindstorms&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/703532.Mindstorms&#34;&gt;https://www.goodreads.com/book/show/703532.Mindstorms&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Origins of Form&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/4008634-origins-of-form&#34;&gt;https://www.goodreads.com/book/show/4008634-origins-of-form&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Orbital by Samantha Harvey&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/123136728-orbital&#34;&gt;https://www.goodreads.com/book/show/123136728-orbital&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Revolution in The Valley&lt;/strong&gt; - &lt;a href=&#34;https://goodreads.com/book/show/40492.Revolution_in_The_Valley_The_Insanely_Great_Story_of_How_the_Mac_Was_Made&#34;&gt;https://goodreads.com/book/show/40492.Revolution_in_The_Valley_The_Insanely_Great_Story_of_How_the_Mac_Was_Made&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Regarding the Pain of Others&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/52373.Regarding_the_Pain_of_Others&#34;&gt;https://www.goodreads.com/book/show/52373.Regarding_the_Pain_of_Others&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scorsese on Scorsese&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/641355.Scorsese_on_Scorsese&#34;&gt;https://www.goodreads.com/book/show/641355.Scorsese_on_Scorsese&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;del&gt;Showstopper (on Windows NT)&lt;/del&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/en/book/show/1416925.Show_Stopper&#34;&gt;https://www.goodreads.com/en/book/show/1416925.Show_Stopper&lt;/a&gt;_&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Skunk Works&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/101438.Skunk_Works&#34;&gt;https://www.goodreads.com/book/show/101438.Skunk_Works&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;The Friendly Orange Glow&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/34373814-the-friendly-orange-glow&#34;&gt;https://www.goodreads.com/book/show/34373814-the-friendly-orange-glow&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;The Making of the Atomic Bomb&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/en/book/show/16884.The_Making_of_the_Atomic_Bomb&#34;&gt;https://www.goodreads.com/en/book/show/16884.The_Making_of_the_Atomic_Bomb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;The Wright Brothers (McCullough)&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/en/book/show/22609391-the-wright-brothers&#34;&gt;https://www.goodreads.com/en/book/show/22609391-the-wright-brothers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Timeless Way of Building&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/fa/book/show/106728&#34;&gt;https://www.goodreads.com/fa/book/show/106728&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Train Dreams&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/12991188-train-dreams&#34;&gt;https://www.goodreads.com/book/show/12991188-train-dreams&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Unix: A History and a Memoir&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/en/book/show/53011383-unix&#34;&gt;https://www.goodreads.com/en/book/show/53011383-unix&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Why information grows&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/20763722-why-information-grows&#34;&gt;https://www.goodreads.com/book/show/20763722-why-information-grows&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Working by Studs Terkel&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/author/show/33716.Studs_Terkel&#34;&gt;https://www.goodreads.com/author/show/33716.Studs_Terkel&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;del&gt;Thinking In Systems: A Primer&lt;/del&gt;&lt;/strong&gt; - &lt;a href=&#34;https://www.goodreads.com/book/show/3828902-thinking-in-systems&#34;&gt;https://www.goodreads.com/book/show/3828902-thinking-in-systems&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;em&gt;Crossed off the books that I&amp;rsquo;ve already read&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-24</title>
      <link>//localhost:1313/posts/1733067199-linklist-2024-12-01/</link>
      <pubDate>Sun, 01 Dec 2024 15:33:19 +0000</pubDate>
      <guid>//localhost:1313/posts/1733067199-linklist-2024-12-01/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://alvarezquanttrading.com/blog/spy-sso-and-tlt-strategy/&#34;&gt;https://alvarezquanttrading.com/blog/spy-sso-and-tlt-strategy/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://lihaoyun6.github.io/quickrecorder/&#34;&gt;https://lihaoyun6.github.io/quickrecorder/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.quantum-machines.co/blog/understanding-googles-quantum-error-correction-breakthrough/&#34;&gt;https://www.quantum-machines.co/blog/understanding-googles-quantum-error-correction-breakthrough/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/yannikkellerde/AI-Snip&#34;&gt;https://github.com/yannikkellerde/AI-Snip&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=yjBHheCB6Ek&#34;&gt;https://m.youtube.com/watch?v=yjBHheCB6Ek&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/PMTraders/comments/1gwib1f/delta_hedginggamma_scalping_tips_and_tricks/&#34;&gt;https://www.reddit.com/r/PMTraders/comments/1gwib1f/delta_hedginggamma_scalping_tips_and_tricks/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://colab.research.google.com/gist/virattt/251cfea5e66b21c7b6a58b8952476117/hedge-fund-trading-team.ipynb&#34;&gt;https://colab.research.google.com/gist/virattt/251cfea5e66b21c7b6a58b8952476117/hedge-fund-trading-team.ipynb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=40033490&#34;&gt;https://news.ycombinator.com/item?id=40033490&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/e2b-dev/secure-computer-use&#34;&gt;https://github.com/e2b-dev/secure-computer-use&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart&#34;&gt;https://glama.ai/blog/2024-11-25-model-context-protocol-quickstart&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.viksnewsletter.com/p/short-intro-to-automotive-lidar&#34;&gt;https://www.viksnewsletter.com/p/short-intro-to-automotive-lidar&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kolibril13/status/1861180037837287656?s=12&#34;&gt;https://x.com/kolibril13/status/1861180037837287656?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/freeCodeCamp/devdocs&#34;&gt;https://github.com/freeCodeCamp/devdocs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/192h50w/small_ai_dev_tools_pt_1_context_manager/&#34;&gt;https://www.reddit.com/r/LocalLLaMA/comments/192h50w/small_ai_dev_tools_pt_1_context_manager/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Utq-4KgDBEU&#34;&gt;https://www.youtube.com/watch?v=Utq-4KgDBEU&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://codeium.com/windsurf&#34;&gt;https://codeium.com/windsurf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.diigo.com/profile/garrygolden?page=3&#34;&gt;https://www.diigo.com/profile/garrygolden?page=3&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/spaces/fffiloni/FlipSketch&#34;&gt;https://huggingface.co/spaces/fffiloni/FlipSketch&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alma18499/status/1861351774604439634?s=12&#34;&gt;https://x.com/alma18499/status/1861351774604439634?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/chartmuse/status/1861081940297707586?s=12&#34;&gt;https://x.com/chartmuse/status/1861081940297707586?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ollama.com/blog/functions-as-tools&#34;&gt;https://ollama.com/blog/functions-as-tools&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alonsosilva/status/1861414079505564116?s=12&#34;&gt;https://x.com/alonsosilva/status/1861414079505564116?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://blog.sshh.io/p/building-v0-in-a-weekend&#34;&gt;https://blog.sshh.io/p/building-v0-in-a-weekend&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/tjmlabs/AgentRun&#34;&gt;https://github.com/tjmlabs/AgentRun&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilitywiz/status/1861534082611515548?s=12&#34;&gt;https://x.com/volatilitywiz/status/1861534082611515548?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://discord.com/channels/751429073770643466/809068063411404810/1309442796746182667&#34;&gt;https://discord.com/channels/751429073770643466/809068063411404810/1309442796746182667&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kevinqhlin/status/1861664707654099114?s=12&#34;&gt;https://x.com/kevinqhlin/status/1861664707654099114?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://qwenlm.github.io/blog/qwq-32b-preview/&#34;&gt;https://qwenlm.github.io/blog/qwq-32b-preview/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/ollama/status/1861860394262016036?s=12&#34;&gt;https://x.com/ollama/status/1861860394262016036?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/shortbelly/status/1860971025695170801?s=12&#34;&gt;https://x.com/shortbelly/status/1860971025695170801?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://reasonabledeviations.com/2020/10/01/option-implied-pdfs/&#34;&gt;https://reasonabledeviations.com/2020/10/01/option-implied-pdfs/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/stocks/comments/1h1cds4/if_you_could_only_buy_one_stock_now_what_would_it/&#34;&gt;https://old.reddit.com/r/stocks/comments/1h1cds4/if_you_could_only_buy_one_stock_now_what_would_it/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://restofworld.org/2024/china-tech-tariffs-which-countries-will-impose/?utm_source=rss&amp;amp;utm_medium=rss&amp;amp;utm_campaign=feeds&#34;&gt;https://restofworld.org/2024/china-tech-tariffs-which-countries-will-impose/?utm_source=rss&amp;amp;utm_medium=rss&amp;amp;utm_campaign=feeds&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/Python/comments/1h1ecw7/opennb_open_jupyter_notebooks_from_github_with/&#34;&gt;https://www.reddit.com/r/Python/comments/1h1ecw7/opennb_open_jupyter_notebooks_from_github_with/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/macapps/comments/1h11c8z/is_there_any_tool_to_securely_store_api_keys/&#34;&gt;https://old.reddit.com/r/macapps/comments/1h11c8z/is_there_any_tool_to_securely_store_api_keys/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/bbcarchive/status/1862043757711081952?s=12&#34;&gt;https://x.com/bbcarchive/status/1862043757711081952?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=rfgqiUzZHK4&#34;&gt;https://www.youtube.com/watch?v=rfgqiUzZHK4&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eOjCm5J6DUE&#34;&gt;https://www.youtube.com/watch?v=eOjCm5J6DUE&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HDX7Y1eUwSI&#34;&gt;https://www.youtube.com/watch?v=HDX7Y1eUwSI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5pfCTdwSONw&#34;&gt;https://www.youtube.com/watch?v=5pfCTdwSONw&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bytefer/ollama-ocr&#34;&gt;https://github.com/bytefer/ollama-ocr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/ChatGPTCoding/comments/1h1s1ub/open_source_qwen_25_coder_32b_aider_desktop_app/&#34;&gt;https://old.reddit.com/r/ChatGPTCoding/comments/1h1s1ub/open_source_qwen_25_coder_32b_aider_desktop_app/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LETFs/comments/1h22xgm/how_does_a_100_index_fund_rotation_to_upro_200/&#34;&gt;https://old.reddit.com/r/LETFs/comments/1h22xgm/how_does_a_100_index_fund_rotation_to_upro_200/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/tonghohin/screen-sharing&#34;&gt;https://github.com/tonghohin/screen-sharing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/thorvg/thorvg&#34;&gt;https://github.com/thorvg/thorvg&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/1fj1t9e/i_tested_7_strategies_on_spy_so_you_dont_have_to/&#34;&gt;https://www.reddit.com/r/options/comments/1fj1t9e/i_tested_7_strategies_on_spy_so_you_dont_have_to/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/thetagang/comments/wnt1i5/wheel_golden_rules/&#34;&gt;https://old.reddit.com/r/thetagang/comments/wnt1i5/wheel_golden_rules/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/thetagang/comments/n6ggo7/quick_tip_the_wheel_whats_delta_got_to_do_with_it/&#34;&gt;https://old.reddit.com/r/thetagang/comments/n6ggo7/quick_tip_the_wheel_whats_delta_got_to_do_with_it/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/thetagang/comments/wzwoz0/lets_talk_more_about_the_hyperwheel/&#34;&gt;https://www.reddit.com/r/thetagang/comments/wzwoz0/lets_talk_more_about_the_hyperwheel/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/thetagang/comments/12wv6i0/my_results_for_the_2nd_week_of_trading_1_dte_spx/&#34;&gt;https://old.reddit.com/r/thetagang/comments/12wv6i0/my_results_for_the_2nd_week_of_trading_1_dte_spx/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/kolibril13/status/1862520992381210656?s=12&#34;&gt;https://x.com/kolibril13/status/1862520992381210656?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/QwenLM/Qwen-Agent&#34;&gt;https://github.com/QwenLM/Qwen-Agent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://sive.rs/kimo&#34;&gt;https://sive.rs/kimo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://ollama.com/library/nemotron-mini&#34;&gt;https://ollama.com/library/nemotron-mini&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Nov/29/structured-generation-smollm2-webgpu/&#34;&gt;https://simonwillison.net/2024/Nov/29/structured-generation-smollm2-webgpu/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Tracking Stocks which could 2x in 1 to 3 years (Reddit Thread)</title>
      <link>//localhost:1313/posts/1732879530-download-reddit-post/</link>
      <pubDate>Fri, 29 Nov 2024 11:25:30 +0000</pubDate>
      <guid>//localhost:1313/posts/1732879530-download-reddit-post/</guid>
      <description>&lt;p&gt;Came across &lt;a href=&#34;https://reddit.com/r/stocks/comments/1h1cds4/if_you_could_only_buy_one_stock_now_what_would_it/&#34;&gt;this reddit post&lt;/a&gt; about asking for recommendations where the stock could go at least 2x in 1 to 3 years.&#xA;I thought it would be interesting to track the recommendations and come back in 1 to 3 years and see how they perform.&lt;/p&gt;&#xA;&lt;p&gt;Link to Google Sheet:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1ti14jCFZmWEzYf_FxkefI8v-NX-7Y_-_biZIXC5wO2g/edit?usp=sharing&#34;&gt;https://docs.google.com/spreadsheets/d/1ti14jCFZmWEzYf_FxkefI8v-NX-7Y_-_biZIXC5wO2g/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is the table with current prices:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Symbol Name&lt;/th&gt;&#xA;          &lt;th&gt;Current Price (Dec 2024)&lt;/th&gt;&#xA;          &lt;th&gt;Price in 1 Year (Dec 2025)&lt;/th&gt;&#xA;          &lt;th&gt;Price in 3 Years (Dec 2027)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=ACHR&#34;&gt;ACHR&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$8.08&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=AEYE&#34;&gt;AEYE&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$26.80&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=AMD&#34;&gt;AMD&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$136.24&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=AMZN&#34;&gt;AMZN&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$205.74&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=ASTS&#34;&gt;ASTS&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$23.29&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=AVGO&#34;&gt;AVGO&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$159.67&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=AXON&#34;&gt;AXON&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$634.96&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=BABA&#34;&gt;BABA&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$86.59&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=BITF&#34;&gt;BITF&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$2.15&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=BRK-B&#34;&gt;BRK.B&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$483.08&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=BTBT&#34;&gt;BTBT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$4.43&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=CAVA&#34;&gt;CAVA&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$141.20&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=CCJ&#34;&gt;CCJ&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$57.81&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=CELH&#34;&gt;CELH&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$28.37&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=CLSK&#34;&gt;CLSK&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$13.86&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=COIN&#34;&gt;COIN&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$310.98&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=CRSR&#34;&gt;CRSR&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$7.31&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=CWBK&#34;&gt;CWBK&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$36.50&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=ET&#34;&gt;ET&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$19.42&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=EVLV&#34;&gt;EVLV&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$3.91&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=FBTC&#34;&gt;FBTC&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$84.51&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=GOOG&#34;&gt;GOOG&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$170.82&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=GOOGL&#34;&gt;GOOGL&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$169.23&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=GSAT&#34;&gt;GSAT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$1.90&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=GME&#34;&gt;GME&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$30.89&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=HIMS&#34;&gt;HIMS&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$30.34&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=HOOD&#34;&gt;HOOD&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$37.65&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=IBIT&#34;&gt;IBIT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$55.03&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=INTC&#34;&gt;INTC&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$23.65&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=IONQ&#34;&gt;IONQ&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$32.21&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=KOS&#34;&gt;KOS&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$3.90&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=LAC&#34;&gt;LAC&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$3.95&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=LUNR&#34;&gt;LUNR&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$14.45&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=MARA&#34;&gt;MARA&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$26.92&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=MDGL&#34;&gt;MDGL&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$331.45&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=META&#34;&gt;META&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$569.20&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=MSTR&#34;&gt;MSTR&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$388.84&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=MSTU&#34;&gt;MSTU&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$161.00&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=MSTX&#34;&gt;MSTX&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$100.44&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=MYNZ&#34;&gt;MYNZ&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$0.26&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=NEE&#34;&gt;NEE&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$78.52&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=NVDA&#34;&gt;NVDA&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$135.34&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=NVDL&#34;&gt;NVDL&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$68.98&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=PLTR&#34;&gt;PLTR&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$66.05&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=QBTS&#34;&gt;QBTS&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$2.74&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=QS&#34;&gt;QS&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$5.18&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=QUBT&#34;&gt;QUBT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$6.75&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=RCAT&#34;&gt;RCAT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$9.27&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=RDDT&#34;&gt;RDDT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$140.04&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=RGTI&#34;&gt;RGTI&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$2.40&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=RKLB&#34;&gt;RKLB&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$25.67&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=RYCEY&#34;&gt;RYCEY&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$6.86&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=S&#34;&gt;S&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$28.08&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SAVA&#34;&gt;SAVA&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$3.98&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SHAK&#34;&gt;SHAK&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$132.35&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SIDU&#34;&gt;SIDU&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$1.38&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SMCI&#34;&gt;SMCI&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$35.07&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SOFI&#34;&gt;SOFI&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$16.12&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SOUN&#34;&gt;SOUN&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$7.88&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SPY&#34;&gt;SPY&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$598.83&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=SSYS&#34;&gt;SSYS&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$9.55&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=TMDX&#34;&gt;TMDX&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$87.11&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=TSLA&#34;&gt;TSLA&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$332.89&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=VOO&#34;&gt;VOO&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$550.55&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=VTI&#34;&gt;VTI&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$298.20&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=WMT&#34;&gt;WMT&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$91.88&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=Z&#34;&gt;Z&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;$85.45&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;workflow-to-get-the-symbols-and-current-prices&#34;&gt;Workflow to get the symbols and current prices&lt;/h2&gt;&#xA;&lt;p&gt;With the help of Claude Sonnet, I scraped the symbols and retrieved current prices.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quick Guide to Downloading DevDocs Documentation</title>
      <link>//localhost:1313/posts/1732621769-devdocs-offline-documentation-llm/</link>
      <pubDate>Tue, 26 Nov 2024 11:49:29 +0000</pubDate>
      <guid>//localhost:1313/posts/1732621769-devdocs-offline-documentation-llm/</guid>
      <description>&lt;p&gt;Here is a quick way to download a copy of the documentation for any package available at &lt;code&gt;https://devdocs.io&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/freeCodeCamp/devdocs.git &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cd devdocs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Replace the existing &lt;code&gt;Dockerfile&lt;/code&gt; with this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Dockerfile&#34; data-lang=&#34;Dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Stage 1: Setup dependencies&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ruby:3.3.6 as builder&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C.UTF-8&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; ENABLE_SERVICE_WORKER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /devdocs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get -y install git nodejs libcurl4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    gem install bundler &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf /var/lib/apt/lists/*&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; Gemfile Gemfile.lock Rakefile /devdocs/&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; bundle install --system &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf ~/.gem /root/.bundle/cache /usr/local/bundle/cache&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Stage 2: Final image&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ruby:3.3.6&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C.UTF-8&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; ENABLE_SERVICE_WORKER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /devdocs&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get -y install git nodejs libcurl4 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf /var/lib/apt/lists/*&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Copy installed gems and compiled assets from builder&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;builder /usr/local/bundle /usr/local/bundle&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now build the image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Streamlining reading and managing bookmarked links</title>
      <link>//localhost:1313/posts/1732466006-read-it-later-workflow/</link>
      <pubDate>Sun, 24 Nov 2024 16:33:26 +0000</pubDate>
      <guid>//localhost:1313/posts/1732466006-read-it-later-workflow/</guid>
      <description>&lt;p&gt;Here is a brief recap of the workflow I use to collect links to read later.&lt;/p&gt;&#xA;&lt;p&gt;It starts with a &amp;ldquo;Shortcut,&amp;rdquo; which is available on all iOS/Mac devices.&lt;/p&gt;&#xA;&lt;p&gt;It is either something I want to read today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/11/24/1732467148-1.png&#34; alt=&#34;images/2024/11/24/1732467148-1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Or push it back to tomorrow:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/11/24/1732467148-2.png&#34; alt=&#34;images/2024/11/24/1732467148-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The links end up in a separate &amp;ldquo;Reminders&amp;rdquo; list, which makes it easy to manage.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/11/24/1732467148-3.png&#34; alt=&#34;images/2024/11/24/1732467148-3.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Using Reminders as a way to organize reading links is quite useful, as it nags you at regular intervals.&#xA;And if I&amp;rsquo;m not keen to read something, I simply schedule it back by a month or two.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-24</title>
      <link>//localhost:1313/posts/1732465541-linklist-2024-11-24/</link>
      <pubDate>Sun, 24 Nov 2024 16:25:42 +0000</pubDate>
      <guid>//localhost:1313/posts/1732465541-linklist-2024-11-24/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/coleam00/bolt.new-any-llm&#34;&gt;https://github.com/coleam00/bolt.new-any-llm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://phet.colorado.edu/&#34;&gt;https://phet.colorado.edu/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/zeitlings/alfred-unified-search&#34;&gt;https://github.com/zeitlings/alfred-unified-search&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/Python/comments/1gthdpy/deply_keep_your_python_architecture_clean/&#34;&gt;https://old.reddit.com/r/Python/comments/1gthdpy/deply_keep_your_python_architecture_clean/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=zLEt5oz5Mr8&#34;&gt;https://m.youtube.com/watch?v=zLEt5oz5Mr8&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/ChatGPTPro/comments/1gu2xpq/essential_microservices_10_core_utility_prompts/&#34;&gt;https://old.reddit.com/r/ChatGPTPro/comments/1gu2xpq/essential_microservices_10_core_utility_prompts/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://museumofbadart.org/&#34;&gt;https://museumofbadart.org/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/poe_platform/status/1858605611208110126?s=12&#34;&gt;https://x.com/poe_platform/status/1858605611208110126?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.thepythoncodingstack.com/p/python-turtle-lunar-lander-game-1969-land-on-the-moon&#34;&gt;https://www.thepythoncodingstack.com/p/python-turtle-lunar-lander-game-1969-land-on-the-moon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/msoedov/Alfred-collection/blob/master/Readme.md&#34;&gt;https://github.com/msoedov/Alfred-collection/blob/master/Readme.md&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://blog.harbourfronts.com/2024/11/17/making-use-of-information-embedded-in-vix-futures-term-structures/&#34;&gt;http://blog.harbourfronts.com/2024/11/17/making-use-of-information-embedded-in-vix-futures-term-structures/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://labs.leaningtech.com/blog/webvm-20&#34;&gt;https://labs.leaningtech.com/blog/webvm-20&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://llmstxt.org&#34;&gt;https://llmstxt.org&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/granthawkridge/status/1859170487320080522?s=12&#34;&gt;https://x.com/granthawkridge/status/1859170487320080522?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/betterhn50/status/1859075443489456597?s=12&#34;&gt;https://x.com/betterhn50/status/1859075443489456597?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/Python/comments/1gvnfvi/migrating_from_black_and_flake8_to_ruff/&#34;&gt;https://old.reddit.com/r/Python/comments/1gvnfvi/migrating_from_black_and_flake8_to_ruff/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1gvlzug/i_created_an_ai_research_assistant_that_actually/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1gvlzug/i_created_an_ai_research_assistant_that_actually/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=lbUhVLi9X7M&#34;&gt;https://m.youtube.com/watch?v=lbUhVLi9X7M&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.astralcodexten.com/p/how-did-you-do-on-the-ai-art-turing&#34;&gt;https://www.astralcodexten.com/p/how-did-you-do-on-the-ai-art-turing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://motion.dev/docs/quick-start&#34;&gt;https://motion.dev/docs/quick-start&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.smashingmagazine.com/2024/11/alternatives-typical-technical-illustrations-data-visualisations/&#34;&gt;https://www.smashingmagazine.com/2024/11/alternatives-typical-technical-illustrations-data-visualisations/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sliday/AI-Auto-Completion-Editor&#34;&gt;https://github.com/sliday/AI-Auto-Completion-Editor&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/langrocks/langrocks&#34;&gt;https://github.com/langrocks/langrocks&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/timhwang/status/1859347800129143162?s=12&#34;&gt;https://x.com/timhwang/status/1859347800129143162?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1gwe7gt/samsung_tinyclick_singleturn_agent_for_empowering/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1gwe7gt/samsung_tinyclick_singleturn_agent_for_empowering/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://quant.stackexchange.com/questions/75164/questions-on-options-cost-of-carry-and-relationship-to-futures-cost-of-carry&#34;&gt;https://quant.stackexchange.com/questions/75164/questions-on-options-cost-of-carry-and-relationship-to-futures-cost-of-carry&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://money.stackexchange.com/questions/120487/how-to-compute-ivx-implied-volatility-for-a-specific-expiration-and-the-expect&#34;&gt;https://money.stackexchange.com/questions/120487/how-to-compute-ivx-implied-volatility-for-a-specific-expiration-and-the-expect&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-18</title>
      <link>//localhost:1313/posts/1731923597-linklist-2024-11-18/</link>
      <pubDate>Mon, 18 Nov 2024 09:53:17 +0000</pubDate>
      <guid>//localhost:1313/posts/1731923597-linklist-2024-11-18/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/cline/cline&#34;&gt;https://github.com/cline/cline&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilityvix/status/1854543629219438702?s=12&#34;&gt;https://x.com/volatilityvix/status/1854543629219438702?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://onlinelibrary.wiley.com/doi/full/10.1002/fut.22502&#34;&gt;https://onlinelibrary.wiley.com/doi/full/10.1002/fut.22502&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://openrouter.ai/&#34;&gt;https://openrouter.ai/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.answer.ai/posts/2024-11-07-solveit.html&#34;&gt;https://www.answer.ai/posts/2024-11-07-solveit.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/denser-org/denser-chat&#34;&gt;https://github.com/denser-org/denser-chat&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ideogram.ai/using-ideogram/prompting-tips/text-and-typography&#34;&gt;https://docs.ideogram.ai/using-ideogram/prompting-tips/text-and-typography&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.pybroker.com/en/latest/notebooks/9.%20Rebalancing%20Positions.html&#34;&gt;https://www.pybroker.com/en/latest/notebooks/9.%20Rebalancing%20Positions.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Nov/8/chainforge/&#34;&gt;https://simonwillison.net/2024/Nov/8/chainforge/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/thewh1teagle/vibe&#34;&gt;https://github.com/thewh1teagle/vibe&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://londonist.com/2015/10/how-deep-does-london-go&#34;&gt;https://londonist.com/2015/10/how-deep-does-london-go&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://objective-see.org/tools.html&#34;&gt;https://objective-see.org/tools.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/alienator88/Pearcleaner&#34;&gt;https://github.com/alienator88/Pearcleaner&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vitalik.eth.limo/general/2024/11/09/infofinance.html&#34;&gt;https://vitalik.eth.limo/general/2024/11/09/infofinance.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/moviepy/comments/1c90613/how_can_i_draw_a_line_on_center_of_video_clip/&#34;&gt;https://www.reddit.com/r/moviepy/comments/1c90613/how_can_i_draw_a_line_on_center_of_video_clip/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://zulko.github.io/moviepy/_modules/moviepy/video/tools/drawing.html&#34;&gt;https://zulko.github.io/moviepy/_modules/moviepy/video/tools/drawing.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/tobim/status/1855655639508287627?s=12&#34;&gt;https://x.com/tobim/status/1855655639508287627?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/spaces/Qwen/Qwen2.5-Coder-Artifacts&#34;&gt;https://huggingface.co/spaces/Qwen/Qwen2.5-Coder-Artifacts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://blog.quantinsti.com/calendar-spread-options-trading-strategy/&#34;&gt;https://blog.quantinsti.com/calendar-spread-options-trading-strategy/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/QuantConnect/Lean/tree/master&#34;&gt;https://github.com/QuantConnect/Lean/tree/master&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/lukeed/awesome-cloudflare-workers&#34;&gt;https://github.com/lukeed/awesome-cloudflare-workers&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/adamschwartz/generate.invoice.workers.dev&#34;&gt;https://github.com/adamschwartz/generate.invoice.workers.dev&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://grantslatton.com/software-pathfinding#algorithms-we-develop-software-by&#34;&gt;https://grantslatton.com/software-pathfinding#algorithms-we-develop-software-by&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/microsoft/TinyTroupe&#34;&gt;https://github.com/microsoft/TinyTroupe&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilityvix/status/1856716643583599010?s=12&#34;&gt;https://x.com/volatilityvix/status/1856716643583599010?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://appahead.studio/apps/polycapture/&#34;&gt;https://appahead.studio/apps/polycapture/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/hkproj/status/1856660077492474211?s=12&#34;&gt;https://x.com/hkproj/status/1856660077492474211?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://jan.miksovsky.com/posts/2024/11-12-momboard&#34;&gt;https://jan.miksovsky.com/posts/2024/11-12-momboard&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=42135520&#34;&gt;https://news.ycombinator.com/item?id=42135520&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/&#34;&gt;https://news.virginmediao2.co.uk/o2-unveils-daisy-the-ai-granny-wasting-scammers-time/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=NJ1jAfWR84k&#34;&gt;https://m.youtube.com/watch?v=NJ1jAfWR84k&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/meysamhadeli/codai&#34;&gt;https://github.com/meysamhadeli/codai&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/zeitlings/alfred-workflows/tree/main?tab=readme-ov-file#16-alfredocr&#34;&gt;https://github.com/zeitlings/alfred-workflows/tree/main?tab=readme-ov-file#16-alfredocr&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gist.github.com/jonashaag/95e8b75ed44cc5b93cbc5d4599e3803a&#34;&gt;https://gist.github.com/jonashaag/95e8b75ed44cc5b93cbc5d4599e3803a&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/eduardohleite/applepy&#34;&gt;https://github.com/eduardohleite/applepy&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.alfredapp.com/help/workflows/utilities/transform/&#34;&gt;https://www.alfredapp.com/help/workflows/utilities/transform/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-11-08</title>
      <link>//localhost:1313/posts/1731923520-linklist-2024-11-08/</link>
      <pubDate>Mon, 18 Nov 2024 09:52:01 +0000</pubDate>
      <guid>//localhost:1313/posts/1731923520-linklist-2024-11-08/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Oct/16/sqlite-rails/&#34;&gt;https://simonwillison.net/2024/Oct/16/sqlite-rails/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://time.com/7093536/surgeons-apple-vision-pro/&#34;&gt;https://time.com/7093536/surgeons-apple-vision-pro/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://jonathan-adly.github.io/AgentRun/examples/ollama_llama3/&#34;&gt;https://jonathan-adly.github.io/AgentRun/examples/ollama_llama3/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/alexalbert__/status/1848743018075189719?s=12&#34;&gt;https://x.com/alexalbert__/status/1848743018075189719?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pengfeng/ask.py&#34;&gt;https://github.com/pengfeng/ask.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gemoo.com/compare/screen-studio-alternative.htm&#34;&gt;https://gemoo.com/compare/screen-studio-alternative.htm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/fraser_drops/status/1846294412701454674?s=12&#34;&gt;https://x.com/fraser_drops/status/1846294412701454674?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dottxt-ai.github.io/outlines/latest/cookbook/chain_of_thought/&#34;&gt;https://dottxt-ai.github.io/outlines/latest/cookbook/chain_of_thought/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/LocalLLaMA/comments/1ga25gj/introducing_fast_apply_replicate_cursors_instant/&#34;&gt;https://old.reddit.com/r/LocalLLaMA/comments/1ga25gj/introducing_fast_apply_replicate_cursors_instant/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://xbarapp.com/&#34;&gt;https://xbarapp.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/jxnlco/status/1848804495993561349?s=12&#34;&gt;https://x.com/jxnlco/status/1848804495993561349?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=l8pRSuU81PU&amp;amp;t=9963s&amp;amp;pp=2AHrTZACAQ%3D%3D&#34;&gt;https://m.youtube.com/watch?v=l8pRSuU81PU&amp;amp;t=9963s&amp;amp;pp=2AHrTZACAQ%3D%3D&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/simonw/status/1849333512991900125?s=12&#34;&gt;https://x.com/simonw/status/1849333512991900125?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gist.github.com/wong2/47bb82e9cd6d1e5d81de1ca6e8618880&#34;&gt;https://gist.github.com/wong2/47bb82e9cd6d1e5d81de1ca6e8618880&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/volatilityvix/status/1849455268645449741?s=12&#34;&gt;https://x.com/volatilityvix/status/1849455268645449741?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/vanstriendaniel/status/1849533601895022926?s=12&#34;&gt;https://x.com/vanstriendaniel/status/1849533601895022926?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.davidreis.me/2024/what-happens-when-you-make-a-move-in-lichess&#34;&gt;https://www.davidreis.me/2024/what-happens-when-you-make-a-move-in-lichess&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://old.reddit.com/r/options/comments/1gazw9g/seeking_ideas_for_options_trading_tools_and/&#34;&gt;https://old.reddit.com/r/options/comments/1gazw9g/seeking_ideas_for_options_trading_tools_and/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/gradio/status/1849828584720040424?s=12&#34;&gt;https://x.com/gradio/status/1849828584720040424?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&#34;&gt;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&#34;&gt;https://github.com/meta-llama/llama-recipes/tree/main/recipes/quickstart/NotebookLlama&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://londonsono.com/full-body-ultrasound-scan/&#34;&gt;https://londonsono.com/full-body-ultrasound-scan/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Oct/27/llm-jq/&#34;&gt;https://simonwillison.net/2024/Oct/27/llm-jq/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/mikelikesdesign/SwiftUI-experiments/tree/main/dots%20interaction&#34;&gt;https://github.com/mikelikesdesign/SwiftUI-experiments/tree/main/dots%20interaction&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://labs.google/&#34;&gt;https://labs.google/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/1fsbsq5/needed_a_better_options_trading_tool_made_a/&#34;&gt;https://www.reddit.com/r/options/comments/1fsbsq5/needed_a_better_options_trading_tool_made_a/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/comments/sd6hih/i_made_a_tool_to_learn_and_visualize_option/&#34;&gt;https://www.reddit.com/r/options/comments/sd6hih/i_made_a_tool_to_learn_and_visualize_option/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://optionstradingiq.com/theta-delta-ratio/&#34;&gt;https://optionstradingiq.com/theta-delta-ratio/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/cocktailpeanut/status/1844408840059506863?s=12&#34;&gt;https://x.com/cocktailpeanut/status/1844408840059506863?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=h9Z4oGN89MU&#34;&gt;https://m.youtube.com/watch?v=h9Z4oGN89MU&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Acreom/app&#34;&gt;https://github.com/Acreom/app&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sgoedecke/fish-tank&#34;&gt;https://github.com/sgoedecke/fish-tank&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/johnmai_it/status/1851341001442673025?s=12&#34;&gt;https://x.com/johnmai_it/status/1851341001442673025?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/elder_plinius/status/1851415257517826147?s=12&#34;&gt;https://x.com/elder_plinius/status/1851415257517826147?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://simonwillison.net/2024/Oct/30/copilot-models/&#34;&gt;https://simonwillison.net/2024/Oct/30/copilot-models/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://githubnext.com/projects/github-spark/&#34;&gt;https://githubnext.com/projects/github-spark/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://deepmind.google/discover/blog/pushing-the-frontiers-of-audio-generation/?utm_source=x&amp;amp;utm_medium=social&amp;amp;utm_campaign=&amp;amp;utm_content=&#34;&gt;https://deepmind.google/discover/blog/pushing-the-frontiers-of-audio-generation/?utm_source=x&amp;amp;utm_medium=social&amp;amp;utm_campaign=&amp;amp;utm_content=&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/frnknlsn/status/1851798106834375057?s=12&#34;&gt;https://x.com/frnknlsn/status/1851798106834375057?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/okazz_/status/1851645865292878166?s=12&#34;&gt;https://x.com/okazz_/status/1851645865292878166?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/cocktailpeanut/status/1851807225888571427?s=12&#34;&gt;https://x.com/cocktailpeanut/status/1851807225888571427?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kestra-io/kestra?tab=readme-ov-file&#34;&gt;https://github.com/kestra-io/kestra?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/paulbrodersen/netgraph&#34;&gt;https://github.com/paulbrodersen/netgraph&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/gabotechs/dep-tree&#34;&gt;https://github.com/gabotechs/dep-tree&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=SqbP5IemmZ0&#34;&gt;https://m.youtube.com/watch?v=SqbP5IemmZ0&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/xenovacom/status/1852251703791288469?s=12&#34;&gt;https://x.com/xenovacom/status/1852251703791288469?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sirnfs/OptionSuite&#34;&gt;https://github.com/sirnfs/OptionSuite&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/DS4SD/docling&#34;&gt;https://github.com/DS4SD/docling&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gist.github.com/N8python/b31c84d04caca53e0de3361161646883&#34;&gt;https://gist.github.com/N8python/b31c84d04caca53e0de3361161646883&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/volfpeter/fastapi-htmx-tailwind-example&#34;&gt;https://github.com/volfpeter/fastapi-htmx-tailwind-example&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://blog.entropy.observer/sorting-400-tabs-in-60-seconds/&#34;&gt;https://blog.entropy.observer/sorting-400-tabs-in-60-seconds/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://drew.silcock.dev/blog/everything-you-need-to-know-about-python-3-13/&#34;&gt;https://drew.silcock.dev/blog/everything-you-need-to-know-about-python-3-13/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://brooker.co.za/blog/2023/04/20/hobbies.html&#34;&gt;https://brooker.co.za/blog/2023/04/20/hobbies.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://newsletter.maartengrootendorst.com/p/a-visual-guide-to-quantization&#34;&gt;https://newsletter.maartengrootendorst.com/p/a-visual-guide-to-quantization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/jaredhstocks/status/1852811651554443760?s=12&#34;&gt;https://x.com/jaredhstocks/status/1852811651554443760?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&#34;&gt;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/emollick/status/1853255574843982241?s=12&#34;&gt;https://x.com/emollick/status/1853255574843982241?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ahmetsait/toolgit&#34;&gt;https://github.com/ahmetsait/toolgit&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/hyperfield/yt-channel-downloader&#34;&gt;https://github.com/hyperfield/yt-channel-downloader&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://eieio.games/nonsense/game-16-paccam-pacman-with-your-face/&#34;&gt;https://eieio.games/nonsense/game-16-paccam-pacman-with-your-face/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&#34;&gt;https://dampedspring.com/wp-content/uploads/2024/11/Warning.pdf&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://huggingface.co/bartowski/SuperNova-Medius-GGUF&#34;&gt;https://huggingface.co/bartowski/SuperNova-Medius-GGUF&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dottxt-ai/demos/tree/main/its-a-smol-world&#34;&gt;https://github.com/dottxt-ai/demos/tree/main/its-a-smol-world&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.optionstocksmachines.com/post/2024-11-04-day-12-iteration/&#34;&gt;https://www.optionstocksmachines.com/post/2024-11-04-day-12-iteration/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/huggingface/smollm&#34;&gt;https://github.com/huggingface/smollm&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Minto Pyramid principle</title>
      <link>//localhost:1313/posts/1731747603-minto-pyramid/</link>
      <pubDate>Sat, 16 Nov 2024 09:00:03 +0000</pubDate>
      <guid>//localhost:1313/posts/1731747603-minto-pyramid/</guid>
      <description>&lt;p&gt;User:&#xA;What is Minto pyramid principle for thinking and writing&lt;/p&gt;&#xA;&lt;p&gt;Assistant:&#xA;The Minto Pyramid Principle, developed by Barbara Minto, is a structured approach for organizing information in writing and thinking. It is especially useful for creating clear and compelling reports, presentations, and documents. The principle is based on the idea that ideas should form a pyramid, with the main idea at the top and supporting arguments and details underneath.&lt;/p&gt;&#xA;&lt;p&gt;Here are the key components of the Minto Pyramid Principle:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Breadth Analysis: NYSE and Nasdaq Indicators</title>
      <link>//localhost:1313/posts/1731746422-mcclellan-oscillator/</link>
      <pubDate>Sat, 16 Nov 2024 08:40:23 +0000</pubDate>
      <guid>//localhost:1313/posts/1731746422-mcclellan-oscillator/</guid>
      <description>&lt;p&gt;&lt;strong&gt;User:&#xA;&lt;a href=&#34;https://stockcharts.com/c-sc/sc?s=%24NYMO&amp;amp;p=D&amp;amp;yr=1&amp;amp;mn=6&amp;amp;dy=0&amp;amp;i=t0197117899c&amp;amp;r=1724067215619&#34;&gt;https://stockcharts.com/c-sc/sc?s=%24NYMO&amp;amp;p=D&amp;amp;yr=1&amp;amp;mn=6&amp;amp;dy=0&amp;amp;i=t0197117899c&amp;amp;r=1724067215619&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Assistant:&#xA;This image shows a chart of the NYSE McClellan Oscillator (Ratio Adjusted) over approximately the past year and a half. The chart is divided into two parts:&lt;/p&gt;&#xA;&lt;p&gt;The top section displays the price movement of the indicator, which oscillates between positive and negative values, typically ranging from about -100 to +300.&lt;/p&gt;&#xA;&lt;p&gt;The bottom section shows the daily values of the oscillator itself, represented by a red line graph.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trading TSLA After the 20% Surge: Historical Patterns and Options Strategies</title>
      <link>//localhost:1313/posts/1730122885-tsla-20-percent-jump/</link>
      <pubDate>Mon, 28 Oct 2024 13:41:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1730122885-tsla-20-percent-jump/</guid>
      <description>&lt;p&gt;Last Thursday, TSLA jumped around 20% after the earnings call.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/28/1730124452-1.png&#34; alt=&#34;images/2024/10/28/1730124452-1.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I think there may be an opportunity for a trade due to this extreme movement.&#xA;So I looked into the number of times when there was a significant jump and then what happened afterwards.&lt;/p&gt;&#xA;&lt;p&gt;There are around 9 occasions where TSLA jumped more than 15% in a day, including the one that happened last week.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Date&lt;/th&gt;&#xA;          &lt;th&gt;Jump Day Gain&lt;/th&gt;&#xA;          &lt;th&gt;Next 7 Days Return&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2018-08-02&lt;/td&gt;&#xA;          &lt;td&gt;16.19%&lt;/td&gt;&#xA;          &lt;td&gt;1.97%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2018-10-01&lt;/td&gt;&#xA;          &lt;td&gt;17.35%&lt;/td&gt;&#xA;          &lt;td&gt;-17.32%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2019-10-24&lt;/td&gt;&#xA;          &lt;td&gt;17.67%&lt;/td&gt;&#xA;          &lt;td&gt;5.94%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2020-02-03&lt;/td&gt;&#xA;          &lt;td&gt;19.89%&lt;/td&gt;&#xA;          &lt;td&gt;-1.63%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2020-03-19&lt;/td&gt;&#xA;          &lt;td&gt;18.39%&lt;/td&gt;&#xA;          &lt;td&gt;17.42%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2020-03-24&lt;/td&gt;&#xA;          &lt;td&gt;16.28%&lt;/td&gt;&#xA;          &lt;td&gt;-10.01%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2021-03-09&lt;/td&gt;&#xA;          &lt;td&gt;19.64%&lt;/td&gt;&#xA;          &lt;td&gt;-3.03%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2024-04-29&lt;/td&gt;&#xA;          &lt;td&gt;15.31%&lt;/td&gt;&#xA;          &lt;td&gt;-9.96%&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2024-10-24&lt;/td&gt;&#xA;          &lt;td&gt;21.92%&lt;/td&gt;&#xA;          &lt;td&gt;Not Available&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;There is only one occasion (March 19, 2020) when the stock jumped another 17% after the 18% rise in a single day.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-18)</title>
      <link>//localhost:1313/posts/1729325604-market-2024-10-19-saturday/</link>
      <pubDate>Sat, 19 Oct 2024 09:13:24 +0100</pubDate>
      <guid>//localhost:1313/posts/1729325604-market-2024-10-19-saturday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/17/1729195776-2.png&#34; alt=&#34;images/2024/10/17/1729195776-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/19/1729325953-2.png&#34; alt=&#34;images/2024/10/19/1729325953-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;positions&#34;&gt;Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 24th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$1,037.50&lt;/strong&gt; (+13%) return since Oct 16, 2024 at 4:07 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Nov 18th 1M Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$631.25&lt;/strong&gt; (+6.3%) return since Oct 17, 2024 at 5:44 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/19/1729325953-3.png&#34; alt=&#34;images/2024/10/19/1729325953-3.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 22nd 3/4DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-17)</title>
      <link>//localhost:1313/posts/1729195132-market-2024-10-17-thursday/</link>
      <pubDate>Thu, 17 Oct 2024 20:58:53 +0100</pubDate>
      <guid>//localhost:1313/posts/1729195132-market-2024-10-17-thursday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/16/1729108384-2.png&#34; alt=&#34;images/2024/10/16/1729108384-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/17/1729195776-2.png&#34; alt=&#34;images/2024/10/17/1729195776-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;positions&#34;&gt;Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 23rd 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$612.50&lt;/strong&gt; (+15%) return since Oct 15, 2024 at 4:18 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 24th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$893.75&lt;/strong&gt; (+11%) return since Oct 16, 2024 at 4:07 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Nov 18th 1M Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$293.75&lt;/strong&gt; (+2.9%) return since Oct 17, 2024 at 5:44 PM&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-16)</title>
      <link>//localhost:1313/posts/1729107887-market-2024-10-16-wednesday/</link>
      <pubDate>Wed, 16 Oct 2024 20:44:47 +0100</pubDate>
      <guid>//localhost:1313/posts/1729107887-market-2024-10-16-wednesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/15/1729025493-2.png&#34; alt=&#34;images/2024/10/15/1729025493-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/16/1729108384-2.png&#34; alt=&#34;images/2024/10/16/1729108384-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;positions&#34;&gt;Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 23rd 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$500&lt;/strong&gt; (+12%) return since Oct 15, 2024 at 4:18 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/16/1729108384-3.png&#34; alt=&#34;images/2024/10/16/1729108384-3.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 24th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Double Straddle&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;-$18.75&lt;/strong&gt; (-0.2%) return since Oct 16, 2024 at 4:07 PM&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 16th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>LLM Learning Resources</title>
      <link>//localhost:1313/posts/1729079478-llm-learning-resources/</link>
      <pubDate>Wed, 16 Oct 2024 12:51:18 +0100</pubDate>
      <guid>//localhost:1313/posts/1729079478-llm-learning-resources/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Sebastian Raschka&amp;rsquo;s book &amp;ldquo;&lt;a href=&#34;https://www.manning.com/books/build-a-large-language-model-from-scratch&#34;&gt;Build a Large Language Model From Scratch&lt;/a&gt;&amp;rdquo; &lt;a href=&#34;https://www.youtube.com/watch?v=quh7z1q7-uc&#34;&gt;Video&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ&#34;&gt;Andrej Karpathy&amp;rsquo;s YouTube playlist&lt;/a&gt; on neural networks&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=kCc8FmEb1nY&#34;&gt;Karpathy&amp;rsquo;s NanoGPT tutorial&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=zxQyTK8quyY&#34;&gt;StatQuest videos&lt;/a&gt; on coding a transformer from scratch&lt;/li&gt;&#xA;&lt;li&gt;Video explaining self-attention mechanism: &lt;a href=&#34;https://youtu.be/g2BRIuln4uc&#34;&gt;https://youtu.be/g2BRIuln4uc&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;GitHub repo with diagrams and implementation code: &lt;a href=&#34;https://github.com/adalkiran/llama-nuts-and-bolts&#34;&gt;https://github.com/adalkiran/llama-nuts-and-bolts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Spreadsheet-based approach: &lt;a href=&#34;https://github.com/ianand/spreadsheets-are-all-you-need&#34;&gt;https://github.com/ianand/spreadsheets-are-all-you-need&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Karpathy&amp;rsquo;s llama2.c project: &lt;a href=&#34;https://github.com/karpathy/llama2.c&#34;&gt;https://github.com/karpathy/llama2.c&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-15)</title>
      <link>//localhost:1313/posts/1729025184-market-2024-10-15-tuesday/</link>
      <pubDate>Tue, 15 Oct 2024 21:46:25 +0100</pubDate>
      <guid>//localhost:1313/posts/1729025184-market-2024-10-15-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/13/1728839594.png&#34; alt=&#34;images/2024/10/13/1728839594.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/15/1729025493-2.png&#34; alt=&#34;images/2024/10/15/1729025493-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;positions&#34;&gt;Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 18th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$537.50&lt;/strong&gt; (+15%) return since Oct 11, 2024 at 7:57 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 18th 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$325&lt;/strong&gt; (+10%) return since Oct 14, 2024 at 3:29 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 23rd 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, +$62.50 (+1.5%) return since Oct 15, 2024 at 4:18 PM&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-14)</title>
      <link>//localhost:1313/posts/1728932620-market-2024-10-14-monday/</link>
      <pubDate>Mon, 14 Oct 2024 20:03:40 +0100</pubDate>
      <guid>//localhost:1313/posts/1728932620-market-2024-10-14-monday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/13/1728839594.png&#34; alt=&#34;images/2024/10/13/1728839594.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/14/1728933509-2.png&#34; alt=&#34;images/2024/10/14/1728933509-2.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 18th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;-$475&lt;/strong&gt; (-13%) return since Oct 11, 2024 at 7:57 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 18th 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$43.75&lt;/strong&gt; (+1.4%) return since Oct 14, 2024 at 3:29 PM&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 16th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TDD Cycle in a loop using LLM</title>
      <link>//localhost:1313/posts/1728900744-tdd-cycle-loop-llm/</link>
      <pubDate>Mon, 14 Oct 2024 11:12:24 +0100</pubDate>
      <guid>//localhost:1313/posts/1728900744-tdd-cycle-loop-llm/</guid>
      <description>&lt;p&gt;How to effectively use LLMs to write and iterator over building software?&lt;/p&gt;&#xA;&lt;p&gt;This won&amp;rsquo;t be fully automated as a human input and guidance will be required at each step.&lt;/p&gt;&#xA;&lt;p&gt;See the following picture for a rough loop.&#xA;It&amp;rsquo;ll be handy to have a graph like IDE to make it easy to visualise and have human feedback.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/14/1728901397.png&#34; alt=&#34;images/2024/10/14/1728901397.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://codeinthehole.com/tips/llm-tdd-loop-script/&#34;&gt;https://codeinthehole.com/tips/llm-tdd-loop-script/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://arxiv.org/pdf/2312.04687&#34;&gt;https://arxiv.org/pdf/2312.04687&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/defineprogramming/phindapidocs&#34;&gt;https://github.com/defineprogramming/phindapidocs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-10-14</title>
      <link>//localhost:1313/posts/1728891496-linklist-2024-10-13/</link>
      <pubDate>Mon, 14 Oct 2024 08:38:16 +0100</pubDate>
      <guid>//localhost:1313/posts/1728891496-linklist-2024-10-13/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/options/wiki/toolbox/links/&#34;&gt;https://www.reddit.com/r/options/wiki/toolbox/links/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here are some resources for option trading:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Backtesting Tools**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* OptionStack (backtesting tool, free trial)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* thinkorswim &amp;#34;thinkBack&amp;#34; (backtesting tool within a broker&amp;#39;s platform)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TradeMachine Pro (paid only, but has 30-day free trial)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Tastylive backtesting webapp (free, with account registration)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Technical Analysis**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Daytrading Simulator article on TA for options&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Fidelity TA for options trading Webinar PDF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Investopedia top technical indicators for options trading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TDA three indicators to check before the trade&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Research &amp;amp; Indicators**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Finlo (research and portfolio tracking, free 7-day trial)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Predicting Alpha (volatility forecasting and strategy-focused dashboard, requires registration)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Qwidgets customizable dashboard for researching options trades (free, requires registration)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Simpler Trading (research, analysis, and education, mostly paid but some free resources)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Screeners &amp;amp; Scanners**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Barchart options screener&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* CME Open Interest heatmap for CME options/futures products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* FDScanner&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Golden Sweeps (freemium web site)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Market Chameleon options screener&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Option Samurai (paid subscription only)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Option Sonar unusual activity scanner (free alerts are delayed, paid subscriptions are real-time)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Option Trading Blogs, Video and Podcast Channels**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* InTheMoney YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Option Alpha YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Poor vs. Standard podcast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* projectoption YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Sky View Trading YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Start Options tutorial blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Tastytrade YouTube channel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* TrackingStockPundits options analysis and blogs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;**Other Resources**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* ORATS backtesting blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Spintwig (mostly credit trading strategies)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Thinkorswim&amp;#39;s &amp;#34;How to Trade&amp;#34; section&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/sliday/stupid-ai-coder&#34;&gt;https://github.com/sliday/stupid-ai-coder&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Python script for AI-powered code generation and improvement&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Supports multiple AI models (Claude, GPT-4, Llama)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Iterative code improvement with diff visualization&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Automatic error detection and correction&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Generates complete project folder structure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Creates README and requirements.txt files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Colorful console output with progress indicators&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Option to input task description from a file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Requires Python 3.7+ and installation of dependencies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Usage: `python ai-coder.py` or `python ai-coder.py -f path/to/task_description.txt`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Prompts user for task description, number of iterations, and AI model choice&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Generates project folder with final code, README, requirements.txt, .gitignore, and versions subfolder&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Customizable for AI models, iterations, error handling, and logging verbosity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Quality depends on chosen AI model and task description clarity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Requires internet connection for AI model communication&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Review and test generated code before production use&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/PsyChip/machina&#34;&gt;https://github.com/PsyChip/machina&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- MACHINA: CCTV viewer with realtime object tagger [WIP]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Uses LLAVA, YOLO 11, OpenCV, and FAISS&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Connects to high-resolution RTSP stream, queues frames, and resamples for processing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- YOLO detects objects, assigns IDs based on coordinates, size, and timestamp&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Background thread makes LLM requests to Ollama server for object tagging&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Object matching uses center of detection boxes with 16px tolerance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Test environment: 640x480 processing, 20ms inference time on GTX 1060&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Stream delays 1-2 seconds every ~10 minutes, frame skip mechanism implemented&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Prerequisites:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Python 3.12.x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ollama server with LLAVA model&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Compatible PyTorch version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Dependencies from requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Usage:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - S: snapshot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - R: start/stop recording&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Q: quit app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Left mouse: select&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Middle mouse: zoom&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Right mouse: pan&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Project aims to create a complete headless security system&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- TODO:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Additional UI Layer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - RTS style object selection box with detailed information&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Detection of crowds, car crashes, police, ambulance, running humans&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Webhook callbacks for new/disappeared objects and movement after long stays&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/ekiefl/pooltool&#34;&gt;https://github.com/ekiefl/pooltool&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pooltool is a general purpose billiards simulator crafted specifically for science and engineering.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Its core design principles focus on speed, flexibility, and the ease of visualization and analysis. With an interactive 3D interface, a robust API, and extensive documentation, pooltool aims to be a systemic tool in billiards-related research. Continuously evolving through active maintenance and bolstered by a growing community, this vision for pooltool emphasizes not just its current capabilities, but also its potential for growth and adaptation within billiards simulation.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pooltool is peer-reviewed and published in the Journal of Open Source Software (JOSS) and pyOpenSci.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/souzatharsis/podcastfy-demo?tab=readme-ov-file&#34;&gt;https://github.com/souzatharsis/podcastfy-demo?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Transforming Multi-Sourced Text into Captivating Multi-Lingual Audio Conversations with GenAI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/1fzx8t5/what_is_a_good_first_project_to_learn_how_llms/&#34;&gt;https://www.reddit.com/r/LocalLLaMA/comments/1fzx8t5/what_is_a_good_first_project_to_learn_how_llms/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Watch YouTube videos on how transformers and LLMs work:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - 3Blue1Brown&amp;#39;s video on transformers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Sebastian Raschka&amp;#39;s &amp;#34;Build a Large Language Model From Scratch&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Andrej Karpathy&amp;#39;s &amp;#34;Neural Networks: Zero to Hero&amp;#34; playlist&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Start with understanding embeddings:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use SentenceTransformer to embed texts and visualize vectors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Learn fundamentals of neural networks:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Implement a basic feed-forward network (e.g. for MNIST)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Understand backpropagation algorithm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Study simpler language models:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Character-level prediction with RNNs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Word embeddings like word2vec&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Implement a small transformer from scratch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Read architecture papers on models like T5, BERT, GPT-2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Try recreating a minimal LLM implementation:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Karpathy&amp;#39;s llama2.c as a starting point&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Explore &amp;#34;Spreadsheets are all you need&amp;#34; Excel implementation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Review detailed LLM architecture diagrams&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-10)</title>
      <link>//localhost:1313/posts/1728839108-market-2024-10-13-sunday/</link>
      <pubDate>Sun, 13 Oct 2024 18:05:08 +0100</pubDate>
      <guid>//localhost:1313/posts/1728839108-market-2024-10-13-sunday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/09/1728496330.png&#34; alt=&#34;images/2024/10/09/1728496330.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/13/1728839594.png&#34; alt=&#34;images/2024/10/13/1728839594.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 15th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$762.50&lt;/strong&gt; (+15%) return since Oct 7, 2024 at 3:23 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 17th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$625&lt;/strong&gt; (+15%) return since Oct 10, 2024 at 3:17 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 18th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-09)</title>
      <link>//localhost:1313/posts/1728496063-market-2024-10-09-wednesday/</link>
      <pubDate>Wed, 09 Oct 2024 18:47:44 +0100</pubDate>
      <guid>//localhost:1313/posts/1728496063-market-2024-10-09-wednesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/08/1728416021.png&#34; alt=&#34;images/2024/10/08/1728416021.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/09/1728496330.png&#34; alt=&#34;images/2024/10/09/1728496330.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 15th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$37.50&lt;/strong&gt; (+0.8%) return since Oct 7, 2024 at 3:23 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/09/1728496336.png&#34; alt=&#34;images/2024/10/09/1728496336.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;23-dte&#34;&gt;2/3 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;78-dte&#34;&gt;7/8 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;others&#34;&gt;Others&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-08)</title>
      <link>//localhost:1313/posts/1728415568-market-2024-10-08-tuesday/</link>
      <pubDate>Tue, 08 Oct 2024 20:26:08 +0100</pubDate>
      <guid>//localhost:1313/posts/1728415568-market-2024-10-08-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/07/1728328938.png&#34; alt=&#34;images/2024/10/07/1728328938.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/08/1728416021.png&#34; alt=&#34;images/2024/10/08/1728416021.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 15th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$331.25&lt;/strong&gt; (+6.7%) return since Oct 7, 2024 at 3:23 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/08/1728416032.png&#34; alt=&#34;images/2024/10/08/1728416032.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 10th 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$525&lt;/strong&gt; (+14%) return since Oct 7, 2024 at 3:25 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-10-08</title>
      <link>//localhost:1313/posts/1728891487-linklist-2024-10-06/</link>
      <pubDate>Tue, 08 Oct 2024 08:38:07 +0100</pubDate>
      <guid>//localhost:1313/posts/1728891487-linklist-2024-10-06/</guid>
      <description>&lt;p&gt;&lt;em&gt;Last 7 days (as of 2024-10-08 10:10)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://markrbest.github.io/reading-list/&#34;&gt;https://markrbest.github.io/reading-list/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Book list covers various topics in trading, finance, and programming&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- General trading books:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Advances in Financial Machine Learning&amp;#34; by Marcos Lopez de Prado&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Trading Systems and Methods&amp;#34; by Perry J. Kaufman&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ernie Chan&amp;#39;s books on algorithmic trading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Portfolio management:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Quantitative Portfolio Management&amp;#34; by Michael Isichenko&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Advanced Portfolio Management&amp;#34; by Giuseppe A. Paleologo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Market making and trade cost analysis:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Algorithmic Trading: A Practitioner&amp;#39;s Guide&amp;#34; by Rishi K. Narang&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Strategy optimization:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Experimentation for Engineers&amp;#34; by Aparna Oruganti&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Timothy Master&amp;#39;s books on statistically sound trading strategies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Statistical arbitrage:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Statistical Arbitrage&amp;#34; by Andrew Pole&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The Modern Spirit of Statistical Arbitrage&amp;#34; (article)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Volume price analysis:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;A Complete Guide To Volume Price Analysis&amp;#34; by Anna Coulling&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Books on order flow and volume profile trading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Macro/cycle analysis:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Mastering The Market Cycle&amp;#34; by Howard Marks&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Risk management:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Value at Risk&amp;#34; by Philippe Jorion&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Regime change:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Detecting Regime Change in Computational Finance&amp;#34; by Carl Chiarella et al.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Books about traders:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The New Market Wizards&amp;#34; by Jack D. Schwager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Pit Bull&amp;#34; by Martin Schwartz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Reminiscences of a Stock Operator&amp;#34; by Edwin Lefèvre&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Peter L. Bernstein&amp;#39;s books on economic history and risk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Tail risk management books by Vineer Bhansali&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Trading platform and HPC:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Developing High-Frequency Trading Systems&amp;#34; by Juanjo Ruiz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The Art of Writing Efficient Programs&amp;#34; by Fedor G. Pikus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- General programming:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Joel on Software&amp;#34; by Joel Spolsky&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Refactoring:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Tidy First&amp;#34; by Kent Beck&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Five Lines of Code&amp;#34; by Christian Clausen&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Naming Things&amp;#34; by Sergey Golitsynskiy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Rust programming:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Rust Brain Teasers&amp;#34; by Ferris the Crab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;Rust Atomics and Locks&amp;#34; by Mara Bos&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &amp;#34;The Rust Programming Language&amp;#34; by Steve Klabnik and Carol Nichols&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/mickcolburn_/status/1840421695099691409?s=12&#34;&gt;https://x.com/mickcolburn_/status/1840421695099691409?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mick Colburn, a trader on X, shared an interview he liked with @TradesTurbo and @RealSimpleAriel. The interview discussed a trading strategy that uses a 50-day Moving Average (MA) / ATR multiple rule, which reminds him of what @jfsrevg speaks about. Colburn believes it&amp;#39;s worth looking into as multiple successful traders have endorsed the strategy. He shared the tweet with his followers and encouraged them to check out the interview on youtube.com.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://mathspp.com/blog/how-i-prepare-a-technical-talk&#34;&gt;https://mathspp.com/blog/how-i-prepare-a-technical-talk&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Slide design:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Minimize text, use bullet points&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Large font size&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Avoid distractions and animations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Simplify and enlarge code samples&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use high-contrast, light theme for code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Audience engagement:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Interact with audience&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use shows of hands&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ask simple questions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Ask questions you know the answer to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Talk delivery:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use humor&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Be cautious with live coding&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Manage voice rhythm and tone&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Have fun while presenting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Practice:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Practice repeatedly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Record and critique yourself&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Practice standing up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Learn key points instead of scripting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Use speaker notes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Practice timing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Managing Q&amp;amp;A:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Be comfortable saying &amp;#34;I don&amp;#39;t know&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Suggest private conversations for complex questions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Politely dismiss inappropriate questions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Content preparation:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Brainstorm ideas&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Organize thoughts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Write a blog article as reference&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Create slides last&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Remember:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Guidelines are subjective&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Experiment to find what works for you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=8UuW8o4bHbw&#34;&gt;https://m.youtube.com/watch?v=8UuW8o4bHbw&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- UV is a Python packaging tool written in Rust&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Aims to be blazingly fast and a single binary blob&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Goal: become the only tool needed for Python projects&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Initially reimplemented virtualenv, pip, and pip-tools functionality&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Kept core features in UV pip and UV VF namespaces&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Version 0.3.0 aims to replace workflow tools like PDM, Poetry, or Rye&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Now a complete workflow tool, addressing Python&amp;#39;s biggest criticism&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Can potentially be the only tool needed to work with Python projects&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Downloads Python interpreters from Gregory Szorc&amp;#39;s standalone builds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Standalone builds are single directories with complete Python installations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- UV uses Python installations transparently for virtual environments and commands&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Aims to simplify Python environment management for new programmers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Standalone builds may have quirks due to Python&amp;#39;s resistance to such builds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- UV allows running a local mirror of Python versions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Some users may prefer official Python builds for production environments&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/TeamCinco/Quant-Tools&#34;&gt;https://github.com/TeamCinco/Quant-Tools&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Repository of quantitative analysis tools for financial markets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Covers backtesting, options analysis, correlation studies, and Monte Carlo simulations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Includes tools for:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Backtesting trading strategies&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Correlation analysis between financial instruments&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Financial analysis and visualizations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Macroeconomic analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Options analysis and Greeks calculations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Monte Carlo simulations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - Stock performance analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Each script can be run independently&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Most scripts prompt for user input (e.g., ticker symbols, date ranges, parameters)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Requires Python 3.x and libraries:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - yfinance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - pandas&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - numpy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - matplotlib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - scipy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - scikit-learn&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - pandas_datareader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - backtesting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Dependencies can be installed using pip&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Open for contributions and improvements&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/awnihannun/status/1841109315383648325?s=12&#34;&gt;https://x.com/awnihannun/status/1841109315383648325?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/14/1728894852.png&#34; alt=&#34;images/2024/10/14/1728894852.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-07)</title>
      <link>//localhost:1313/posts/1728328488-market-2024-10-07-monday/</link>
      <pubDate>Mon, 07 Oct 2024 20:14:48 +0100</pubDate>
      <guid>//localhost:1313/posts/1728328488-market-2024-10-07-monday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/04/1728070334.png&#34; alt=&#34;images/2024/10/04/1728070334.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/07/1728328938.png&#34; alt=&#34;images/2024/10/07/1728328938.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 11th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$662.50&lt;/strong&gt; (+13%) return since Oct 4, 2024 at 3:38 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 15th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;-$443.75&lt;/strong&gt; (-8.9%) return since Oct 7, 2024 at 3:23 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/07/1728328947.png&#34; alt=&#34;images/2024/10/07/1728328947.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 10th 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;-$568.75&lt;/strong&gt; (-16%) return since Oct 7, 2024 at 3:25 PM&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-04)</title>
      <link>//localhost:1313/posts/1728069743-market-2024-10-04-friday/</link>
      <pubDate>Fri, 04 Oct 2024 20:22:23 +0100</pubDate>
      <guid>//localhost:1313/posts/1728069743-market-2024-10-04-friday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/03/1727990037.png&#34; alt=&#34;images/2024/10/03/1727990037.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/04/1728070334.png&#34; alt=&#34;images/2024/10/04/1728070334.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 11th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$587.50&lt;/strong&gt; (+10%) return since Oct 3, 2024 at 3:46 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 11th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$275&lt;/strong&gt; (+5.3%) return since Oct 4, 2024 at 3:38 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/04/1728070341.png&#34; alt=&#34;images/2024/10/04/1728070341.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-03)</title>
      <link>//localhost:1313/posts/1727989608-market-2024-10-03-thursday/</link>
      <pubDate>Thu, 03 Oct 2024 22:06:48 +0100</pubDate>
      <guid>//localhost:1313/posts/1727989608-market-2024-10-03-thursday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/02/1727899165.png&#34; alt=&#34;images/2024/10/02/1727899165.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/03/1727990037.png&#34; alt=&#34;images/2024/10/03/1727990037.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 9th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$800&lt;/strong&gt; (+14%) return since Oct 1, 2024 at 4:04 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;/ESZ24 Oct 11th 7/8DTE Short Straddle&lt;/p&gt;&#xA;&lt;p&gt;So far, +$87.50 (+1.5%) return since Oct 3, 2024 at 3:46 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/03/1727990047.png&#34; alt=&#34;images/2024/10/03/1727990047.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-02)</title>
      <link>//localhost:1313/posts/1727898590-market-2024-10-02-wednesday/</link>
      <pubDate>Wed, 02 Oct 2024 20:49:50 +0100</pubDate>
      <guid>//localhost:1313/posts/1727898590-market-2024-10-02-wednesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/01/1727808618.png&#34; alt=&#34;images/2024/10/01/1727808618.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/02/1727899165.png&#34; alt=&#34;images/2024/10/02/1727899165.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 4th 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$587.50&lt;/strong&gt; (+8.5%) return since Sep 26, 2024 at 3:07 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/01/1727808627.png&#34; alt=&#34;images/2024/10/01/1727808627.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 9th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$587.50&lt;/strong&gt; (+11%) return since Oct 1, 2024 at 4:04 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/01/1727808633.png&#34; alt=&#34;images/2024/10/01/1727808633.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 7th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$137.50&lt;/strong&gt; (+3.2%) return since Oct 2, 2024 at 3:53 PM&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-10-01)</title>
      <link>//localhost:1313/posts/1727808153-market-2024-10-01-tuesday/</link>
      <pubDate>Tue, 01 Oct 2024 19:42:34 +0100</pubDate>
      <guid>//localhost:1313/posts/1727808153-market-2024-10-01-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/30/1727721641.png&#34; alt=&#34;images/2024/09/30/1727721641.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/01/1727808618.png&#34; alt=&#34;images/2024/10/01/1727808618.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 4th 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, +$243.75 (+5.5%) return since Sep 26, 2024 at 3:07 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/01/1727808627.png&#34; alt=&#34;images/2024/10/01/1727808627.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 9th 7/8DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;-$37.50&lt;/strong&gt; (-0.7%) return since Oct 1, 2024 at 4:04 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/10/01/1727808633.png&#34; alt=&#34;images/2024/10/01/1727808633.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-30)</title>
      <link>//localhost:1313/posts/1727721151-market-2024-09-30-monday/</link>
      <pubDate>Mon, 30 Sep 2024 19:32:31 +0100</pubDate>
      <guid>//localhost:1313/posts/1727721151-market-2024-09-30-monday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727466415.png&#34; alt=&#34;images/2024/09/27/1727466415.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/30/1727721641.png&#34; alt=&#34;images/2024/09/30/1727721641.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 4th 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$200&lt;/strong&gt; (+4.5%) return since Sep 26, 2024 at 3:07 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727466421.png&#34; alt=&#34;images/2024/09/27/1727466421.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 1st 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$262.50&lt;/strong&gt; (+12%) return since Sep 27, 2024 at 4:12 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-30</title>
      <link>//localhost:1313/posts/1727687969-linklist-2024-09-30/</link>
      <pubDate>Mon, 30 Sep 2024 10:19:29 +0100</pubDate>
      <guid>//localhost:1313/posts/1727687969-linklist-2024-09-30/</guid>
      <description>&lt;p&gt;&lt;em&gt;Last 7 days (as of 2024-09-28 18:57)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Optopsy is an open-source backtesting library for option strategies.&#xA;* The library focuses on answering core questions about option strategies, rather than simulating every possible scenario.&#xA;* The backtesting algorithm involves:&#xA;    * Evaluating option chains within specified entry and exit dates.&#xA;    * Grouping evaluated chains into buckets based on Days to Expiration (DTE) and delta or strike distance percent.&#xA;    * Constructing option strategy legs and calculating profit/loss.&#xA;    * Aggregating results to show average profit/loss for each bucket combination.&#xA;* The algorithm uses bucketing and approximations for performance, so results shouldn&amp;#39;t be the sole basis for trade decisions.&#xA;* The library&amp;#39;s methodology is transparently explained.&#xA;* Contributions (pull requests, comments, suggestions) are welcome.&#xA;* Copyright © 2020 Michael Chu.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MightyMoud/sidekick&#34;&gt;https://github.com/MightyMoud/sidekick&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Sidekick is a CLI tool for deploying applications to a VPS, aiming for Fly.io-like simplicity.&#xA;* **Features:**&#xA;    * One-command VPS setup (Docker, Traefik, sOPS, age).&#xA;    * Deploys applications from a Dockerfile.&#xA;    * Zero-downtime deployments.&#xA;    * High availability and load balancing.&#xA;    * Zero-config SSL certificates.&#xA;    * sslip.io integration.&#xA;    * Built-in SOPS integration for secure secret management.&#xA;* **Installation:** `brew install sidekick` (macOS) or `go install github.com/mightymoud/sidekick@latest` (Linux/Windows).&#xA;* **Requires:** Ubuntu LTS VPS (DigitalOcean or Hetzner recommended), SSH key access.&#xA;* **`sidekick init`:** Sets up the VPS: creates a user, disables root login, updates the system, installs Docker, Traefik, sOPS, age, and configures SSL certificates.&#xA;* **`sidekick launch`:** Deploys an application: requires a Dockerfile and specifies the app name, exposed port, and domain (can use sslip.io).  Handles encryption of `.env` files using sOPS.&#xA;* **`sidekick deploy`:** Deploys a new version of an application with zero downtime.  Checks for `.env` file changes and re-encrypts if necessary.&#xA;* **`sidekick deploy preview`:** Deploys a preview environment tied to the current git commit.&#xA;* **Roadmap:**  Includes features like docker-compose support, improved zero-downtime deploys, firewall setup, multi-VPS management, database deployment, a TUI, and CI/CD integration.&#xA;* **License:** GPL-3.0&#xA;* **Website:** www.sidekickdeploy.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://studio.langchain.com/&#34;&gt;https://studio.langchain.com/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* LangGraph Studio is a desktop application for prototyping and debugging LangGraph applications locally.  Available for MacOS.&#xA;* Offers various templates to jumpstart development:&#xA;    * LangGraph ReAct Agent Template: A simple ReAct agent chatbot with persistent chat memory. ([langchain-ai/react-agent](https://github.com/langchain-ai/react-agent))&#xA;    * LangGraph Data Enrichment Template:  For building data enrichment agents. ([langchain-ai/data-enrichment](https://github.com/langchain-ai/data-enrichment))&#xA;    * LangGraph Retrieval Agent Template: A basic question-answering agent using a retriever. ([langchain-ai/retrieval-agent-template](https://github.com/langchain-ai/retrieval-agent-template))&#xA;    * LangGraph.js Data Enrichment Template:  Similar to the above, but using LangGraph.js. ([langchain-ai/data-enrichment-js](https://github.com/langchain-ai/data-enrichment-js))&#xA;    * LangGraph.js Retrieval Agent Template:  A basic question-answering agent using LangGraph.js and a retriever. ([langchain-ai/retrieval-agent-template-js](https://github.com/langchain-ai/retrieval-agent-template-js))&#xA;    * LangGraph.js ReAct Agent Template: A ReAct agent using LangGraph.js. ([langchain-ai/react-agent-js](https://github.com/langchain-ai/react-agent-js))&#xA;    * New LangGraph Project: A blank template to start a new project. ([langchain-ai/new-langgraph-project](https://github.com/langchain-ai/new-langgraph-project))&#xA;    * New LangGraph.js Project: A blank template to start a new LangGraph.js project. ([langchain-ai/new-langgraphjs-project](https://github.com/langchain-ai/new-langgraphjs-project))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/tcsenpai/multi1&#34;&gt;https://github.com/tcsenpai/multi1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* **multi1:** Creates o1-like reasoning chains using multiple AI providers (locally and remotely).&#xA;* **Supports LiteLLM:**  Enables access to 100+ providers.&#xA;* **Key Features:** Unified interface, LiteLLM default provider (local &amp;amp; remote), configurable sidebar, modular design for easy provider addition.&#xA;* **Supported Providers:** LiteLLM (local &amp;amp; remote), Ollama (local), Perplexity (remote, API key required), Groq (remote, API key required).&#xA;* **Reasoning Chains:** Improves LLM reasoning by creating dynamic Chain of Thought, prompting the model to explore multiple methods and alternative answers.&#xA;* **Improved Accuracy:** Achieves ~70% accuracy on the Strawberry problem (compared to 0% for Llama-3.1-70b and 30% for ChatGPT-4o without prompting).&#xA;* **Open Source and Experimental:** Aims to inspire development of new reasoning strategies.  Not a replication of OpenAI&amp;#39;s o1, which uses different training techniques.&#xA;* **Quickstart:** Requires Python 3, `venv` (optional), and `pip`.  Installation via `pip install -r requirements.txt`. API keys needed for some providers.  Runs using `streamlit run app/main.py`.&#xA;* **Contributing:**  Contributions welcome!  Fork the repo, create a branch, make changes, and submit a pull request.&#xA;* **Derived from g1:**  Originally developed by Benjamin Klieger.&#xA;* **License:** MIT license.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/dena-sohrabi/There?tab=readme-ov-file&#34;&gt;https://github.com/dena-sohrabi/There?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* A native macOS menubar app to track time zones for friends, teammates, or cities.&#xA;* Installation via Homebrew: `brew install --cask there`&#xA;* Add people from X (Twitter), Telegram, or local photos.&#xA;* Add cities without needing to know the time zone.&#xA;* Supports raw UTC offsets.&#xA;* Ultra-low resource usage (CPU and memory).&#xA;* Built with SwiftUI.&#xA;* Requires macOS 13+.&#xA;* Roadmap: Widgets, time slider, auto-update, AppleScript API.&#xA;* Contributions welcome (PRs for small fixes, issues for larger features).&#xA;* Licensed under the MIT License.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://m.youtube.com/watch?v=5V6Lam8GZo4&amp;amp;list=PLjTveVh7FakJOoY6GPZGWHHl4shhDT8iV&amp;amp;index=1&#34;&gt;https://m.youtube.com/watch?v=5V6Lam8GZo4&amp;amp;list=PLjTveVh7FakJOoY6GPZGWHHl4shhDT8iV&amp;amp;index=1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-27)</title>
      <link>//localhost:1313/posts/1727465883-market-2024-09-27-friday/</link>
      <pubDate>Fri, 27 Sep 2024 20:38:03 +0100</pubDate>
      <guid>//localhost:1313/posts/1727465883-market-2024-09-27-friday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/26/1727382729.png&#34; alt=&#34;images/2024/09/26/1727382729.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727466415.png&#34; alt=&#34;images/2024/09/27/1727466415.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 4th 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$200&lt;/strong&gt; (+4.5%) return since Sep 26, 2024 at 3:07 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727466421.png&#34; alt=&#34;images/2024/09/27/1727466421.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 1st 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;-$68.75&lt;/strong&gt; (-3%) return since Sep 27, 2024 at 4:12 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727466427.png&#34; alt=&#34;images/2024/09/27/1727466427.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Productivity - 2024 Edition</title>
      <link>//localhost:1313/posts/1727425815-productivity-2024/</link>
      <pubDate>Fri, 27 Sep 2024 09:30:15 +0100</pubDate>
      <guid>//localhost:1313/posts/1727425815-productivity-2024/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Goals/Principles&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use existing applications where possible&lt;/li&gt;&#xA;&lt;li&gt;Build tools around your workflow. Not the other way around&lt;/li&gt;&#xA;&lt;li&gt;Prefer applications with a simple UI unless they are my own&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Alfred&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is one of my most used applications.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727427648.png&#34; alt=&#34;images/2024/09/27/1727427648.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;All of my workflows and snippets are here&#xA;&lt;a href=&#34;https://github.com/namuan/namuan/tree/main/alfred&#34;&gt;https://github.com/namuan/namuan/tree/main/alfred&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Some of the non-standard way I use Alfred:&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;. Opening a bunch of websites in the morning using a keyword.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/27/1727427658.png&#34; alt=&#34;images/2024/09/27/1727427658.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;. Snippets for storing GPT/LLM prompts&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-26)</title>
      <link>//localhost:1313/posts/1727382365-market-2024-09-26-thursday/</link>
      <pubDate>Thu, 26 Sep 2024 21:26:06 +0100</pubDate>
      <guid>//localhost:1313/posts/1727382365-market-2024-09-26-thursday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/25/1727285675.png&#34; alt=&#34;images/2024/09/25/1727285675.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/26/1727382729.png&#34; alt=&#34;images/2024/09/26/1727382729.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 2nd 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$387.50&lt;/strong&gt; (+10%) return since Sep 24, 2024 at 3:03 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 4th 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/26/1727382738.png&#34; alt=&#34;images/2024/09/26/1727382738.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;23-dte&#34;&gt;2/3 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 30th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-25)</title>
      <link>//localhost:1313/posts/1727284959-market-2024-09-25-wednesday/</link>
      <pubDate>Wed, 25 Sep 2024 18:22:39 +0100</pubDate>
      <guid>//localhost:1313/posts/1727284959-market-2024-09-25-wednesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/24/1727201750.png&#34; alt=&#34;images/2024/09/24/1727201750.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/25/1727285675.png&#34; alt=&#34;images/2024/09/25/1727285675.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 2nd 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;So far, &lt;strong&gt;+$362.50&lt;/strong&gt; (+9.5%) return since Sep 24, 2024 at 3:03 PM&#xA;But looking to close it before day end.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/25/1727285684.png&#34; alt=&#34;images/2024/09/25/1727285684.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 25th 0DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Opened and closed a 0DTE trade&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$112.50&lt;/strong&gt; (+13%) return since Sep 25, 2024 at 3:17 PM&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-24)</title>
      <link>//localhost:1313/posts/1727201032-market-2024-09-24-tuesday/</link>
      <pubDate>Tue, 24 Sep 2024 19:03:52 +0100</pubDate>
      <guid>//localhost:1313/posts/1727201032-market-2024-09-24-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/23/1727117565.png&#34; alt=&#34;images/2024/09/23/1727117565.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/24/1727201750.png&#34; alt=&#34;images/2024/09/24/1727201750.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Oct 2nd 7/8 DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/24/1727201756.png&#34; alt=&#34;images/2024/09/24/1727201756.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;23-dte&#34;&gt;2/3 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 26th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$587.50&lt;/strong&gt; return since Sep 23, 2024 at 3:20 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 27th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-23</title>
      <link>//localhost:1313/posts/1727117710-linklist-2024-09-23/</link>
      <pubDate>Mon, 23 Sep 2024 19:55:10 +0100</pubDate>
      <guid>//localhost:1313/posts/1727117710-linklist-2024-09-23/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Prompt used for generating summary of each page in Poe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;As instructed before, Summarise it using only bullet points in markdown syntax.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;No headings, just bullet points.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I want it as raw markdown so that I can use it in README.md file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{clipboard}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Optopsy is an open source Python library for backtesting options trading strategies&#xA;- Created by Michael Chu and hosted on GitHub&#xA;- Uses a bucketing methodology to group option chains&#xA;- Groups option chains by days to expiration and delta/strike distance from current price&#xA;- Evaluates profit/loss of each option chain and aggregates results into buckets&#xA;- Generates statistics including average profit/loss, minimum, maximum, and distributions&#xA;- Focuses on answering core questions rather than fully replicating real-world events&#xA;- Results are meant for theoretical understanding, not actual trade recommendations&#xA;- Does not factor in external events or sequence of events over time&#xA;- Accuracy can be improved by refining bucket intervals&#xA;- Wiki covers methodology, API reference, data feeds, usage, and contributing&#xA;- Feedback and contributions are welcomed by the developer&#xA;- Allows programmatic backtesting of options strategies in Python&#xA;- Analyzes statistical outcomes across different implied market states&#xA;- Goal is insight into potential performance rather than replicating real events&#xA;- Available open source on GitHub for use, learning, and contribution&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://compute.hyper.space/&#34;&gt;https://compute.hyper.space/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Compute by hyperspace is an agent-driven research engine for power AI users&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/phiresky/thought-forge-ai&#34;&gt;https://github.com/phiresky/thought-forge-ai&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Project: thought-forge-ai&#xA;- Created by: phiresky&#xA;- Purpose: Generate 30-60 second &amp;#34;deep thought&amp;#34; TikTok-style videos&#xA;- Video components:&#xA;    - Spoken monologue&#xA;    - Moving video scenes&#xA;    - Background music&#xA;    - Subtitles&#xA;&#xA;- Key features:&#xA;    - Fully automated content creation&#xA;    - Uses various AI tools and custom code&#xA;    - Generates philosophical and self-improvement content&#xA;&#xA;- Process steps:&#xA;    1. Choose topics, voice, and clickbait title&#xA;    2. Write monologue script&#xA;    3. Convert text to speech&#xA;    4. Split monologue into scenes and create image prompts&#xA;    5. Generate starting images for each scene&#xA;    6. Create scene videos&#xA;    7. Generate music prompt and create music&#xA;    8. Create subtitles&#xA;    9. Merge and finalize video&#xA;&#xA;- Tools used:&#xA;    - LLM (Claude 3.5 or Llama 3.1)&#xA;    - Text-to-Speech (Elevenlabs or coqui-ai)&#xA;    - Text-to-Image (Flux.1 Pro)&#xA;    - Image-to-Video (RunwayML Gen-3 Alpha)&#xA;    - Text-to-Audio for music (MusicGen)&#xA;    - FFmpeg for video processing&#xA;&#xA;- Setup:&#xA;    - Uses pnpm for dependency management&#xA;    - Requires multiple API keys for various services&#xA;    - Provides commands for generating topics and videos&#xA;&#xA;- Current state:&#xA;    - Quality varies from mediocre to surprisingly good&#xA;    - Potential for improvement with better prompts or human input&#xA;    - Video generation is the most expensive and challenging part&#xA;&#xA;- License: Included but not specified in the summary&#xA;- Language: 100% TypeScript&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Doriandarko/maestro&#34;&gt;https://github.com/Doriandarko/maestro&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Maestro is a framework for AI models to orchestrate subagents for task breakdown and execution&#xA;- Breaks down objectives into sub-tasks, executes them, and refines results into a final output&#xA;- Supports multiple AI providers (Anthropic, OpenAI, Google, etc.)&#xA;- Can run locally with LMStudio or Ollama&#xA;- Generates detailed exchange logs&#xA;- Recently added support for Claude 3.5 Sonnet&#xA;- Integrates with LiteLLM for easier model selection&#xA;- Supports GPT-4 and GPT-4o&#xA;- Includes Groq API integration for faster responses&#xA;- Features search capability using Tavily API&#xA;- Requires Python and relevant API keys to run&#xA;- Main script is `python maestro.py`, with variants for different providers&#xA;- Uses orchestrator, sub-agent, and refiner models&#xA;- Allows customization of token limits, model selection, and console output formatting&#xA;- Creates code files and folders for coding projects&#xA;- Generates Markdown log files&#xA;- Released under the MIT License&#xA;- Has 4.1k stars and 640 forks on GitHub&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Blaizzy/fastmlx&#34;&gt;https://github.com/Blaizzy/fastmlx&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- FastMLX is a high-performance, production-ready API for hosting MLX models&#xA;- Supports Vision Language Models (VLMs) and Language Models (LMs)&#xA;- Licensed under Apache Software License 2.0&#xA;- Features include:&#xA;    - OpenAI-compatible API&#xA;    - Dynamic model loading&#xA;    - Support for multiple model types&#xA;    - Image processing capabilities&#xA;    - Efficient resource management&#xA;    - Robust error handling&#xA;    - Customizable and extendable&#xA;- Installation via pip: `pip install fastmlx`&#xA;- Can be run with `fastmlx` command or using uvicorn&#xA;- Supports multiple workers for parallel processing&#xA;- Allows setting number of workers via command line or environment variable&#xA;- API calls similar to OpenAI&amp;#39;s chat completions&#xA;- Supports both Vision Language Models and Language Models&#xA;- Enables streaming responses&#xA;- Implements function calling for specific models (e.g., Llama 3.1, Arcee Agent)&#xA;- Provides endpoints for listing available models&#xA;- Allows adding new models to the API&#xA;- Offers functionality to delete models from memory&#xA;- Has 170 stars and 14 forks on GitHub&#xA;- Latest release is v0.2.1 (as of August 10, 2024)&#xA;- Written primarily in Python (89.1%) and Jinja (10.9%)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kturung/langgraph_streamlit_codeassistant&#34;&gt;https://github.com/kturung/langgraph_streamlit_codeassistant&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- AI-powered assistant integrating Python execution and React component rendering&#xA;- Utilizes Claude 3.5 Sonnet AI model from Anthropic&#xA;- Key features:&#xA;    - Intelligent chat interface&#xA;    - Python code execution in a secure Jupyter notebook environment&#xA;    - Dynamic React component creation and rendering&#xA;    - Integrated file operations (upload, download, management)&#xA;    - Advanced data visualization using matplotlib and other libraries&#xA;    - LangGraph-based workflow with real-time Mermaid diagram&#xA;    - Streamlit interface for user-friendly interaction&#xA;    - Adaptive tool utilization (Python, React, file operations)&#xA;    - Flexible package management&#xA;    - Web resource access capabilities&#xA;    - Robust error handling&#xA;- New feature (03.07.2024): Multimodal support with vision capability&#xA;    - Processes and analyzes images alongside text and code&#xA;    - AI generates content from referenced images&#xA;- Setup instructions provided for Python and Node.js environments&#xA;- Application started using `streamlit run main.py`&#xA;- Automatically initiates React development server in a subprocess&#xA;- Licensed under MIT license&#xA;- Has 451 stars and 92 forks on GitHub&#xA;- Latest release is v0.1.0 (as of July 7, 2024)&#xA;- Written primarily in Python (78.0%), JavaScript (11.1%), HTML (8.0%), and CSS (2.9%)&#xA;- 2 contributors to the project&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/PatrickJS/awesome-cursorrules&#34;&gt;https://github.com/PatrickJS/awesome-cursorrules&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Curated list of awesome .cursorrules files for enhancing Cursor AI experience&#xA;- Cursor AI is an AI-powered code editor&#xA;- .cursorrules files define custom rules for Cursor AI to follow when generating code&#xA;- Benefits of using .cursorrules:&#xA;    - Customized AI behavior&#xA;    - Consistency in coding standards&#xA;    - Context awareness for projects&#xA;    - Improved productivity&#xA;    - Team alignment&#xA;    - Project-specific knowledge integration&#xA;- Contains rules for various categories:&#xA;    - Frontend Frameworks and Libraries&#xA;    - Backend and Full-Stack&#xA;    - Mobile Development&#xA;    - CSS and Styling&#xA;    - State Management&#xA;    - Database and API&#xA;    - Testing&#xA;    - Build Tools and Development&#xA;    - Language-Specific&#xA;    - Other&#xA;- How to use:&#xA;    - Install Cursor AI&#xA;    - Browse and choose a .cursorrules file&#xA;    - Copy it to your project&amp;#39;s root directory&#xA;    - Customize as needed&#xA;- Contributions are welcome:&#xA;    - Fork the repository&#xA;    - Create a new folder in the rules directory&#xA;    - Add your .cursorrules file&#xA;    - Update the main README.md&#xA;    - Submit a pull request&#xA;- Licensed under CC0-1.0&#xA;- Has 469 stars and 20 forks on GitHub&#xA;- 2 contributors to the project&#xA;- Topics: awesome, awesome-list, cursor, cursorrules, cursor-ai-editor&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/finic-ai/finic&#34;&gt;https://github.com/finic-ai/finic&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- Finic is a cloud platform for deploying and managing browser-based automation agents&#xA;- Focuses on fault-tolerant execution of bots, scrapers, and RPA integrations&#xA;- Designed to be unopinionated about development process&#xA;- Currently supports Playwright for DOM interactions and recommends BeautifulSoup for HTML parsing&#xA;- Key features:&#xA;    - Cloud Deployment: Deploy Playwright containers to Finic Cloud&#xA;    - Secure Credential Management: Built-in secret manager&#xA;    - Monitoring: Track agent execution and view logs through dashboard&#xA;- Quickstart:&#xA;    - Install via `pip install finicapi`&#xA;    - Create new agent with `create-finic-app example-project`&#xA;    - Run locally with Poetry&#xA;    - Deploy to Finic Cloud with `finic-deploy`&#xA;- Roadmap includes:&#xA;    - Automated deployment from GitHub&#xA;    - Containers with X11 for advanced UI automation&#xA;    - Session impersonation&#xA;    - Self-healing selectors using LLMs&#xA;    - Scheduling and orchestration features&#xA;    - Automatic rate limit detection&#xA;    - Custom timeouts for long-running tasks&#xA;- Open-source project under Apache-2.0 license&#xA;- 2.1k stars and 117 forks on GitHub&#xA;- Written primarily in TypeScript (80.5%) and Python (15.9%)&#xA;- 10 contributors to the project&#xA;- Topics: integrations, scraper, automation, rpa, generative-ai&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://x.com/linoy_tsaban/status/1836313928940556550?s=12&#34;&gt;https://x.com/linoy_tsaban/status/1836313928940556550?s=12&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-23)</title>
      <link>//localhost:1313/posts/1727116820-market-2024-09-23-monday/</link>
      <pubDate>Mon, 23 Sep 2024 19:40:21 +0100</pubDate>
      <guid>//localhost:1313/posts/1727116820-market-2024-09-23-monday/</guid>
      <description>&lt;p&gt;Missed Friday update. This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/23/1727117565.png&#34; alt=&#34;images/2024/09/23/1727117565.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;No news positions today.&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;23-dte&#34;&gt;2/3 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 23rd 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$628.25&lt;/strong&gt; return since Sep 18, 2024 at 8:36 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 26th 3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/23/1727117573.png&#34; alt=&#34;images/2024/09/23/1727117573.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;78-dte&#34;&gt;7/8 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 24th 7DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-19)</title>
      <link>//localhost:1313/posts/1726770784-market-2024-09-19-thursday/</link>
      <pubDate>Thu, 19 Sep 2024 19:33:04 +0100</pubDate>
      <guid>//localhost:1313/posts/1726770784-market-2024-09-19-thursday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/18/1726688539.png&#34; alt=&#34;images/2024/09/18/1726688539.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/19/1726771140.png&#34; alt=&#34;images/2024/09/19/1726771140.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Around 2% up move so upside is risky for all trades.&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;No news positions today.&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;h3 id=&#34;23-dte&#34;&gt;2/3 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 23rd 3DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/19/1726771148.png&#34; alt=&#34;images/2024/09/19/1726771148.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;78-dte&#34;&gt;7/8 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 24th 7DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/19/1726771156.png&#34; alt=&#34;images/2024/09/19/1726771156.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESZ24 Sep 25th 7DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Diffusers Image Outpaint Huggingface demo locally on a Mac</title>
      <link>//localhost:1313/posts/1726741335-diffusers-image-outpaint-hf-to-mac/</link>
      <pubDate>Thu, 19 Sep 2024 11:22:15 +0100</pubDate>
      <guid>//localhost:1313/posts/1726741335-diffusers-image-outpaint-hf-to-mac/</guid>
      <description>&lt;p&gt;See demo &lt;a href=&#34;https://x.com/namuan_twt/status/1836711982340214788&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Clone HuggingFace space locally&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://huggingface.co/spaces/fffiloni/diffusers-image-outpaint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create Virtual Environment and Install Dependencies&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3.12 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update source to use &lt;code&gt;mps&lt;/code&gt; backend&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/19/1726741576.png&#34; alt=&#34;images/2024/09/19/1726741576.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Run gradio application. It&amp;rsquo;ll take a little time to download all models required to run this space.&#xA;If stuck then exit the process and try again. It should print a link to localhost to open the application.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;venv/bin/gradio app.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-18)</title>
      <link>//localhost:1313/posts/1726687648-market-2024-09-18-wednesday/</link>
      <pubDate>Wed, 18 Sep 2024 20:27:29 +0100</pubDate>
      <guid>//localhost:1313/posts/1726687648-market-2024-09-18-wednesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/17/1726599103.png&#34; alt=&#34;images/2024/09/17/1726599103.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/18/1726688539.png&#34; alt=&#34;images/2024/09/18/1726688539.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;No news positions today.&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 18th 0DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed just before the Interest rate announcement for +$124.75 return since Sep 18, 2024 at 4:06 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;23-dte&#34;&gt;2/3 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 19th 2/3DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-17)</title>
      <link>//localhost:1313/posts/1726598428-market-2024-09-17-tuesday/</link>
      <pubDate>Tue, 17 Sep 2024 19:40:28 +0100</pubDate>
      <guid>//localhost:1313/posts/1726598428-market-2024-09-17-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/16/1726516133.png&#34; alt=&#34;images/2024/09/16/1726516133.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/17/1726599103.png&#34; alt=&#34;images/2024/09/17/1726599103.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 20th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$825&lt;/strong&gt; return since Sep 12, 2024 at 6:41 PM&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;No news positions today due to Sept volatility and FOMC Interest rate decision.&lt;/p&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;&#xA;&lt;h3 id=&#34;0-dte&#34;&gt;0 DTE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 17th 0DTE Short Straddle (Exp)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-16)</title>
      <link>//localhost:1313/posts/1726515438-market-2024-09-16-monday/</link>
      <pubDate>Mon, 16 Sep 2024 20:37:18 +0100</pubDate>
      <guid>//localhost:1313/posts/1726515438-market-2024-09-16-monday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/13/1726249027.png&#34; alt=&#34;images/2024/09/13/1726249027.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/16/1726516133.png&#34; alt=&#34;images/2024/09/16/1726516133.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 16th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed it for a scratch which was pretty good as the market moved around 5% in a week.&lt;/p&gt;&#xA;&lt;p&gt;Closed for -$12.50 (-0.2%) return since Sep 9, 2024 at 5:51 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 20th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Close one straddle to reduce margin requirement and bring strike back to the middle of straddle.&#xA;Looking to close this tomorrow before the FOMC announcement.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-16</title>
      <link>//localhost:1313/posts/1726471582-linklist-2024-09-16/</link>
      <pubDate>Mon, 16 Sep 2024 08:26:22 +0100</pubDate>
      <guid>//localhost:1313/posts/1726471582-linklist-2024-09-16/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://algorithms-tour.stitchfix.com/&#34;&gt;https://algorithms-tour.stitchfix.com/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&#34;&gt;http://www.r2d3.us/visual-intro-to-machine-learning-part-1/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://vallandingham.me/scroller.html&#34;&gt;https://vallandingham.me/scroller.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.joelonsoftware.com/2002/01/06/fire-and-motion/&#34;&gt;https://www.joelonsoftware.com/2002/01/06/fire-and-motion/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/blotterfyi/velocity&#34;&gt;https://github.com/blotterfyi/velocity&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/aorwall/moatless-tools&#34;&gt;https://github.com/aorwall/moatless-tools&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/morishin/XDeck&#34;&gt;https://github.com/morishin/XDeck&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://compute.hyper.space/&#34;&gt;https://compute.hyper.space/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/phiresky/thought-forge-ai?tab=readme-ov-file&#34;&gt;https://github.com/phiresky/thought-forge-ai?tab=readme-ov-file&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Doriandarko/maestro&#34;&gt;https://github.com/Doriandarko/maestro&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Blaizzy/fastmlx&#34;&gt;https://github.com/Blaizzy/fastmlx&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/kturung/langgraph_streamlit_codeassistant&#34;&gt;https://github.com/kturung/langgraph_streamlit_codeassistant&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Exploring Google&#39;s NotebookLM</title>
      <link>//localhost:1313/posts/1726301094-google-ai-notebook-llm/</link>
      <pubDate>Sat, 14 Sep 2024 09:04:54 +0100</pubDate>
      <guid>//localhost:1313/posts/1726301094-google-ai-notebook-llm/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m amazed by Google&amp;rsquo;s &lt;a href=&#34;https://notebooklm.google.com/&#34;&gt;Notebook LLM&lt;/a&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;NotebookLM gives you a personalized AI collaborator that helps you do your best thinking. After uploading your documents, NotebookLM becomes an instant expert in those sources so you can read, take notes, and collaborate with it to refine and organize your ideas.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;View references directly from answers&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/14/1726304618.png&#34; alt=&#34;images/2024/09/14/1726304618.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Click on the reference to jump directly into the relevant section in the source document&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/14/1726304628.png&#34; alt=&#34;images/2024/09/14/1726304628.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-13)</title>
      <link>//localhost:1313/posts/1726248425-market-2024-09-13-friday/</link>
      <pubDate>Fri, 13 Sep 2024 18:27:05 +0100</pubDate>
      <guid>//localhost:1313/posts/1726248425-market-2024-09-13-friday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/12/1726165859.png&#34; alt=&#34;images/2024/09/12/1726165859.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/13/1726249027.png&#34; alt=&#34;images/2024/09/13/1726249027.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 16th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;BTC two almost worthless put. STO ATM Put&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/13/1726249037.png&#34; alt=&#34;images/2024/09/13/1726249037.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 17th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;-$420&lt;/strong&gt; return since Sep 10, 2024, 7:11 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 20th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Added another ATM to expand the area and profit target.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/13/1726249046.png&#34; alt=&#34;images/2024/09/13/1726249046.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;h2 id=&#34;experiments&#34;&gt;Experiments&lt;/h2&gt;&#xA;&lt;p&gt;Some trades that I&amp;rsquo;m following to learn and try out other strategies.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-12)</title>
      <link>//localhost:1313/posts/1726165066-market-2024-09-12-thursday/</link>
      <pubDate>Thu, 12 Sep 2024 19:17:46 +0100</pubDate>
      <guid>//localhost:1313/posts/1726165066-market-2024-09-12-thursday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/11/1726069308.png&#34; alt=&#34;images/2024/09/11/1726069308.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;Things are starting to look green again.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/12/1726165859.png&#34; alt=&#34;images/2024/09/12/1726165859.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It was a strange day and certainly not good for short straddles.&#xA;The market went up without taking any stops&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/12/1726166099.png&#34; alt=&#34;images/2024/09/12/1726166099.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 16th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Added two more puts to expand the tent.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/12/1726165868.png&#34; alt=&#34;images/2024/09/12/1726165868.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 17th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Had to make one adjustment but may need another one as the current price is already too close to breakeven.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-11)</title>
      <link>//localhost:1313/posts/1726068649-market-2024-09-11-wednesday/</link>
      <pubDate>Wed, 11 Sep 2024 16:30:49 +0100</pubDate>
      <guid>//localhost:1313/posts/1726068649-market-2024-09-11-wednesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/10/1725995183.png&#34; alt=&#34;images/2024/09/10/1725995183.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/11/1726069308.png&#34; alt=&#34;images/2024/09/11/1726069308.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 13th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed for &lt;strong&gt;+$246&lt;/strong&gt; return since Sep 6, 2024 at 6:31 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;/ESU24 Sep 16th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;No adjustment required yet although the big swing is taking it closer to the down-side.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/11/1726069315.png&#34; alt=&#34;images/2024/09/11/1726069315.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 17th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;No adjustment required as current price is almost around the middle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-10)</title>
      <link>//localhost:1313/posts/1725956200-market-2024-09-10-tuesday/</link>
      <pubDate>Tue, 10 Sep 2024 09:16:40 +0100</pubDate>
      <guid>//localhost:1313/posts/1725956200-market-2024-09-10-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/09/1725909933.png&#34; alt=&#34;images/2024/09/09/1725909933.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today (up 1.12%):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/10/1725995183.png&#34; alt=&#34;images/2024/09/10/1725995183.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 11th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed it for &lt;strong&gt;+$134&lt;/strong&gt; return since Sep 4, 2024, 6:37 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 12th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed it for &lt;strong&gt;+$140&lt;/strong&gt; return since Sep 5, 2024, 6:46 PM&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 13th 7DTE Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;No adjustment required yet (3DTE now) but if the market keeps going up then will need to adjust it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-09)</title>
      <link>//localhost:1313/posts/1725871619-market-2024-09-09-monday/</link>
      <pubDate>Mon, 09 Sep 2024 09:46:59 +0100</pubDate>
      <guid>//localhost:1313/posts/1725871619-market-2024-09-09-monday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/06/1725645230.png&#34; alt=&#34;images/2024/09/06/1725645230.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/09/1725909933.png&#34; alt=&#34;images/2024/09/09/1725909933.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Market down around -1.68% on Friday&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 11th 552 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;No change. Still going and safe but will plan to close it early tomorrow.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/09/1725909942.png&#34; alt=&#34;images/2024/09/09/1725909942.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 12th 550 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;No change. Still safe so will keep it open for another day&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/09/1725909953.png&#34; alt=&#34;images/2024/09/09/1725909953.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 13th 541 Short Straddle&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Link List :: 2024-09-07</title>
      <link>//localhost:1313/posts/1726471302-linklist-2024-09-07/</link>
      <pubDate>Sat, 07 Sep 2024 08:21:43 +0100</pubDate>
      <guid>//localhost:1313/posts/1726471302-linklist-2024-09-07/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/roboflow/sports&#34;&gt;https://github.com/roboflow/sports&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/raznem/parsera&#34;&gt;https://github.com/raznem/parsera&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/Peng-YM/LeetCode-Anki&#34;&gt;https://github.com/Peng-YM/LeetCode-Anki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/ading2210/poe-api&#34;&gt;https://github.com/ading2210/poe-api&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/linyimin0812/spring-startup-analyzer&#34;&gt;https://github.com/linyimin0812/spring-startup-analyzer&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://optionalpha.com/blog/0dte-options-strategy-performance&#34;&gt;https://optionalpha.com/blog/0dte-options-strategy-performance&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/paul-gauthier/aider/blob/main/benchmark/README.md&#34;&gt;https://github.com/paul-gauthier/aider/blob/main/benchmark/README.md&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/michaelchu/optopsy/wiki&#34;&gt;https://github.com/michaelchu/optopsy/wiki&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/simonw/tools&#34;&gt;https://github.com/simonw/tools&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://github.com/geographyclub/qgis-expressions/tree/main/screens&#34;&gt;https://github.com/geographyclub/qgis-expressions/tree/main/screens&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://www.gpu-mart.com/blog/import-models-from-huggingface-to-ollama&#34;&gt;https://www.gpu-mart.com/blog/import-models-from-huggingface-to-ollama&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;strong&gt;&lt;a href=&#34;https://www.reddit.com/r/LocalLLaMA/comments/1exe1lu/tutorial_getting_phi_35_mini_running_locally_in/&#34;&gt;https://www.reddit.com/r/LocalLLaMA/comments/1exe1lu/tutorial_getting_phi_35_mini_running_locally_in/&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-06)</title>
      <link>//localhost:1313/posts/1725643268-market-2024-09-06-friday/</link>
      <pubDate>Fri, 06 Sep 2024 18:21:08 +0100</pubDate>
      <guid>//localhost:1313/posts/1725643268-market-2024-09-06-friday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/05/1725523593.png&#34; alt=&#34;images/2024/09/05/1725523593.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/06/1725645230.png&#34; alt=&#34;images/2024/09/06/1725645230.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Market down around -1.51%&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 9th 558 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed it for &lt;strong&gt;-$331&lt;/strong&gt; loss&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 10th 556 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Closed it for &lt;strong&gt;+$183&lt;/strong&gt; profit&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 11th 552 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Adjusted. Close existing untested side. Sold another ATM Call.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/06/1725645240.png&#34; alt=&#34;images/2024/09/06/1725645240.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;new-position&#34;&gt;New Position&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 12th 550 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Opened yesterday and had to adjust it today due to large down move.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploying multiple applications on a VPS</title>
      <link>//localhost:1313/posts/1725526000-vps-deployment-multiple-apps/</link>
      <pubDate>Thu, 05 Sep 2024 09:46:40 +0100</pubDate>
      <guid>//localhost:1313/posts/1725526000-vps-deployment-multiple-apps/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://hamel.dev/blog/posts/dokku/&#34;&gt;Dokku: my favorite personal serverless platform&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://becomesovran.com/blog/server-setup-basics.html&#34;&gt;Server Setup Basics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://blog.notmyhostna.me/posts/deploying-docker-images-with-dokku-and-a-custom-nginx-configuration&#34;&gt;Deploying Docker images with Dokku and a custom nginx configuration&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://maxschmitt.me/posts/tutorial-deploy-apps-websites-dokku&#34;&gt;Tutorial: How to Deploy Apps and Websites with Dokku&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Wowu/docker-rollout&#34;&gt;Zero Downtime Deployment for Docker Compose&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/maxcountryman/aquamarine&#34;&gt;aquamarine&lt;/a&gt;&#xA;A demo of zero-downtime deploys with Docker Compose and Traefik&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DareFail/AI-Video-Boilerplate-Pro&#34;&gt;Example Repo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-05)</title>
      <link>//localhost:1313/posts/1725523483-market-2024-09-05-thursday/</link>
      <pubDate>Thu, 05 Sep 2024 09:04:43 +0100</pubDate>
      <guid>//localhost:1313/posts/1725523483-market-2024-09-05-thursday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/04/1725444863.png&#34; alt=&#34;images/2024/09/04/1725444863.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/05/1725523593.png&#34; alt=&#34;images/2024/09/05/1725523593.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;There is a general downward trend across most indexes and sectors,&#xA;particularly in the shorter-term (5-day) moving averages,&#xA;suggesting a short-term market pullback or increased volatility.&lt;/p&gt;&#xA;&lt;h3 id=&#34;existing-positions&#34;&gt;Existing Positions&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 6th 562 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;It recovered a little, but I closed it for a loss as it is getting very close to expiry.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 9th 558 Short Straddle&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Reddit Between Date Range</title>
      <link>//localhost:1313/posts/1725521287-search-reddit-date-range/</link>
      <pubDate>Thu, 05 Sep 2024 08:28:07 +0100</pubDate>
      <guid>//localhost:1313/posts/1725521287-search-reddit-date-range/</guid>
      <description>&lt;p&gt;Here is a link to search Reddit between a date range&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?q=python+site%3Awww.reddit.com&amp;amp;lr=&amp;amp;as_qdr=all&amp;amp;tbs=cdr%3A1%2Ccd_min%3A8%2F27%2F2016%2Ccd_max%3A8%2F13%2F2018&amp;amp;sxsrf=ADLYWIL-MUEOvBsbboTdCB3bjCvwlZvSpg%3A1725520794506&amp;amp;uact=5&#34;&gt;https://www.google.com/search?q=python+site%3Awww.reddit.com&amp;amp;lr=&amp;amp;as_qdr=all&amp;amp;tbs=cdr%3A1%2Ccd_min%3A8%2F27%2F2016%2Ccd_max%3A8%2F13%2F2018&amp;amp;sxsrf=ADLYWIL-MUEOvBsbboTdCB3bjCvwlZvSpg%3A1725520794506&amp;amp;uact=5&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Change the search term and dates accordingly&lt;/p&gt;</description>
    </item>
    <item>
      <title>Market Analysis and Straddle Adjustment Strategies (2024-09-04)</title>
      <link>//localhost:1313/posts/1725443356-market-2024-09-04-tuesday/</link>
      <pubDate>Wed, 04 Sep 2024 10:49:16 +0100</pubDate>
      <guid>//localhost:1313/posts/1725443356-market-2024-09-04-tuesday/</guid>
      <description>&lt;p&gt;This is how the market looked yesterday (2024-09-03):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/04/1725444830.png&#34; alt=&#34;images/2024/09/04/1725444830.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And this is how it looks today:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/04/1725444863.png&#34; alt=&#34;images/2024/09/04/1725444863.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This is after a 2.12% drop.&lt;/p&gt;&#xA;&lt;p&gt;This is how the straddles look before market open, so I think I need to adjust at least one which is expiring on the 6th.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;XSP Sep 6th 562 Short Straddle&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/09/04/1725444896.png&#34; alt=&#34;images/2024/09/04/1725444896.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The price is almost touching the put strike. We have already done one adjustment here, so there are a couple of potential further adjustments:&lt;/p&gt;</description>
    </item>
    <item>
      <title>From Website to PDF using Vivaldi Browser and SingleFile extension</title>
      <link>//localhost:1313/posts/1725099403-blog-posts-to-pdf/</link>
      <pubDate>Sat, 31 Aug 2024 11:16:44 +0100</pubDate>
      <guid>//localhost:1313/posts/1725099403-blog-posts-to-pdf/</guid>
      <description>&lt;h3 id=&#34;pre-requisites&#34;&gt;Pre-Requisites:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Vivaldi Browser (Although any other browser can be used)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/gildas-lormeau/SingleFile&#34;&gt;SingleFile extension&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;If using Chrome then &lt;a href=&#34;https://github.com/gildas-lormeau/single-file-cli&#34;&gt;single-file-cli&lt;/a&gt; should also work,&#xA;but it didn&amp;rsquo;t work with Vivaldi.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Start with a collection of links in a file&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;link1.html&#xA;link2.html&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Download complete HTML for each url&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Note: Change the x,y coordinates if required&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/bin-utils/blob/master/download-urls.py&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;A script to download web pages using Vivaldi browser and SingleFile extension&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Usage:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;./download-urls.py -h&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;./download-urls.py -v file.txt # To log INFO messages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;./download-urls.py -vv file.txt # To log DEBUG messages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; logging&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; subprocess&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; argparse &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ArgumentParser, RawDescriptionHelpFormatter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pyautogui&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup_logging&lt;/span&gt;(verbosity):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;WARNING&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; verbosity &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;INFO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; verbosity &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DEBUG&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basicConfig(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        handlers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;StreamHandler(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(filename)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(lineno)d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(message)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        datefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;logging_level,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;captureWarnings(capture&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse_args&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ArgumentParser(description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;__doc__, formatter_class&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;RawDescriptionHelpFormatter)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;File containing list of URLs&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-v&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--verbose&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;verbose&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase verbosity of logging output&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open_vivaldi&lt;/span&gt;(url):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    subprocess&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Popen([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;open&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vivaldi&amp;#34;&lt;/span&gt;, url])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;process_url&lt;/span&gt;(url):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Set the coordinates where you want to click&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    single_file_x, single_file_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1493&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;92&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    click_x, click_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1489&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;287&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Opening Vivaldi with URL: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    open_vivaldi(url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Wait for the page to load&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Moving to coordinates: (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;single_file_x&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;single_file_y&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pyautogui&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;moveTo(single_file_x, single_file_y)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clicking at current position&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pyautogui&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;click()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Moving to coordinates: (&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;click_x&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;click_y&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pyautogui&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;moveTo(click_x, click_y)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Waiting for 15 seconds&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(args):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Ensure a safe exit is possible&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pyautogui&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FAILSAFE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Initial delay before starting the process&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting initial delay of 5 seconds&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;file) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; f:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            urls &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;splitlines()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Found &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;len(urls)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; URLs in the file&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, url &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(urls, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Processing URL &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; of &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;len(urls)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            process_url(url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Script completed successfully.&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KeyboardInterrupt&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;warning(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Script terminated by user.&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;error(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;An error occurred: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;e&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse_args()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    setup_logging(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verbose)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main(args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Clean up any unwanted tags&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Not all bear markets are equal</title>
      <link>//localhost:1313/posts/1724407248-bear-markets-analysis/</link>
      <pubDate>Fri, 23 Aug 2024 11:00:48 +0100</pubDate>
      <guid>//localhost:1313/posts/1724407248-bear-markets-analysis/</guid>
      <description>&lt;p&gt;Analysis on bear markets from their peak to the trough.&#xA;The data for peak and trough values is extracted from &lt;a href=&#34;https://yardeni.com/wp-content/uploads/BullBearTables.pdf&#34;&gt;Yardeni Research&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;comparison-between-the-last-4-bear-markets&#34;&gt;Comparison between the last 4 bear markets&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/23/1724407445.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is how the performance looks like during those periods&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/23/1724407762.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Performance break down during each bear market&lt;/p&gt;&#xA;&lt;h3 id=&#34;dot-com-bubble-burst&#34;&gt;Dot-com bubble burst&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/23/1724407560.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;global-financial-crises&#34;&gt;Global Financial Crises&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/23/1724407629.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;covid-19-crash&#34;&gt;Covid-19 Crash&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/23/1724407670.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;2022-downturn&#34;&gt;2022 Downturn&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/23/1724407704.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Real Estate vs Stock Market</title>
      <link>//localhost:1313/posts/1724313337-reit-spy-comparison/</link>
      <pubDate>Thu, 22 Aug 2024 08:55:38 +0100</pubDate>
      <guid>//localhost:1313/posts/1724313337-reit-spy-comparison/</guid>
      <description>&lt;p&gt;I selected IYR (as Real Estate proxy) and SPY and compare them over the last 24 years.&#xA;This is expected but surprising to see the performance from 2001 - to date.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/08/22/1724313352.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;As seen in the bottom chart, the stock market just managed to rise above the Real Estate returns.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;SPY (571%) vs IYR (549%)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;But the picture changes if we start a little later.&#xA;Here is the comparison every 4 years from 2001.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to make/lose money with buying dips</title>
      <link>//localhost:1313/posts/1719050638-rsi-dips/</link>
      <pubDate>Sat, 22 Jun 2024 11:03:58 +0100</pubDate>
      <guid>//localhost:1313/posts/1719050638-rsi-dips/</guid>
      <description>&lt;h3 id=&#34;overview&#34;&gt;Overview:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Analyzes stock data for RSI dips below a specified lower threshold and subsequent rises above a higher threshold.&lt;/li&gt;&#xA;&lt;li&gt;Simulates buy and sell actions based on these RSI movements&lt;/li&gt;&#xA;&lt;li&gt;Calculates potential profits/losses from these simulated trades&lt;/li&gt;&#xA;&lt;li&gt;Provides a summary of dips and performance metrics&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/06/22/1719050942.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;&#xA;&lt;p&gt;[GitHub] &lt;a href=&#34;https://github.com/namuan/trading-utils/blob/main/rsi_dips.py&#34;&gt;https://github.com/namuan/trading-utils/blob/main/rsi_dips.py&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;See the top of the script on how to run it&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setup OpenWebUI with Pinokio and run with your own models</title>
      <link>//localhost:1313/posts/1716746252-openwebui-ollama-models/</link>
      <pubDate>Sun, 26 May 2024 18:57:32 +0100</pubDate>
      <guid>//localhost:1313/posts/1716746252-openwebui-ollama-models/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Download &lt;a href=&#34;https://pinokio.computer&#34;&gt;pinokio&lt;/a&gt; and Setup Open WebUI&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Run with a single command&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/pinokio/api/open-webui.git &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;conda shell.bash hook&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda deactivate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda deactivate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda deactivate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda activate base &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; source $HOME/pinokio/api/open-webui.git/app/backend/env/bin/activate $HOME/pinokio/api/open-webui.git/app/backend/env &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash app/backend/s.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Tracking Stocks in Google Sheet</title>
      <link>//localhost:1313/posts/1714824523-track-stocks-csv-google-sheet/</link>
      <pubDate>Sat, 04 May 2024 13:08:43 +0100</pubDate>
      <guid>//localhost:1313/posts/1714824523-track-stocks-csv-google-sheet/</guid>
      <description>&lt;h3 id=&#34;generate-csv-reports&#34;&gt;Generate CSV reports&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./generate-csv-reports.sh 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exporting report&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;combine-all-reports&#34;&gt;Combine all reports&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3 combine-all-csvs.py                                                                                   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;paste-into-google-sheet&#34;&gt;Paste into Google Sheet&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/05/05/1714934552.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;re-arrange-and-apply-formulas&#34;&gt;Re-arrange and apply formulas&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Last Close: =GOOGLEFINANCE(C3,&amp;#34;price&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Current Code: =G3*E3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TV Link: =HYPERLINK(CONCATENATE(&amp;#34;https://www.tradingview.com/chart/?symbol=&amp;#34;, C3), C3)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chart: =sparkline(googlefinance(C3,&amp;#34;price&amp;#34;,today()-30,today()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Profit Loss: =I3-H3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Setup AiTown with Pinokio and run with your own models</title>
      <link>//localhost:1313/posts/1714730035-aitown-ollama-models/</link>
      <pubDate>Fri, 03 May 2024 10:53:56 +0100</pubDate>
      <guid>//localhost:1313/posts/1714730035-aitown-ollama-models/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Download &lt;a href=&#34;https://pinokio.computer&#34;&gt;pinokio&lt;/a&gt; and Setup AiTown&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/pinokio/api/aitown.git/app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;conda shell.bash hook&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda deactivate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda deactivate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda deactivate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; conda activate $HOME/pinokio/api/aitown.git/app/node18&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Shell 1:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./convex-local-backend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Shell 2:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm run dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Switch model&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;First backup Llama3&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ollama cp llama3:latest llama3-backup:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Switch model&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ollama rm llama3:latest; ollama cp openhermes:latest llama3:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Restore llama3 from backup&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ollama rm llama3:latest; ollama cp llama3-backup:latest llama3:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ollama list&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>What happened next when SPY jumped over 2%</title>
      <link>//localhost:1313/posts/1708762767-spy-pct-move/</link>
      <pubDate>Sat, 24 Feb 2024 08:19:29 +0000</pubDate>
      <guid>//localhost:1313/posts/1708762767-spy-pct-move/</guid>
      <description>&lt;p&gt;Last week, SPY jump over 2% on Thursday&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2024/02/24/1708762923.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This was surprising for many as the market is already up a lot.&lt;/p&gt;&#xA;&lt;p&gt;So, I wanted to see what happened the next day when SPY jumped over 2%.&lt;/p&gt;&#xA;&lt;p&gt;Here are the results over the last 10 years.&lt;/p&gt;&#xA;&lt;p&gt;The next day change after a 2% jump&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Next Day Change&lt;/th&gt;&#xA;          &lt;th&gt;Number of Occurrences&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&amp;lt; 0&lt;/td&gt;&#xA;          &lt;td&gt;36&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&amp;gt; 0&lt;/td&gt;&#xA;          &lt;td&gt;25&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&amp;gt; 1 %&lt;/td&gt;&#xA;          &lt;td&gt;13&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&amp;gt; 2 %&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&amp;gt; 3 %&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;This doesn&amp;rsquo;t tell us much, but it does give us a good indication of what is going on.&#xA;Next, I&amp;rsquo;m planning to overlay other indicators to say if this is a trend or not.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Train a custom LLM/ChatGPT on my own documents (2023/2024)</title>
      <link>//localhost:1313/posts/1705859719-hn-gpt-documents-2023/</link>
      <pubDate>Sun, 21 Jan 2024 17:55:20 +0000</pubDate>
      <guid>//localhost:1313/posts/1705859719-hn-gpt-documents-2023/</guid>
      <description>&lt;h2 id=&#34;train-a-custom-llmchatgpt-on-my-own-documents-20232024&#34;&gt;Train a custom LLM/ChatGPT on my own documents (2023/2024)&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://red.ht/llmappdev&#34;&gt;Red Hat LLM App Dev&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://arxiv.org/abs/2312.10997&#34;&gt;ArXiv Paper&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/dotey/status/1738400607336120573/photo/2&#34;&gt;Twitter Post by @dotey&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;GitHub - deepset-ai/haystack&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.llamaindex.ai/en/stable/community/integrations/managed_indices.html&#34;&gt;LlamaIndex Docs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/en-us/research/group/dynamics-insights-apps-artificial-intelligence-machine-learning/articles/prompt-engineering-improving-our-ability-to-communicate-with-an-llm/&#34;&gt;Microsoft Research on Prompt Engineering&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.lyzr.ai/27-parameters-techniques-considerations-for-building-a-llm-powered-state-of-the-art-sota-chatbot/&#34;&gt;Lyzr AI - Building a SOTA Chatbot&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/bublint/ue5-llama-lora&#34;&gt;GitHub - UE5 Llama Lora&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ensembleanalytics.io/blog/introducing-bedrock-knowledge-bases&#34;&gt;Ensemble Analytics - Introducing Bedrock&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/q/&#34;&gt;AWS Q&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.harpercarroll.com/articles/ai/llm-finetune-own-data&#34;&gt;Harper Carroll - Finetune LLM with Own Data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ghostarchive.org/varchive/kmkcNVvEz-k&#34;&gt;Ghost Archive&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://twitter.com/xaiguydotagi/status/1737082280835703142&#34;&gt;Twitter Post by @xaiguydotagi&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.llamaindex.ai/en/stable/optimizing/production_rag.html&#34;&gt;LlamaIndex Docs - Production RAG&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.deeplearning.ai/short-courses/finetuning-large-language-models/&#34;&gt;deeplearning.ai - Fine-Tuning LLMs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ragntune.com/blog/Fine-tuning-an-LLM-to-be-good-at-RAG&#34;&gt;Ragntune Blog - Fine-tuning an LLM for RAG&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/h2oai/h2ogpt&#34;&gt;GitHub - H2Oai/h2ogpt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/imartinez/privateGPT&#34;&gt;GitHub - imartinez/privateGPT&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cheshire-cat-ai/core&#34;&gt;GitHub - cheshire-cat-ai/core&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.llamaindex.ai/en/stable/examples/retrievers/bm25_retriever.html&#34;&gt;LlamaIndex Docs - BM25 Retriever&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://til.simonwillison.net/llms/embed-paragraphs&#34;&gt;Simon Willison&amp;rsquo;s TIL - Embedding Paragraphs in LLMs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ndurner.github.io/training-own-model-finetuning&#34;&gt;ndurner GitHub - Training Own Model Finetuning&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://notebooklm.google/&#34;&gt;Google NotebookLM&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/outlines-dev/outlines&#34;&gt;GitHub - outlines-dev/outlines&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/1rgs/jsonformer&#34;&gt;GitHub - 1rgs/jsonformer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/khoj-ai/khoj&#34;&gt;GitHub - khoj-ai/khoj&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.anthropic.com/index/claude-2-1-prompting&#34;&gt;Anthropic - Claude 2.1 Prompting&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://neuml.github.io/txtai/&#34;&gt;txtai - NeuML&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gpt4all.io/&#34;&gt;GPT4All&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.daily.co/blog/search-your-video-content-library-with-llamaindex-and-chroma/&#34;&gt;Daily.co - Search Video Content with LlamaIndex&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/weaviate/Verba&#34;&gt;GitHub - Weaviate/Verba&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/embedchain/embedchain&#34;&gt;GitHub - EmbedChain&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.llamaindex.ai/en/stable/understanding/putting_it_all_together/structured_data.html&#34;&gt;LlamaIndex Docs - Structured Data&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/tucared/llm-file-explorer&#34;&gt;GitHub - tucared/llm-file-explorer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://blog.llamaindex.ai/running-mixtral-8x7-locally-with-llamaindex-e6cebeabe0ab?gi=831e3e521f6c&#34;&gt;LlamaIndex Blog - Running Mixtral 8x7 Locally&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/SecureAI-Tools/SecureAI-Tools&#34;&gt;GitHub - SecureAI-Tools/SecureAI-Tools&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://technoclub.bearblog.dev/creating-a-simple-ai-chat-with-your-own-pdf-application/&#34;&gt;Technoclub - Creating a Simple AI Chat&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/assafelovic/gpt-researcher&#34;&gt;GitHub - assafelovic/gpt-researcher&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.github.com/jerpint/Buster&#34;&gt;GitHub - jerpint/Buster&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/semantic-kernel&#34;&gt;GitHub - microsoft/semantic-kernel&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/azure/aistudio-copilot-sample&#34;&gt;GitHub - azure/aistudio-copilot-sample&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Mintplex-Labs/anything-llm&#34;&gt;GitHub - Mintplex-Labs/anything-llm&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langroid/langroid&#34;&gt;GitHub - Langroid&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/langroid/langroid/blob/main/langroid/agent/special/doc_chat_agent.py&#34;&gt;Langroid Doc Chat Agent&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://langroid.github.io/langroid/examples/agent-tree/&#34;&gt;Langroid Examples&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://colab.research.google.com/github/langroid/langroid/blob/main/examples/Langroid_quick_start.ipynb&#34;&gt;Langroid Quick Start - Google Colab&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Source: &lt;a href=&#34;https://news.ycombinator.com/item?id=38759877&#34;&gt;Ask HN: How do I train a custom LLM/ChatGPT on my own documents in Dec 2023?&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Function calling using Ollama models</title>
      <link>//localhost:1313/posts/1702742595-function-calling-ollama-models/</link>
      <pubDate>Sat, 16 Dec 2023 16:03:16 +0000</pubDate>
      <guid>//localhost:1313/posts/1702742595-function-calling-ollama-models/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2023/12/16/1702744605.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is a quick breakthrough of using &lt;code&gt;functions&lt;/code&gt; with &lt;a href=&#34;https://mistral.ai/news/mixtral-of-experts/&#34;&gt;Mixtral&lt;/a&gt; running on &lt;a href=&#34;https://ollama.ai&#34;&gt;Ollama&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/llm-playground/blob/main/local-llm-tools-simple.py&#34;&gt;Code&lt;/a&gt; is available here.&lt;/p&gt;&#xA;&lt;p&gt;It is built on top of &lt;a href=&#34;https://github.com/abacaj/openhermes-function-calling/blob/main/openhermes-functions.ipynb&#34;&gt;openhermes-functions&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/abacaj&#34;&gt;abacaj&lt;/a&gt; 🙏&lt;/p&gt;&#xA;&lt;p&gt;The prompt used looks like this&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You have access to the following tools:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{function_to_json(get_weather)}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{function_to_json(calculate_mortgage_payment)}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{function_to_json(get_directions)}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{function_to_json(get_article_details)}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You must follow these instructions:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Always select one or more of the above tools based on the user query&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If a tool is found, you must respond in the JSON format matching the following schema:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;#34;tools&amp;#34;: {{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;#34;tool&amp;#34;: &amp;#34;&amp;lt;name of the selected tool&amp;gt;&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;#34;tool_input&amp;#34;: &amp;lt;parameters for the selected tool, matching the tool&amp;#39;s JSON schema&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   }}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If there are multiple tools required, make sure a list of tools are returned in a JSON array.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If there is no tool that match the user request, you will respond with empty json.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Do not add any additional Notes or Explanations&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User Query:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And ran it through the following functions&lt;/p&gt;</description>
    </item>
    <item>
      <title>Weekly Notes 2023-12-03</title>
      <link>//localhost:1313/posts/1701633809-weekly-notes/</link>
      <pubDate>Sun, 03 Dec 2023 20:03:29 +0000</pubDate>
      <guid>//localhost:1313/posts/1701633809-weekly-notes/</guid>
      <description>&lt;h4 id=&#34;summarizehttpsgithubcomfafrdsummarize&#34;&gt;&lt;a href=&#34;https://github.com/fafrd/summarize&#34;&gt;summarize&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Summarize a youtube video using whisper.cpp and youtube-dl. Very handy script for a common use case&lt;/p&gt;&#xA;&lt;h4 id=&#34;vscode-ui-sketcherhttpsgithubcompairprogiovscode-ui-sketcher&#34;&gt;&lt;a href=&#34;https://github.com/pAIrprogio/vscode-ui-sketcher&#34;&gt;vscode-ui-sketcher&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Generate code from mockups from inside Visual Studio Code&lt;/p&gt;&#xA;&lt;h4 id=&#34;streamlit-agenthttpsgithubcomlangchain-aistreamlit-agent&#34;&gt;&lt;a href=&#34;https://github.com/langchain-ai/streamlit-agent&#34;&gt;streamlit-agent&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;h4 id=&#34;distillamahttpsgithubcomshreyaskarnikdistillama&#34;&gt;&lt;a href=&#34;https://github.com/shreyaskarnik/DistiLlama&#34;&gt;DistiLlama&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Looks like a very useful project but I can&amp;rsquo;t get it to work due to some yarn/corepack issues :confused:&lt;/p&gt;&#xA;&lt;h4 id=&#34;talking_with_hnhttpsgithubcomneural-mazetalking_with_hn&#34;&gt;&lt;a href=&#34;https://github.com/neural-maze/talking_with_hn&#34;&gt;talking_with_hn&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;A simple but practical example of using LangChain with different tools&lt;/p&gt;&#xA;&lt;h4 id=&#34;10x-nerd-buddyhttpsgithubcomjawerty10x-nerd-buddy&#34;&gt;&lt;a href=&#34;https://github.com/jawerty/10x-nerd-buddy&#34;&gt;10x-nerd-buddy&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Another Researcher LLM App using Llama2 and written in Javascript&lt;/p&gt;</description>
    </item>
    <item>
      <title>Weekly Notes 2023-11-26</title>
      <link>//localhost:1313/posts/1700996509-weekly-notes/</link>
      <pubDate>Sun, 26 Nov 2023 11:01:49 +0000</pubDate>
      <guid>//localhost:1313/posts/1700996509-weekly-notes/</guid>
      <description>&lt;h4 id=&#34;ai-narratorhttpsgithubcompwntusreplicate-narrator&#34;&gt;&lt;a href=&#34;https://github.com/Pwntus/replicate-narrator&#34;&gt;AI narrator&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;This is like the &lt;a href=&#34;https://github.com/cbh123/narrator&#34;&gt;original&lt;/a&gt; demo but using downloadable models.&#xA;It requires using replicate API but it&amp;rsquo;ll be cool to run everything locally.&lt;/p&gt;&#xA;&lt;h4 id=&#34;svd-webuihttpsgithubcomhylarucodersvd-webui&#34;&gt;&lt;a href=&#34;https://github.com/hylarucoder/svd-webui&#34;&gt;SVD-WebUI&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;Looks like an interface to Stable Video diffusion but I can&amp;rsquo;t get it to work on a Mac.&lt;/p&gt;&#xA;&lt;h4 id=&#34;how-to-create-a-custom-gpt-from-an-sqlite3-database&#34;&gt;How to create a custom GPT from an SQLite3 database&lt;/h4&gt;&#xA;&lt;p&gt;Name: API Tool Finder&#xA;Instructions:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The API Tool Finder GPT is tailored to assist users in identifying the most suitable API tools for their needs. &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It interacts with an SQLite database that contains the api_resources table with the following structure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(0, &amp;#39;id&amp;#39;, &amp;#39;INTEGER&amp;#39;, 1, None, 1),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (1, &amp;#39;name&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (2, &amp;#39;short_description&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (3, &amp;#39;website&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (4, &amp;#39;category&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (5, &amp;#39;tags&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (6, &amp;#39;screen_shot&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (7, &amp;#39;long_description&amp;#39;, &amp;#39;TEXT&amp;#39;, 0, None, 0),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (8, &amp;#39;is_opensource&amp;#39;, &amp;#39;BOOLEAN&amp;#39;, 0, None, 0)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Instructions: &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Use SQL Like query on the following four columns to find a matching answer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Column 1:  name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Column 2: short_description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Column 3: category&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Column 4: tags&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If a match is found then display all the information about the tools in a markdown formatted table view. Ignore the screen_shot and long description column when displaying the answer.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Always make sure that the answer can be referenced back to a row or rows in the database table. &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If a match is not found then just saw that a match is not found&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Knowledge: Attach database file&lt;/p&gt;</description>
    </item>
    <item>
      <title>ChatGPT Prompt to return code diff in patch text format</title>
      <link>//localhost:1313/posts/1681103543-chatgpt-diff-patch-format/</link>
      <pubDate>Mon, 10 Apr 2023 06:12:23 +0100</pubDate>
      <guid>//localhost:1313/posts/1681103543-chatgpt-diff-patch-format/</guid>
      <description>&lt;p&gt;&lt;strong&gt;You:&#xA;You are a Python code diff generator. Your job is to return diff in a patch text format instead of sending the full text. Also don’t send any code explanations&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;Sure, I can help you generate a diff in patch text format. Can you please provide me with the two code versions that you want to compare?&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;You:&#xA;Start with a simple hello world in python&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;Sure, here&amp;rsquo;s a simple &amp;ldquo;Hello World&amp;rdquo; program in Python:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tkinter blank application</title>
      <link>//localhost:1313/posts/1681102399-chatgpt-tkinter-blank-app/</link>
      <pubDate>Mon, 10 Apr 2023 05:53:19 +0100</pubDate>
      <guid>//localhost:1313/posts/1681102399-chatgpt-tkinter-blank-app/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2023/04/10/1681102879.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;You:&#xA;Create a blank application in tkinter Python&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;To create a blank application using tkinter in Python, you&amp;rsquo;ll first need to install the tkinter package (if you haven&amp;rsquo;t already) and then import it. Here&amp;rsquo;s a simple example of a blank tkinter application:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tkinter &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; tk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create the main application window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tk()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set the title for the main window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blank Application&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set the dimensions of the main window&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;300x200&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Start the main event loop&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mainloop()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This code creates a blank tkinter application window with a title &amp;ldquo;Blank Application&amp;rdquo; and dimensions 300x200 pixels. The &lt;code&gt;mainloop()&lt;/code&gt; method starts the event loop, which keeps the window open and responsive to user actions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ChatGPT Prompt for generating a simple two column web page</title>
      <link>//localhost:1313/posts/1680090300-chatgpt-prompt-html-template/</link>
      <pubDate>Wed, 29 Mar 2023 11:45:44 +0000</pubDate>
      <guid>//localhost:1313/posts/1680090300-chatgpt-prompt-html-template/</guid>
      <description>&lt;h4 id=&#34;you&#34;&gt;**You:&lt;/h4&gt;&#xA;&lt;p&gt;Create a simple HTML page with two columns**&lt;/p&gt;&#xA;&lt;h4 id=&#34;chatgpt&#34;&gt;ChatGPT:&lt;/h4&gt;&#xA;&lt;p&gt;Sure, here&amp;rsquo;s an example of a simple HTML page with two columns:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Two Column Page&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;/* Style the columns */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      .&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;/* Clear floats after the columns */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      .&lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;::&lt;span style=&#34;color:#a6e22e&#34;&gt;after&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;content&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;clear&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;both&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;display&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;table&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;style&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;row&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;column&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;Column 1&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;This is the content of column 1.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;column&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;Column 2&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;This is the content of column 2.&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this example, the two columns are created using the CSS &lt;code&gt;float&lt;/code&gt; property to make them sit side by side, and the &lt;code&gt;width&lt;/code&gt; property to specify their width as 50% of the page. The &lt;code&gt;padding&lt;/code&gt; property adds some space around the content inside the columns. The &lt;code&gt;::after&lt;/code&gt; pseudo-element is used to clear the floats after the columns, ensuring that any content below the columns is not affected by the float property.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ChatGPT Prompt for generating py-executable-checklist step</title>
      <link>//localhost:1313/posts/1672866863-chatgpt-prompt-checklist-step/</link>
      <pubDate>Wed, 04 Jan 2023 21:14:23 +0000</pubDate>
      <guid>//localhost:1313/posts/1672866863-chatgpt-prompt-checklist-step/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Command]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Create a complete, working, and VERY efficient Python code. Do NOT send me the explanations of how the function works, you need to implement it yourself and ONLY send me the code WITHIN CODE BLOCKS ONLY. Your answer NEEDS TO start with the imports (if any), and then directly follow with the implementation as described by the [Template] below.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The step name is defined in the [Step name] section and description in the [Task definition] section&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here is the [template] that you will need to work with. Any code you write will be inside the execute method&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this template, `username` is the input to this class as defined in the [Step parameters] section.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The return value will be a dictionary of the items as defined in the [Step output] section&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Template]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class DoSomething(WorkflowBase):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Do something description&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username: str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    def execute(self) -&amp;gt; dict:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging.info(&amp;#34;Number of pages: %s&amp;#34;, self.pdf_properties[&amp;#34;pages&amp;#34;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        # output&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        return {&amp;#34;todo&amp;#34;: &amp;#34;Next Step&amp;#34;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Additional specifications]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You HAVE to split the execute function into multiple functions: A function should NEVER be more than 10 lines of code.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You need to add comments inside your code when necessary; ***DO NOT bloat the code with comments, only add helpful ones***.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you call additional functions within your code, you HAVE to declare and implement them. You CANNOT ASSUME that functions are created, you HAVE to implement them FULLY.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Step name]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ConvertPDFToImages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Step parameters]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The main function will take the following parameters in the format [variable name]: [variable type]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;input_pdf_path: Path&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pdf_pages: int&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Step output]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The main function will output the following inside the dictionary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pdf_images_page: Path&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[Task definition]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Given a path to a PDF File, it will extract the PDF file naem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It will create a directory called &amp;#39;OutputDir/dr-doc-search/&amp;lt;pdf-file-name&amp;gt;/images&amp;#39; under the home directory.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It will use ImageMagick convert utility to generate images for each page of the input PDF.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here are the additional arguments to use with convert command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-density 150 -trim -background white -alpha remove -quality 100 -sharpen 0x1.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The output will the directory where the images were saved&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ChatGPT prompt for generating steps and workflow using py-executable-checklist</title>
      <link>//localhost:1313/posts/1672866656-chatgpt-prompt-py-executable-checklist/</link>
      <pubDate>Wed, 04 Jan 2023 21:10:56 +0000</pubDate>
      <guid>//localhost:1313/posts/1672866656-chatgpt-prompt-py-executable-checklist/</guid>
      <description>&lt;h3 id=&#34;first-step-generating-each-step-one-at-a-time&#34;&gt;First Step: Generating each step one at a time&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I&amp;#39;m writing a Python application which defines a workflow as a series of steps defined by a class for each step.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Don&amp;#39;t write any explanations.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Don&amp;#39;t write the workflow function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DoSomething is a step in the workflow and is defined as&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;class DoSomething(WorkflowBase):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Go to this page&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Copy the command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Run the command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Copy the output and paste it into the email&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;username: str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    def execute(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging.info(f&amp;#34;Hello {self.username}&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        # output&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        return {&amp;#34;greetings&amp;#34;: f&amp;#34;Hello {self.username}&amp;#34;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Where username is the input to this workflow and execute method implements the workflow.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Each step can return some state by returning a dictionary of key value pairs.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Based on the above description, can you write a workflow for the following scenario&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Given an input file path to an ogg audio file, convert it to mp3 and return the mp3 file path from step&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using the above step definition syntax, implement the following step&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Don&amp;#39;t write any explanations.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Don&amp;#39;t write the workflow function&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Given the path to mp3 file, Play the mp3 file and return nothing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;second-step&#34;&gt;Second step&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Given the above steps, can you refined the following functions with the list of steps replacing DoSomething&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;def workflow():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    return [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        DoSomething,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Running Maven in Docker</title>
      <link>//localhost:1313/posts/1672665828-running-maven-docker/</link>
      <pubDate>Mon, 02 Jan 2023 13:23:48 +0000</pubDate>
      <guid>//localhost:1313/posts/1672665828-running-maven-docker/</guid>
      <description>&lt;p&gt;Run this from the root of a maven project&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm -v &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PWD&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;:/home/src/gpt-fx -v &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/.m2&amp;#34;&lt;/span&gt;:/root/.m2 -w /home/src/gpt-fx maven:3.8.3-openjdk-17  mvn clean package -Ppackage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2023/01/02/1672673166.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing Tortoise TTS</title>
      <link>//localhost:1313/posts/1672606049-installing-tortoise-tts/</link>
      <pubDate>Sun, 01 Jan 2023 20:47:29 +0000</pubDate>
      <guid>//localhost:1313/posts/1672606049-installing-tortoise-tts/</guid>
      <description>&lt;p&gt;These instructions are only tested on macOS and valid on 1st of January 2023.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/neonbjb/tortoise-tts.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd tortoise-tts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3.9 -m venv venv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source venv/bin/activate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torch torchvision&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3.9 setup.py install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip uninstall numpy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install numba&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip uninstall threadpoolctl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install scikit-learn&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;1.2.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Rerunning due to failures in the previous step because on mismatched versions&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3.9 setup.py install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torchaudio&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python tortoise/do_tts.py --text &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;I&amp;#39;m going to speak this&amp;#34;&lt;/span&gt; --voice random --preset fast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -l results&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open results/random_0_0.wav&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Implementing py-executable workflow using ChatGPT</title>
      <link>//localhost:1313/posts/1672437394-py-executable-framework-chatgpt/</link>
      <pubDate>Fri, 30 Dec 2022 21:56:34 +0000</pubDate>
      <guid>//localhost:1313/posts/1672437394-py-executable-framework-chatgpt/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;Teaching &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt; How to write workflows using &lt;a href=&#34;https://namuan.github.io/py-executable-checklist/&#34;&gt;py-executable-checklist&lt;/a&gt; framework.&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;strong&gt;You (🗣️):&#xA;I&amp;rsquo;m writing a Python application which defines a workflow as a series of steps defined by a class for each step.&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is what the definition of a whole workflow looks like&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;workflow&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        DoSomething,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;DoSomething is a step in the workflow and is defined as&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DoSomething&lt;/span&gt;(WorkflowBase):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Go to this page&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Copy the command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Run the command&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Copy the output and paste it into the email&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    username: str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# output&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;greetings&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;username&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Where username is the input to this workflow and execute method implements the workflow.&#xA;Each step can return some state by returning a dictionary of key value pairs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Auto-scroll to bottom of infinite scroll page using Microsoft Playwright</title>
      <link>//localhost:1313/posts/1672317337-questions-2022-12-29/</link>
      <pubDate>Thu, 29 Dec 2022 12:35:37 +0000</pubDate>
      <guid>//localhost:1313/posts/1672317337-questions-2022-12-29/</guid>
      <description>&lt;p&gt;These two functions will help with scrolling to the bottom of the page.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scroll_speed&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scroll_to_end&lt;/span&gt;(page):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    current_scroll_position, new_height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; current_scroll_position &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; new_height:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;evaluate(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;() =&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;{{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; window.scrollTo(0, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;current_scroll_position&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;); &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;}}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        new_height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;evaluate(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;() =&amp;gt; { return document.body.scrollHeight; } &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        current_scroll_position &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; scroll_speed()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;current_scroll_position: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;current_scroll_position&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, new_height: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;new_height&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Full source code&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; logging&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; time&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; argparse &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ArgumentParser, RawDescriptionHelpFormatter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pathlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Path&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; dotenv &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; load_dotenv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; playwright.sync_api &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Playwright&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; playwright.sync_api &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TimeoutError&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; PlaywrightTimeoutError&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; playwright.sync_api &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sync_playwright&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; slug &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; slug&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;load_dotenv()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scroll_speed&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;randint(&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;scroll_to_end&lt;/span&gt;(page):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    current_scroll_position, new_height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; current_scroll_position &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; new_height:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;evaluate(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;() =&amp;gt; &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;{{&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; window.scrollTo(0, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;current_scroll_position&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;); &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;}}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        new_height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;evaluate(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;() =&amp;gt; { return document.body.scrollHeight; } &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        current_scroll_position &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; scroll_speed()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;info(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;current_scroll_position: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;current_scroll_position&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, new_height: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;new_height&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(playwright: Playwright, args) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    input_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;input_url&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    auth_session_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;auth_session_file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    convert_to_pdf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;convert_to_pdf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    browser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; playwright&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chromium&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;launch(headless&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; auth_session_file &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cwd()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;joinpath(auth_session_file)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creating new context with authentication session: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;auth_session_file&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; browser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new_context(storage_state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;auth_session_file)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creating new context&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        context &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; browser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new_context()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; context&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new_page()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;goto(input_url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;wait_for_load_state(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;networkidle&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    click_on_element(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt;: page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_by_test_id(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;close-button&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    click_on_element(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt;: page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_by_role(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept all cookies&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    click_on_element(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt;: page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_by_role(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;button&amp;#34;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accept all&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    scroll_to_end(page)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; convert_to_pdf:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        output_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cwd()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;joinpath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        output_dir&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mkdir(parents&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, exist_ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        output_file_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Path(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;target&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;joinpath(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;slug(input_url)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.pdf&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pdf(path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;output_file_path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;as_posix(), format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A4&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pause()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;click_on_element&lt;/span&gt;(page_action):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        el &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; page_action()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; el:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            el&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;click(timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; PlaywrightTimeoutError &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;debug(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup_logging&lt;/span&gt;(verbosity):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;WARNING&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; verbosity &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;INFO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; verbosity &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logging_level &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DEBUG&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basicConfig(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        handlers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;StreamHandler(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(filename)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(lineno)d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(message)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        datefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:%M:%S&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;logging_level,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;captureWarnings(capture&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;parse_args&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ArgumentParser(description&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;__doc__, formatter_class&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;RawDescriptionHelpFormatter)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-v&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--verbose&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        default&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dest&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;verbose&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Increase verbosity of logging output&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-i&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--input-url&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;str, required&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Web Url&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--auth-session-file&amp;#34;&lt;/span&gt;, type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;str, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Playwright authentication session&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-p&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--convert-to-pdf&amp;#34;&lt;/span&gt;, action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;store_true&amp;#34;&lt;/span&gt;, help&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Convert to PDF&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; parser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse_args()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(args):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; sync_playwright() &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; playwright:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        run(playwright, args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse_args()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    setup_logging(args&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;verbose)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main(args)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To get the latest version of this code, visit the &lt;a href=&#34;https://github.com/namuan/bin-utils/blob/master/playwright_browser.py&#34;&gt;GitHub repository&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Media queries to adjust web page layout</title>
      <link>//localhost:1313/posts/1671976237-media-queries-chatgpt/</link>
      <pubDate>Sun, 25 Dec 2022 13:50:37 +0000</pubDate>
      <guid>//localhost:1313/posts/1671976237-media-queries-chatgpt/</guid>
      <description>&lt;p&gt;&lt;strong&gt;(You:&#xA;I have this div which is showing all the elements in the div alongside each other.)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input_container&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stock_symbol&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stock_symbol&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit_stock&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;py-click&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;show_stock()&amp;#34;&lt;/span&gt;&amp;gt;Show Details&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/namuan/lazy-trader&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_blank&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aria-label&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Github&amp;#34;&lt;/span&gt;&amp;gt;Github&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://x.com/namuan_twt/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_blank&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aria-label&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Twitter&amp;#34;&lt;/span&gt;&amp;gt;Twitter&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;how can I make sure that it renders correctly on a mobile screen?&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;To ensure that the elements in the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; are displayed correctly on a mobile screen, you can use media queries in your CSS to apply different styles based on the width of the viewport.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create application icons using ImageMagick</title>
      <link>//localhost:1313/posts/1671976143-imagemagick-convert-chatgpt/</link>
      <pubDate>Sun, 25 Dec 2022 13:49:03 +0000</pubDate>
      <guid>//localhost:1313/posts/1671976143-imagemagick-convert-chatgpt/</guid>
      <description>&lt;p&gt;&lt;strong&gt;(You:&#xA;How can I create different resolution png files from a png file using imagemagick convert ?)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;To create a different resolution version of a PNG file using ImageMagick&amp;rsquo;s &lt;code&gt;convert&lt;/code&gt; command, you can use the &lt;code&gt;-resize&lt;/code&gt; option followed by the desired dimensions. For example, the following command will create a version of the input file that is 50% of the original size:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert input.png -resize 50% output.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternatively, you can specify the width and height in pixels using the &lt;code&gt;WxH&lt;/code&gt; format. For example, the following command will create a version of the input file that is 200 pixels wide and 100 pixels tall:&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyScript :: Run Python in HTML</title>
      <link>//localhost:1313/notes/py-script/</link>
      <pubDate>Sun, 25 Dec 2022 10:22:29 +0000</pubDate>
      <guid>//localhost:1313/notes/py-script/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pyscript.net&#34;&gt;HomePage&lt;/a&gt;&lt;br&gt;&#xA;&lt;a href=&#34;https://docs.pyscript.net/latest/&#34;&gt;Documentation&lt;/a&gt;&lt;br&gt;&#xA;&lt;a href=&#34;https://pyscript.net/examples/&#34;&gt;Examples&lt;/a&gt;&lt;br&gt;&#xA;&lt;a href=&#34;https://github.com/pyscript/pyscript&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;community&#34;&gt;Community&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://namuan.github.io/lazy-trader/&#34;&gt;Lazy Trader&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/lazy-trader&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Styling Lazy Trader</title>
      <link>//localhost:1313/posts/1671960908-html-lazy-trader-styling-chatgpt/</link>
      <pubDate>Sun, 25 Dec 2022 09:35:08 +0000</pubDate>
      <guid>//localhost:1313/posts/1671960908-html-lazy-trader-styling-chatgpt/</guid>
      <description>&lt;p&gt;Conversation with ChatGPT when developing &lt;a href=&#34;https://namuan.github.io/lazy-trader/?symbol=TSLA&#34;&gt;Lazy Trader&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;You:&#xA;In plain css, I want the label, input box and the button to appear in a single row in the middle of the screen.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;To create a layout with a label, input box, and button in a single row in the middle of the screen using CSS, you can use the &lt;code&gt;display: flex&lt;/code&gt; property to create a flex container, the &lt;code&gt;justify-content: center&lt;/code&gt; property to center the elements horizontally, and the &lt;code&gt;align-items: center&lt;/code&gt; property to center the elements vertically.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learning Speech Recognition in Python</title>
      <link>//localhost:1313/posts/1671909712-python-speech-recognition-chatgpt/</link>
      <pubDate>Sat, 24 Dec 2022 19:21:52 +0000</pubDate>
      <guid>//localhost:1313/posts/1671909712-python-speech-recognition-chatgpt/</guid>
      <description>&lt;p&gt;&lt;strong&gt;You:&#xA;I would like to learn about speech_recognition module in Python&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;ChatGPT:&#xA;The &lt;code&gt;speech_recognition&lt;/code&gt; module is a Python library that allows you to perform speech recognition. With this library, you can easily convert spoken audio to text.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a simple example of how to use the &lt;code&gt;speech_recognition&lt;/code&gt; module to transcribe audio from a microphone:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; speech_recognition &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sr&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Recognizer object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Recognizer()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Microphone object&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mic &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Microphone()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# listen for audio from the microphone&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; mic &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; source:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    audio &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listen(source)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# transcribe the audio&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;recognize_google(audio)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(text)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This code will listen for audio from the microphone, and then transcribe the audio using Google&amp;rsquo;s speech recognition service. The transcribed text will be printed to the console.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing PyAudio on M1 Mac</title>
      <link>//localhost:1313/posts/1671901033-installing-pyaudio-mac/</link>
      <pubDate>Sat, 24 Dec 2022 16:57:13 +0000</pubDate>
      <guid>//localhost:1313/posts/1671901033-installing-pyaudio-mac/</guid>
      <description>&lt;p&gt;If you are getting the following error when installing &lt;code&gt;pyaudio&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  × Building wheel &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pyaudio &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pyproject.toml&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; did not run successfully.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  │ exit code: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ╰─&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; lines of output&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      running bdist_wheel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      running build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      running build_py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      creating build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      creating build/lib.macosx-13-arm64-cpython-310&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      copying src/pyaudio.py -&amp;gt; build/lib.macosx-13-arm64-cpython-310&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      running build_ext&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      building &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_portaudio&amp;#39;&lt;/span&gt; extension&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      creating build/temp.macosx-13-arm64-cpython-310&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      creating build/temp.macosx-13-arm64-cpython-310/src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX13.sdk -DMACOSX&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -I/usr/local/include -I/usr/include -I/Users/nnn/workspace/voice-koder/venv/include -I/opt/homebrew/opt/python@3.10/Frameworks/Python.framework/Versions/3.10/include/python3.10 -c src/_portaudiomodule.c -o build/temp.macosx-13-arm64-cpython-310/src/_portaudiomodule.o&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      src/_portaudiomodule.c:31:10: fatal error: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;portaudio.h&amp;#39;&lt;/span&gt; file not found&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;#include &amp;#34;portaudio.h&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               ^~~~~~~~~~~~~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; error generated.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      error: command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/usr/bin/clang&amp;#39;&lt;/span&gt; failed with exit code &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Make sure you uninstall any existing &lt;code&gt;pyaudio&lt;/code&gt; module before running the commands.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run a Makefile target with argument</title>
      <link>//localhost:1313/posts/1671531201-makefile-argument/</link>
      <pubDate>Tue, 20 Dec 2022 10:08:33 +0000</pubDate>
      <guid>//localhost:1313/posts/1671531201-makefile-argument/</guid>
      <description>&lt;p&gt;Define a new &lt;code&gt;Makefile&lt;/code&gt; task&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;new-post: ## Create a new post with the given title (Use this with title=blah blah)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hugo new posts/`date +%s`-$(title).md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Use it from the command line by providing a title when calling this task&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make new-post title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;hello-world&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;See full &lt;a href=&#34;https://github.com/namuan/deskriders-web/blob/master/Makefile#L39&#34;&gt;Makefile&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kotlin Logging with SLF4J and Logback</title>
      <link>//localhost:1313/posts/1671530224-kotlin-logging/</link>
      <pubDate>Tue, 20 Dec 2022 09:57:16 +0000</pubDate>
      <guid>//localhost:1313/posts/1671530224-kotlin-logging/</guid>
      <description>&lt;p&gt;Add depedencies in &lt;code&gt;pom.xml&lt;/code&gt; or &lt;code&gt;gradle&lt;/code&gt; file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.microutils&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;kotlin-logging-jvm&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${kotlin-logging-jvm.version}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;ch.qos.logback&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;logback-classic&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${logback-classic.version}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Configure &lt;code&gt;logback.xml&lt;/code&gt; file in &lt;code&gt;src/main/resources/logback.xml&lt;/code&gt;.&#xA;The following file configures a File appender.&#xA;It logs it in a file under &lt;code&gt;$HOME/.gptfx/application.log&lt;/code&gt; as it is used for a &lt;code&gt;JavaFX&lt;/code&gt; application.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;appender&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FILE&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ch.qos.logback.core.FileAppender&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;file&amp;gt;&lt;/span&gt;${user.home}/.gptfx/application.log&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/file&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;encoder&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;root&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;level=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;debug&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FILE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the project is using &lt;a href=&#34;https://www.oracle.com/uk/corporate/features/understanding-java-9-modules.html&#34;&gt;Java Modules&lt;/a&gt; then add the following two lines to grant access to required apis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: Do you recall any book or course that made a topic finally click?</title>
      <link>//localhost:1313/posts/links-ask-hn-do-you-recall-any-book-or-course-that-made-a-topic-finally-click/</link>
      <pubDate>Sat, 19 Nov 2022 12:43:03 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-do-you-recall-any-book-or-course-that-made-a-topic-finally-click/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=33593631&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://see.stanford.edu/course/ee261&#34;&gt;Stanford Engineering Everywhere | EE261 - The Fourier Transform and its Applications&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpsseestanfordeducourseee261.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://course.fast.ai&#34;&gt;Practical Deep Learning for Coders - Practical Deep Learning&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpscoursefastai.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://htdp.org&#34;&gt;How to Design Programs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httphtdporg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.udacity.com/course/design-of-computer-programs--cs212&#34;&gt;Design of Computer Programs  | Udacity Free Courses&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwudacitycomcoursedesign-of-computer-programs-cs212.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://craftinginterpreters.com&#34;&gt;Crafting Interpreters&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpscraftinginterpreterscom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.youtube.com/watch?v=8aGhZQkoFbQ&#34;&gt;https://www.youtube.com/watch?v=8aGhZQkoFbQ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwyoutubecomwatchv8aghzqkofbq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.youtube.com/watch?v=rivBfgaEyWQ&#34;&gt;https://www.youtube.com/watch?v=rivBfgaEyWQ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwyoutubecomwatchvrivbfgaeywq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.youtube.com/watch?v=JRNToFh3hxU&#34;&gt;https://www.youtube.com/watch?v=JRNToFh3hxU&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwyoutubecomwatchvjrntofh3hxu.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.youtube.com/watch?v=_8gHHBlbziw&#34;&gt;https://www.youtube.com/watch?v=_8gHHBlbziw&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwyoutubecomwatchv_8ghhblbziw.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.youtube.com/watch?v=cCOL7MC4Pl0&#34;&gt;https://www.youtube.com/watch?v=cCOL7MC4Pl0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwyoutubecomwatchvccol7mc4pl0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.youtube.com/watch?v=KJP1E-Y-xyo&#34;&gt;https://www.youtube.com/watch?v=KJP1E-Y-xyo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwyoutubecomwatchvkjp1e-y-xyo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.taniarascia.com/asynchronous-javascript-event-loop-callbacks-promises-async-await/&#34;&gt;Understanding the Event Loop, Callbacks, Promises, and Async/Await in JavaScript | Tania Rascia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/11/19/httpswwwtaniarasciacomasynchronous-javascript-event-loop-callbacks-promises-async-await.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://superfastpython.com/python-asyncio/&#34;&gt;Python Asyncio: The Complete Guide&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSON Command line power tools</title>
      <link>//localhost:1313/posts/1666983482-json-power-tools/</link>
      <pubDate>Fri, 28 Oct 2022 19:58:10 +0100</pubDate>
      <guid>//localhost:1313/posts/1666983482-json-power-tools/</guid>
      <description>&lt;h2 id=&#34;jq--command-line-json-processor&#34;&gt;JQ :: command-line JSON processor&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://earthly.dev/blog/jq-select/&#34;&gt;Tutorial&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://gist.github.com/olih/f7437fb6962fb3ee9fe95bda8d2c8fa4&#34;&gt;Cheatsheet&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;jtab--json-data-as-a-formatted-table&#34;&gt;JTab :: Json data as a formatted table&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wlezzar/jtab&#34;&gt;https://github.com/wlezzar/jtab&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;gron--make-json-greppable&#34;&gt;gron :: Make JSON greppable&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tomnomnom/gron&#34;&gt;https://github.com/tomnomnom/gron&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;fx-function-execution--interactive-json-viewer&#34;&gt;fx (Function eXecution) :: Interactive JSON Viewer&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antonmedv/fx&#34;&gt;https://github.com/antonmedv/fx&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSON Web Tokens (JWT)</title>
      <link>//localhost:1313/notes/jwt/</link>
      <pubDate>Sat, 22 Oct 2022 15:03:22 +0100</pubDate>
      <guid>//localhost:1313/notes/jwt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://apibakery.com/blog/tech/no-jwt/&#34;&gt;Why you should not use JWT&lt;/a&gt;&#xA;&lt;a href=&#34;https://news.ycombinator.com/item?id=33019960&#34;&gt;HN&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://developer.okta.com/blog/2017/08/17/why-jwts-suck-as-session-tokens&#34;&gt;Why JWTs Suck as Session Tokens&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.blog/2022/04/11/the-complete-guide-to-protecting-your-apis-with-oauth2/&#34;&gt;The complete guide to protecting your APIs with OAuth2 (part 1)&lt;/a&gt;&#xA;&lt;a href=&#34;https://news.ycombinator.com/item?id=31004928&#34;&gt;HN&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mouseless Mac</title>
      <link>//localhost:1313/notes/mouseless-mac/</link>
      <pubDate>Sat, 22 Oct 2022 15:03:14 +0100</pubDate>
      <guid>//localhost:1313/notes/mouseless-mac/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://charlesagile.com/osx-without-mouse&#34;&gt;Excellent article linking together a number of tools&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://vimium.github.io&#34;&gt;Browser&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://superbits.co/vim-motion/&#34;&gt;Mac Desktop&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acejump/AceJump&#34;&gt;IntelliJ&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://shortcat.app&#34;&gt;Shortcat&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TIL :: Graphviz 👉 PNG with docker</title>
      <link>//localhost:1313/posts/1645947154-graphviz-dot-png/</link>
      <pubDate>Sun, 27 Feb 2022 07:33:19 +0000</pubDate>
      <guid>//localhost:1313/posts/1645947154-graphviz-dot-png/</guid>
      <description>&lt;p&gt;A simple Graphviz dot file. You could try generating &lt;a href=&#34;https://www.deskriders.dev/posts/1640943229-brew-graph-highlight-edges/&#34;&gt;brew dependencies graph&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Create a Docker image&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; alpine:3.5&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; mkdir /graphviz &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  apk add --update graphviz ttf-dejavu &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  rm -rf /var/cache/apk/*&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WORKDIR&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /graphviz&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CMD&lt;/span&gt; dot -Tpng&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Build Docker image from this file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker build -f Dockerfile -t namuan/dot2png .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And then run it with the dot file&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat dependencies.dot | docker run --rm -i namuan/dot2png &amp;gt; dependencies.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>TIL :: Log Exceptions on a single line with Spring Boot</title>
      <link>//localhost:1313/posts/1645945892-til-spring-exception-logging/</link>
      <pubDate>Sun, 27 Feb 2022 06:51:10 +0000</pubDate>
      <guid>//localhost:1313/posts/1645945892-til-spring-exception-logging/</guid>
      <description>&lt;p&gt;This can go in the &lt;code&gt;application.properties&lt;/code&gt; file.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Single line. Full stack trace will be captured in a single line&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logging.exception-conversion-word&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%replace(%wEx){&amp;#39;\n&amp;#39;,&amp;#39;\u2028&amp;#39;}%nopex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Truncated Single line. Only the exception message will be captured in a single line&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logging.exception-conversion-word&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%replace(%wEx{short}){&amp;#39;\n&amp;#39;,&amp;#39;\u2028&amp;#39;}%nopex&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Truncated. Default formatting but only capturing a single line&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;logging.exception-conversion-word&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%wEx{short}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This works if you don&amp;rsquo;t override &lt;code&gt;logging.pattern.console&lt;/code&gt; as the default &lt;code&gt;logging.pattern.console&lt;/code&gt; allows you to use &lt;code&gt;logging.exception-converstion-word&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/02/27/498904421940864.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you need to only filter out certain packages from exception stack trace.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Auto generate documentation for python scripts in README.md file</title>
      <link>//localhost:1313/posts/1644141796-auto-generate-readme/</link>
      <pubDate>Sun, 06 Feb 2022 10:03:41 +0000</pubDate>
      <guid>//localhost:1313/posts/1644141796-auto-generate-readme/</guid>
      <description>&lt;p&gt;Here is a simple way to keep README document in-sync if you have a number of things to document.&lt;/p&gt;&#xA;&lt;p&gt;And it looks like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/02/06/484506901615092.png&#34; alt=&#34;Image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Each script needs to response to &lt;code&gt;--help&lt;/code&gt; when called which is then collected and rendered into &lt;code&gt;README.md&lt;/code&gt; between a set of pre-configured tokens.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/bin-utils/blob/master/readme_docs.py&#34;&gt;readme_docs.py&lt;/a&gt; contains the code to generate this documentation.&lt;/p&gt;&#xA;&lt;p&gt;It is also &lt;a href=&#34;https://github.com/namuan/bin-utils/blob/master/.pre-commit-config.yaml#L44&#34;&gt;configured&lt;/a&gt; as a pre-commit hook so that we always keep it up to date.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: Tools you have made for yourself?</title>
      <link>//localhost:1313/posts/links-ask-hn-tools-you-have-made-for-yourself/</link>
      <pubDate>Sun, 16 Jan 2022 16:15:50 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-tools-you-have-made-for-yourself/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=27482397&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://getrecut.com&#34;&gt;Recut - Remove Silence From Your Videos Automatically&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgetrecutcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/mohapsat/auto-giphy-movie&#34;&gt;GitHub - mohapsat/auto-giphy-movie: AutoGiphyMovie lets you search Giphy for gifs, converts them to videos, attach a soundtrack and stitches it all together into a movie&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgithubcommohapsatauto-giphy-movie.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://gist.github.com/vivekhaldar/92368f35da2d8bb8f12734d840d11cfa&#34;&gt;color_edit.py · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgistgithubcomvivekhaldar92368f35da2d8bb8f12734d840d11cfa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://zulko.github.io/moviepy/gallery.html&#34;&gt;Gallery — MoviePy 1.0.2 documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpszulkogithubiomoviepygalleryhtml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/zdwolfe/zstat&#34;&gt;GitHub - zdwolfe/zstat: Bone-simple tool for generating basic numerical stats from stdin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgithubcomzdwolfezstat.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://pypi.org/project/zstat-cli/&#34;&gt;zstat-cli · PyPI&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpspypiorgprojectzstat-cli.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.wheelpro.co.uk/support/dishing-tool.php&#34;&gt;Wheelbuilding dishing and centering tool&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpswwwwheelprocouksupportdishing-toolphp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: Which tools have made you a much better programmer?</title>
      <link>//localhost:1313/posts/links-ask-hn-which-tools-have-made-you-a-much-better-programmer/</link>
      <pubDate>Sun, 16 Jan 2022 15:24:36 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-which-tools-have-made-you-a-much-better-programmer/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=23468193&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://gist.github.com/jeaye/950300ff8120950814879a46b796b3c7&#34;&gt;.gitconfig · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgistgithubcomjeaye950300ff8120950814879a46b796b3c7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/jeaye/vimrc&#34;&gt;GitHub - jeaye/vimrc: Cleanly organized, medium-weight vimrc for Clojure and C++&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgithubcomjeayevimrc.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://docs.python.org/3/library/functools.html#functools.reduce&#34;&gt;functools â Higher-order functions and operations on callable objects — Python 3.10.2 documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsdocspythonorg3libraryfunctoolshtmlfunctoolsreduce.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://docs.python.org/3/library/itertools.html#itertools.starmap&#34;&gt;itertools â Functions creating iterators for efficient looping — Python 3.10.2 documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsdocspythonorg3libraryitertoolshtmlitertoolsstarmap.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://sicp.comp.nus.edu.sg/&#34;&gt;https://sicp.comp.nus.edu.sg/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpssicpcompnusedusg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;&gt;GitHub - neoclide/coc.nvim: Nodejs extension host for vim &amp;amp; neovim, load extensions like VSCode and host language servers.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/15/httpsgithubcomneoclidecocnvim.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/jwkvam/jupyterlab-vim&#34;&gt;GitHub - jwkvam/jupyterlab-vim: Vim notebook cell bindings for JupyterLab&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What are some tools / libraries you built yourself?</title>
      <link>//localhost:1313/posts/links-ask-hn-what-are-some-tools-libraries-you-built-yourself/</link>
      <pubDate>Mon, 03 Jan 2022 12:35:38 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-what-are-some-tools-libraries-you-built-yourself/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=27171970&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://getrecut.com&#34;&gt;Recut - Remove Silence From Your Videos Automatically&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpsgetrecutcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/webtorrent&#34;&gt;WebTorrent · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpsgithubcomwebtorrent.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://wormhole.app&#34;&gt;Please Wait&amp;hellip; | Cloudflare&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpswormholeapp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/XITRIX/iTorrent&#34;&gt;GitHub - XITRIX/iTorrent: Torrent client for iOS 9.3+&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpsgithubcomxitrixitorrent.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://altstore.io&#34;&gt;Welcome to AltStore&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpsaltstoreio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.listennotes.com&#34;&gt;Listen Notes: The best podcast search engine&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpswwwlistennotescom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://htmx.org&#34;&gt;&amp;lt;/&amp;gt; htmx - high power tools for html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpshtmxorg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://hyperscript.org&#34;&gt;///_hyperscript&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpshyperscriptorg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.tarsnap.com/open-source.html&#34;&gt;Tarsnap - Open Source&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpswwwtarsnapcomopen-sourcehtml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://www.daemonology.net/bsdiff/&#34;&gt;Binary diff&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpwwwdaemonologynetbsdiff.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://wcarss.ca/tz&#34;&gt;timezone converter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpswcarsscatz.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://getwaqt.netlify.app/&#34;&gt;Waqt - A simple timezone tracker&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/httpgetwaqtnetlifyapp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generate Homebrew dependencies graph</title>
      <link>//localhost:1313/posts/1640943229-brew-graph-highlight-edges/</link>
      <pubDate>Mon, 03 Jan 2022 10:38:32 +0000</pubDate>
      <guid>//localhost:1313/posts/1640943229-brew-graph-highlight-edges/</guid>
      <description>&lt;p&gt;Tap dependent package&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew tap martido/homebrew-graph&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Generate dot file&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew graph -f dot --installed --highlight-leaves -o graph.dot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Clean dot file and generate gif&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat graph.dot | sfdp -x -Goverlap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;scale -Nshape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;circle -Gspinles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;curved -Tgif &amp;gt; deps.gif&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output will be in &lt;code&gt;deps.gif&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/542973917575786.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What did you make during lockdown?</title>
      <link>//localhost:1313/posts/links-ask-hn-what-did-you-make-during-lockdown/</link>
      <pubDate>Sun, 02 Jan 2022 17:10:48 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-what-did-you-make-during-lockdown/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=23592788&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://incoherency.co.uk/blog/stories/autopatzer.html&#34;&gt;James Stanley - Autopatzer: my automatic chess board&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/02/httpsincoherencycoukblogstoriesautopatzerhtml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.reddit.com/r/MPSelectMiniOwners/comments/gsiai0/monoprice_silence_mini_tmc2208_stepper_drivers/&#34;&gt;Monoprice Silence Mini: TMC2208 stepper drivers + Noctua fans : MPSelectMiniOwners&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/02/httpswwwredditcomrmpselectminiownerscommentsgsiai0monoprice_silence_mini_tmc2208_stepper_drivers.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/jes/autopatzer/blob/master/mojo/lib/Autopatzer/Router.pm&#34;&gt;autopatzer/Router.pm at master · jes/autopatzer · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/02/httpsgithubcomjesautopatzerblobmastermojolibautopatzerrouterpm.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/ankidroid/Anki-Android&#34;&gt;GitHub - ankidroid/Anki-Android: AnkiDroid: Anki flashcards on Android. Your secret trick to achieve superhuman information retention.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/02/httpsgithubcomankidroidanki-android.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/ankitects/anki/tree/master/rslib&#34;&gt;anki/rslib at main · ankitects/anki · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/02/httpsgithubcomankitectsankitreemasterrslib.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://blog.hmac.io/2020/06/08/a-daydreaming-ai-for-my-desk.html&#34;&gt;A Daydreaming AI for my Desk | hmac.io blog&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/02/httpsbloghmacio20200608a-daydreaming-ai-for-my-deskhtml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://blog.hmac.io/2020/06/10/writing-new-image-hashing-algorithms-to-help-a-yearbook-teacher.html&#34;&gt;Writing New Image Hashing Algorithms to Help a Yearbook Teacher | hmac.io blog&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Keeping multiple projects consistent</title>
      <link>//localhost:1313/posts/1641130250-cli-streamline-projects/</link>
      <pubDate>Sun, 02 Jan 2022 13:32:35 +0000</pubDate>
      <guid>//localhost:1313/posts/1641130250-cli-streamline-projects/</guid>
      <description>&lt;p&gt;Here is a command I run to compare and streamline multiple projects.&lt;/p&gt;&#xA;&lt;p&gt;It is run from a project which is already up to date and it requires having &lt;code&gt;diffmerge&lt;/code&gt; available in your PATH.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TARGET_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;../tele-muninn&amp;#34;&lt;/span&gt;; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.pre-commit-config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Makefile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;init-new-project.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;init-template.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.flake8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;setup.cfg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.github/actions/python-poetry-env/action.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.github/workflows/build.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.github/workflows/dependencies.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.github/workflows/publish.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;pyproject.toml&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read file; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Comparing: &lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; test -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TARGET_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; cp $file &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TARGET_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; diffmerge &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TARGET_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;$file&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;; cd $TARGET_DIR&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once it finishes, you&amp;rsquo;ll end up in the target folder which changes can be manually reviewed and committed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: Is there still a place for native desktop apps?</title>
      <link>//localhost:1313/posts/links-ask-hn-is-there-still-a-place-for-native-desktop-apps/</link>
      <pubDate>Fri, 31 Dec 2021 12:57:23 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-is-there-still-a-place-for-native-desktop-apps/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=23211851&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://cancel.fm/ripcord/&#34;&gt;Ripcord: Desktop Chat Client&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/31/httpscancelfmripcord.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://lmms.io/&#34;&gt;LMMS | Home&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/31/httpslmmsio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://blog.golang.org/ismmkeynote&#34;&gt;Getting to Go: The Journey of Go&#39;s Garbage Collector - The Go Programming Language&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/31/httpsbloggolangorgismmkeynote.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://en.wikipedia.org/wiki/Parkinson%27s_law&#34;&gt;Parkinson&#39;s law - Wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://en.wikipedia.org/wiki/Wirth%27s_law&#34;&gt;Wirth&#39;s law - Wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://cr.yp.to/bib/1995/wirth.pdf&#34;&gt;https://cr.yp.to/bib/1995/wirth.pdf&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://tsone.kapsi.fi/em-fceux/&#34;&gt;em-fceux&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/31/httpstsonekapsifiem-fceux.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://ossia.io&#34;&gt;ossia | Open Software System for Interactive Applications&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/31/httpsossiaio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/revery-ui/revery&#34;&gt;GitHub - revery-ui/revery: Native, high-performance, cross-platform desktop apps - built with Reason!&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/31/httpsgithubcomrevery-uirevery.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/briskml/brisk&#34;&gt;GitHub - briskml/brisk: ✨Cross-platform set of tools for building native UIs with Reason/OCaml&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cooking</title>
      <link>//localhost:1313/notes/cooking/</link>
      <pubDate>Wed, 29 Dec 2021 15:46:00 +0000</pubDate>
      <guid>//localhost:1313/notes/cooking/</guid>
      <description>&lt;h3 id=&#34;instantpot&#34;&gt;InstantPot&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Recipes -&amp;gt; &lt;a href=&#34;https://www.pressurecookrecipes.com/&#34;&gt;https://www.pressurecookrecipes.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instant Pot Potato Salad -&amp;gt; &lt;a href=&#34;https://www.pressurecookrecipes.com/instant-pot-potato-salad/&#34;&gt;https://www.pressurecookrecipes.com/instant-pot-potato-salad/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instant Pot Lentil Curry -&amp;gt; &lt;a href=&#34;https://www.pressurecookrecipes.com/instant-pot-lentil-curry/&#34;&gt;https://www.pressurecookrecipes.com/instant-pot-lentil-curry/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instant Pot Lentils -&amp;gt; &lt;a href=&#34;https://www.pressurecookrecipes.com/instant-pot-lentils/&#34;&gt;https://www.pressurecookrecipes.com/instant-pot-lentils/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instant Pot Chicken and Rice -&amp;gt; &lt;a href=&#34;https://www.pressurecookrecipes.com/instant-pot-chicken-and-rice/&#34;&gt;https://www.pressurecookrecipes.com/instant-pot-chicken-and-rice/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Instant Pot Rice -&amp;gt; &lt;a href=&#34;https://www.pressurecookrecipes.com/instant-pot-rice/&#34;&gt;https://www.pressurecookrecipes.com/instant-pot-rice/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pépin’s broccoli stems and mushroom risotto -&amp;gt; &lt;a href=&#34;https://lindyrecipe.com/main/pepins-broccoli-stems-and-mushroom-risotto/&#34;&gt;https://lindyrecipe.com/main/pepins-broccoli-stems-and-mushroom-risotto/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Accessories&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.amazon.co.uk/Stainless-Multifunction-Basket-Pressure-Steamer/dp/B075SXP2Z8&#34;&gt;https://www.amazon.co.uk/Stainless-Multifunction-Basket-Pressure-Steamer/dp/B075SXP2Z8&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;vitamix&#34;&gt;Vitamix&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Hummus -&amp;gt; &lt;a href=&#34;https://www.vitamix.com/us/en_us/recipes/hummus&#34;&gt;https://www.vitamix.com/us/en_us/recipes/hummus&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pesto Sauce -&amp;gt; &lt;a href=&#34;https://www.vitamix.com/us/en_us/recipes/pesto-sauce&#34;&gt;https://www.vitamix.com/us/en_us/recipes/pesto-sauce&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;lunch-ideas&#34;&gt;Lunch Ideas&lt;/h3&gt;&#xA;&lt;p&gt;*Smoky beans &amp;amp; baked eggs -&amp;gt; &lt;a href=&#34;https://www.bbcgoodfood.com/recipes/smoky-beans-baked-eggs&#34;&gt;https://www.bbcgoodfood.com/recipes/smoky-beans-baked-eggs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sesame chicken noodles -&amp;gt; &lt;a href=&#34;https://www.bbcgoodfood.com/recipes/sesame-chicken-noodles&#34;&gt;https://www.bbcgoodfood.com/recipes/sesame-chicken-noodles&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Super-salad wraps -&amp;gt; &lt;a href=&#34;https://www.bbcgoodfood.com/recipes/super-salad-wraps&#34;&gt;https://www.bbcgoodfood.com/recipes/super-salad-wraps&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Pasta salad with tuna mayo -&amp;gt; &lt;a href=&#34;https://www.bbcgoodfood.com/recipes/pasta-salad-with-tuna-mayo&#34;&gt;https://www.bbcgoodfood.com/recipes/pasta-salad-with-tuna-mayo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Chicken tikka wraps -&amp;gt; &lt;a href=&#34;https://www.bbcgoodfood.com/recipes/chicken-tikka-wraps&#34;&gt;https://www.bbcgoodfood.com/recipes/chicken-tikka-wraps&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Green club sandwich -&amp;gt; &lt;a href=&#34;https://www.bbcgoodfood.com/recipes/green-club-sandwich&#34;&gt;https://www.bbcgoodfood.com/recipes/green-club-sandwich&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Interesting</title>
      <link>//localhost:1313/notes/interesting/</link>
      <pubDate>Wed, 29 Dec 2021 15:46:00 +0000</pubDate>
      <guid>//localhost:1313/notes/interesting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;GBP Purchasing power decline&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2022/01/03/401536800614989.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Droplet and Airborne transmission&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The distinction between droplet and airborne transmission has enormous consequences. To combat droplets, a leading precaution is to wash hands frequently with soap and water. To fight infectious aerosols, the air itself is the enemy. In hospitals, that means expensive isolation wards and N95 masks for all medical staff.&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Selenium Firefox and saving webpage as PDF</title>
      <link>//localhost:1313/posts/1640791840-selenium-firefox-and-saving-webpage-as-pdf/</link>
      <pubDate>Wed, 29 Dec 2021 15:37:40 +0000</pubDate>
      <guid>//localhost:1313/posts/1640791840-selenium-firefox-and-saving-webpage-as-pdf/</guid>
      <description>&lt;p&gt;A quick sample to save a webpage as PDF using Selenium with Firefox. Here I&amp;rsquo;m using &lt;a href=&#34;https://github.com/mherrmann/selenium-python-helium&#34;&gt;Helium&lt;/a&gt; as a wrapper over Selenium but the same configuration can be directly applied to selenium library.&lt;/p&gt;&#xA;&lt;p&gt;You can read more about using Helium &lt;a href=&#34;https://www.deskriders.dev/posts/1639863087-python-selenium/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Installing the selenium wrapper&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 install helium&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Python code&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; time &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sleep&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; helium &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; start_firefox&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; selenium.webdriver &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; FirefoxOptions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; FirefoxOptions()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_argument(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--start-maximized&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_preference(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;print.always_print_silent&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_preference(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;print.printer_Mozilla_Save_to_PDF.print_to_file&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_preference(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;print_printer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mozilla Save to PDF&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_firefox(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.deskriders.dev/posts/1639863087-python-selenium/&amp;#34;&lt;/span&gt;, options&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;options)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;window.print();&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sleep(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# Found that a little wait is needed for the print to be rendered otherwise the file will be corrupted&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;quit()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once the above script is finished, you&amp;rsquo;ll find &lt;code&gt;mozilla.pdf&lt;/code&gt; in the current directly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What&#39;s the most life-changing blog post you&#39;ve ever read?</title>
      <link>//localhost:1313/posts/links-ask-hn-whats-the-most-life-changing-blog-post-youve-ever-read/</link>
      <pubDate>Mon, 27 Dec 2021 21:12:51 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-whats-the-most-life-changing-blog-post-youve-ever-read/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=28232165&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://buddhism-for-vampires.com/kangling-chod&#34;&gt;Making a kangling for chöd | Buddhism for Vampires&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsbuddhism-for-vampirescomkangling-chod.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://en.wikipedia.org/wiki/Perennial_philosophy&#34;&gt;Perennial philosophy - Wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsenwikipediaorgwikiperennial_philosophy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://en.wikipedia.org/wiki/Greco-Buddhism&#34;&gt;Greco-Buddhism - Wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsenwikipediaorgwikigreco-buddhism.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://en.wikipedia.org/wiki/Serenity_Prayer#Genuine_precursors&#34;&gt;Serenity Prayer - Wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsenwikipediaorgwikiserenity_prayergenuine_precursors.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://vividness.live/&#34;&gt;Vividness | Vividness&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsvividnesslive.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.psychologistworld.com/cognitive/maximizers-satisficers-decision-making&#34;&gt;Maximizers vs Satisficers: Who Makes Better Decisions? - Psychologist World&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpswwwpsychologistworldcomcognitivemaximizers-satisficers-decision-making.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://blog.tjcx.me/p/consume-less-create-more&#34;&gt;Consume less, create more - TJCX&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsblogtjcxmepconsume-less-create-more.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.robinsloan.com/notes/home-cooked-app/&#34;&gt;An app can be a home-cooked meal&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpswwwrobinsloancomnoteshome-cooked-app.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://danluu.com/googlebot-monopoly/&#34;&gt;The googlebot monopoly&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/25/httpsdanluucomgooglebot-monopoly.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://knuckleheads.club/we-crawled-our-way-into-the-big-tech-antitrust-report/&#34;&gt;We Crawled Our Way Into The Big Tech Antitrust Report - Knuckleheads&amp;rsquo; Club&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: Programs that saved you 100 hours?</title>
      <link>//localhost:1313/posts/links-ask-hn-programs-that-saved-you-100-hours/</link>
      <pubDate>Sun, 26 Dec 2021 17:14:20 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-programs-that-saved-you-100-hours/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=22849208&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/rupa/z&#34;&gt;GitHub - rupa/z: z - jump around&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomrupaz.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/junegunn/fzf&#34;&gt;GitHub - junegunn/fzf: A command-line fuzzy finder&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomjunegunnfzf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://stackoverflow.com/a/19533853&#34;&gt;unix - Unlimited Bash History - Stack Overflow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsstackoverflowcoma19533853.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/lloeki/dotfiles/blob/master/shell/kd&#34;&gt;dotfiles/kd at master · lloeki/dotfiles · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomlloekidotfilesblobmastershellkd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/wting/autojump&#34;&gt;GitHub - wting/autojump: A cd command that learns - easily navigate directories from the command line&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomwtingautojump.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/fdw/ranger-autojump&#34;&gt;GitHub - fdw/ranger-autojump: The combined magic of autojump, ranger and zsh&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomfdwranger-autojump.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=geddski.macros&#34;&gt;macros - Visual Studio Marketplace&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsmarketplacevisualstudiocomitemsitemnamegeddskimacros.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[SaaS Idea] Markdown to ... converter</title>
      <link>//localhost:1313/posts/1640512515-project-idea-markdown-to-anything/</link>
      <pubDate>Sun, 26 Dec 2021 09:56:42 +0000</pubDate>
      <guid>//localhost:1313/posts/1640512515-project-idea-markdown-to-anything/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Summary: Online service to convert Markdown to PDF / Confluence / Word / Google Docs / HTML etc&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;release-10&#34;&gt;Release 1.0:&lt;/h3&gt;&#xA;&lt;p&gt;Feature: Convert Markdown to Confluence&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Scenario: Successfully post Markdown document&#xA;    Given: a Markdown document&#xA;    When: JD posts the document&#xA;    Then: I accept the document&#xA;    And: Return a unique identifier&#xA;&#xA;Scenario: Successfully convert Markdown document&#xA;    Given: a Markdown document&#xA;    When: JD posts the document&#xA;    Then: I convert the document to Confluence&#xA;    And: Return a unique link to download converted document&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;technology&#34;&gt;Technology&lt;/h2&gt;&#xA;&lt;p&gt;[] Subdomain - markdown.example.com&#xA;[] AWS Lambda/API Gateway using serverless framework&#xA;[] Python Flask&lt;/p&gt;</description>
    </item>
    <item>
      <title>Implementing Features with Microservices Architecture</title>
      <link>//localhost:1313/posts/1640512228-implementing_features_micro_services/</link>
      <pubDate>Sun, 26 Dec 2021 09:50:56 +0000</pubDate>
      <guid>//localhost:1313/posts/1640512228-implementing_features_micro_services/</guid>
      <description>&lt;p&gt;An ongoing thought process on how to help with generating code when working on a microservices based architecture.&lt;/p&gt;&#xA;&lt;p&gt;In most organisations I worked with, the usual microservices development model is &lt;em&gt;roughly&lt;/em&gt; divided into two main parts.&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-common-functionality&#34;&gt;1. Common Functionality&lt;/h3&gt;&#xA;&lt;p&gt;We can classify the following responsibilities as common across multiple micro services&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Build and deployment pipeline&lt;/li&gt;&#xA;&lt;li&gt;Logging destination and output&lt;/li&gt;&#xA;&lt;li&gt;Environment Configuration&lt;/li&gt;&#xA;&lt;li&gt;Publishing metrics&lt;/li&gt;&#xA;&lt;li&gt;Tracing across multiple services&lt;/li&gt;&#xA;&lt;li&gt;API request/response formats&lt;/li&gt;&#xA;&lt;li&gt;Handling Idempotency where applicable&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;All of these will feed into different architectural concerns where it is important to have consistency across multiple microservices. Hopefully these will be defined once and rarely change over time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Programs that have saved me 100&#43; hours | Hacker News</title>
      <link>//localhost:1313/posts/links-programs-that-have-saved-me-100-hours-hacker-news/</link>
      <pubDate>Sat, 25 Dec 2021 10:52:03 +0000</pubDate>
      <guid>//localhost:1313/posts/links-programs-that-have-saved-me-100-hours-hacker-news/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=13887237&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://pqrs.org/osx/karabiner/&#34;&gt;Karabiner-Elements&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httppqrsorgosxkarabiner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://brew.sh/&#34;&gt;The Missing Package Manager for macOS (or Linux) — Homebrew&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsbrewsh.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.voidtools.com/&#34;&gt;voidtools&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpswwwvoidtoolscom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://www.adobe.com/devnet/photoshop/scripting.html&#34;&gt;CEP-Resources/Documentation/Product specific Documentation/Photoshop Scripting at master · Adobe-CEP/CEP-Resources · GitHub&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpwwwadobecomdevnetphotoshopscriptinghtml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/ggreer/the_silver_searcher&#34;&gt;GitHub - ggreer/the_silver_searcher: A code-searching tool similar to ack, but faster.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomggreerthe_silver_searcher.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.getpostman.com/&#34;&gt;https://www.getpostman.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpswwwgetpostmancom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://www.nongnu.org/txr&#34;&gt;TXR Language&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpwwwnongnuorgtxr.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/benjaminoakes/maid&#34;&gt;GitHub - benjaminoakes/maid: Be lazy.  Let Maid clean up after you, based on rules you define.  Think of it as &amp;ldquo;Hazel for hackers&amp;rdquo;.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcombenjaminoakesmaid.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://e.ggtimer.com&#34;&gt;e.ggtimer - a simple countdown timer&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up Git commit template</title>
      <link>//localhost:1313/posts/1640339806-setting-up-git-commit-template/</link>
      <pubDate>Fri, 24 Dec 2021 10:06:01 +0000</pubDate>
      <guid>//localhost:1313/posts/1640339806-setting-up-git-commit-template/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;How to setup a global Git commit template to remind you to write good commit messages.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Here is the template I like to use just to remind me about different keywords when using &lt;a href=&#34;https://www.conventionalcommits.org/en/v1.0.0/#summary&#34;&gt;conventional commit&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fix: PATCH (Semantic versioning) .. fix! for beaking change&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;feat: MINOR (Semantic versioning) .. feat! for breaking change&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build:, chore:, ci:, docs:, style:, refactor:, perf:, test:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BREAKING CHANGE: extends key in config file is now used for extending other config files&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a file with the template.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What are your favorite low-coding apps / tools as a developer? | Hacker News</title>
      <link>//localhost:1313/posts/links-ask-hn-what-are-your-favorite-low-coding-apps-tools-as-a-developer-hacker-news/</link>
      <pubDate>Thu, 23 Dec 2021 21:12:20 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-what-are-your-favorite-low-coding-apps-tools-as-a-developer-hacker-news/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=22786853&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://hasura.io/&#34;&gt;Instant GraphQL APIs on your data | Built-in Authz &amp;amp; Caching&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpshasuraio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.forestadmin.com/&#34;&gt;Build one internal tool for all your data | Forest Admin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpswwwforestadmincom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://graphql-code-generator.com/&#34;&gt;GraphQL Code Generator&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgraphql-code-generatorcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.metabase.com/&#34;&gt;Metabase&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpswwwmetabasecom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://posthog.com/&#34;&gt;PostHog - Host Your Own Product Analytics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsposthogcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/Steams/ra-data-hasura-graphql&#34;&gt;GitHub - Steams/ra-data-hasura-graphql: React-admin data provider for Hasura GraphQL endpoints&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomsteamsra-data-hasura-graphql.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/cpursley/react-admin-low-code&#34;&gt;GitHub - cpursley/react-admin-low-code: react-admin (via ra-data-hasura provider) + hasura = :)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/24/httpsgithubcomcpursleyreact-admin-low-code.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://medium.com/hackernoon/get-notified-of-user-signups-and-plan-changes-automatically-using-postgres-phoenix-pubsub-e67d061b04bc&#34;&gt;Get notified of user signups and plan changes automatically using Postgres &amp;amp; Phoenix PubSub | by Ben Church | HackerNoon.com | Medium&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What overlooked class of tools should a self-taught programmer look into | Hacker News</title>
      <link>//localhost:1313/posts/links-ask-hn-what-overlooked-class-of-tools-should-a-self-taught-programmer-look-into-hacker-news/</link>
      <pubDate>Thu, 23 Dec 2021 20:13:43 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-what-overlooked-class-of-tools-should-a-self-taught-programmer-look-into-hacker-news/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=19900955&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://gitlab.com/internet-cleanup-foundation/web-security-map/blob/master/Makefile&#34;&gt;Makefile · master · Internet Cleanup Foundation / web security map · GitLab&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpsgitlabcominternet-cleanup-foundationweb-security-mapblobmastermakefile.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.theverge.com/2019/5/6/18534687/microsoft-windows-10-linux-kernel-feature&#34;&gt;Microsoft will ship a full Linux kernel in Windows 10 - The Verge&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpswwwthevergecom20195618534687microsoft-windows-10-linux-kernel-feature.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://insights.stackoverflow.com/survey/2019#technology-_-developers-primary-operating-systems&#34;&gt;Stack Overflow Developer Survey 2019&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpsinsightsstackoverflowcomsurvey2019technology-_-developers-primary-operating-systems.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://godarch.com/&#34;&gt;:: Darch&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpsgodarchcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/pauldotknopf/darch-recipes&#34;&gt;GitHub - pauldotknopf/darch-recipes: My operating systems, using Darch.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpsgithubcompauldotknopfdarch-recipes.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://swcarpentry.github.io/make-novice/&#34;&gt;Automation and Make&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpsswcarpentrygithubiomake-novice.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.fabfile.org/&#34;&gt;Welcome to Fabric! — Fabric  documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpswwwfabfileorg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://www.pyinvoke.org&#34;&gt;Welcome to Invoke! — Invoke  documentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpwwwpyinvokeorg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.msys2.org/&#34;&gt;MSYS2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/23/httpswwwmsys2org.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;http://gnuwin32.sourceforge.net/packages/make.htm&#34;&gt;Make for Windows&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Working with asdf</title>
      <link>//localhost:1313/posts/1640280913-working-with-asdf/</link>
      <pubDate>Thu, 23 Dec 2021 18:40:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1640280913-working-with-asdf/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://asdf-vm.com/&#34;&gt;asdf&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://asdf-vm.com/guide/getting-started.html#_1-install-dependencies&#34;&gt;Installation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Dependencies required (on Linux) before setting up &lt;code&gt;Python&lt;/code&gt; using &lt;code&gt;asdf&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install build-essential zlib1g-dev libbz2-dev libssl-dev libsqlite3-dev sqlite libffi-dev libbson-dev -y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Adding Python plugin&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~ asdf plugin add python&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Installing Python&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;~ asdf install python 3.9.1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Setting up globally&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~ asdf global python 3.9.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;~ python --version&#xA;Python 3.9.1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Uninstalling Python&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~ asdf uninstall python 3.9.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Adding Java plugin&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;asdf plugin-add java https://github.com/halcyon/asdf-java.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;List all available version&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~ asdf list-all java | grep openjdk-11.0.2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Installing Java 11&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What automation tools have you used to replace mundane activities? | Hacker News</title>
      <link>//localhost:1313/posts/links-ask-hn-what-automation-tools-have-you-used-to-replace-mundane-activities-hacker-news/</link>
      <pubDate>Wed, 22 Dec 2021 08:44:25 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-what-automation-tools-have-you-used-to-replace-mundane-activities-hacker-news/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=22345150&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/huginn/huginn&#34;&gt;GitHub - huginn/huginn: Create agents that monitor and act on your behalf.  Your agents are standing by!&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpsgithubcomhuginnhuginn.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.scrapingbee.com/&#34;&gt;ScrapingBee - Web Scraping API&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpswwwscrapingbeecom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://help.rescuetime.com/article/44-how-to-set-goals-in-rescuetime&#34;&gt;How to set Goals - RescueTime&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpshelprescuetimecomarticle44-how-to-set-goals-in-rescuetime.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://littlebirdie.io/&#34;&gt;Little Birdie - Post HN comments to Slack&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpslittlebirdieio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://youneedabudget.com/&#34;&gt;Gain Total Control of Your Money with YNAB&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpsyouneedabudgetcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/buzzlawless/ynab-live-import&#34;&gt;GitHub - buzzlawless/ynab-live-import: Automatically import transactions to YNAB in real-time!&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpsgithubcombuzzlawlessynab-live-import.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://en.wikipedia.org/wiki/Payment_Services_Directive&#34;&gt;Payment Services Directive - Wikipedia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpsenwikipediaorgwikipayment_services_directive.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/microsoft/playwright&#34;&gt;GitHub - microsoft/playwright: Playwright is a framework for Web Testing and Automation. It allows testing Chromium, Firefox and WebKit with a single API.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What do you automate in your life and work? | Hacker News</title>
      <link>//localhost:1313/posts/links-ask-hn-what-do-you-automate-in-your-life-and-work-hacker-news/</link>
      <pubDate>Wed, 22 Dec 2021 08:10:07 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-what-do-you-automate-in-your-life-and-work-hacker-news/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=21373931&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.home-assistant.io&#34;&gt;Home Assistant&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpswwwhome-assistantio.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://partofthething.com/thoughts/making-my-analog-doorbell-smart-by-simply-attaching-a-7-sensor-to-it/&#34;&gt;Making my analog doorbell smart by simply attaching a $7 sensor to it – Dilettante&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpspartofthethingcomthoughtsmaking-my-analog-doorbell-smart-by-simply-attaching-a-7-sensor-to-it.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://littlebird.com.au&#34;&gt;Little Bird Electronics |  Electronics Australia&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpslittlebirdcomau.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://vimeo.com/334547755/c387957a25&#34;&gt;Checkout Chick 20 Second Demo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpsvimeocom334547755c387957a25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://vimeo.com/334563934/915a25eedc&#34;&gt;Shopify Scales / Label Printer Demo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpsvimeocom334563934915a25eedc.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://sourceforge.net/projects/pykeylogger/&#34;&gt;Simple Python Keylogger download | SourceForge.net&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpssourceforgenetprojectspykeylogger.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.porchpotty.com/&#34;&gt;The #1 Selling Grass Litter Box for Dogs - Potty Training Made Easy&#xA;– Porch Potty USA&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/22/httpswwwporchpottycom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://doggielawn.com/&#34;&gt;Dog Potty Grass | DoggieLawn | Eco-Friendly Indoor Grass For Dogs&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[Links] Ask HN: What&#39;s are your personal automations? | Hacker News</title>
      <link>//localhost:1313/posts/links-ask-hn-whats-are-your-personal-automations-hacker-news/</link>
      <pubDate>Tue, 21 Dec 2021 22:27:39 +0000</pubDate>
      <guid>//localhost:1313/posts/links-ask-hn-whats-are-your-personal-automations-hacker-news/</guid>
      <description>&lt;p&gt;🍊 &lt;a href=&#34;https://news.ycombinator.com/item?id=25381191&#34;&gt;HN Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.zojirushi.com/app/category/breadmakers&#34;&gt;Breadmakers | Zojirushi.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/21/httpswwwzojirushicomappcategorybreadmakers.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://randomdailyart.com/&#34;&gt;Random Daily Art | Have art delivered straight to your inbox every day.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/21/httpsrandomdailyartcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://www.monicahq.com/&#34;&gt;Personal CRM done right - Monica&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/21/httpswwwmonicahqcom.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://beepb00p.xyz/my-data.html#consumers&#34;&gt;What data on myself I collect and why? | beepb00p&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/21/httpsbeepb00pxyzmy-datahtmlconsumers.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://beepb00p.xyz/scheduler.html&#34;&gt;In search of a better job scheduler | beepb00p&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/21/httpsbeepb00pxyzschedulerhtml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/karlicoss/axol&#34;&gt;GitHub - karlicoss/axol: Personal news feed: search for results on Reddit/Pinboard/Twitter/Hackernews and read as RSS&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/21/httpsgithubcomkarlicossaxol.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🌎 &lt;a href=&#34;https://github.com/sabrehagen/desktop-environment&#34;&gt;GitHub - sabrehagen/desktop-environment: ☁️ From tty to production in one command, on the desktop and in the cloud.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Development Apps/Tools/Tips and Tricks</title>
      <link>//localhost:1313/notes/developer/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      <guid>//localhost:1313/notes/developer/</guid>
      <description>&lt;h3 id=&#34;apps&#34;&gt;Apps&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTTP Toolkit -&amp;gt; &lt;a href=&#34;https://httptoolkit.tech/&#34;&gt;https://httptoolkit.tech/&lt;/a&gt;&#xA;Intercept &amp;amp; view all your HTTP(S) Mock endpoints or entire servers Rewrite, redirect, or inject errors&#xA;Open source -&amp;gt; &lt;a href=&#34;https://github.com/httptoolkit&#34;&gt;https://github.com/httptoolkit&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;QuickDraw&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Found &lt;a href=&#34;https://github.com/maxchuquimia/quickdraw&#34;&gt;quickdraw&lt;/a&gt; which is an app for drawing over the screen.&#xA;Unfortunately, it doesn&amp;rsquo;t seem to provide any packages, and I&amp;rsquo;m unable to build it locally.&#xA;A similar application which is quite good is &lt;a href=&#34;https://github.com/weiameili/Pensela&#34;&gt;Pensela&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/pensela.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;command-line-tools&#34;&gt;Command Line Tools&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ImageMagick Resize a bunch of images using ImageMagick&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find ./static -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*.png&amp;#39;&lt;/span&gt; | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read line; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; convert -resize 1280x1280 $line $line; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Combine and convert list of images into a single PDF&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convert IMG_00&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;09..18&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;.JPG IMG_0025.JPG IMG_00&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;19..20&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;.JPG IMG_0026.JPG IMG_00&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;21..24&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;.JPG Final-Doc.pdf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;jq: Length of array&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[&amp;#34;123&amp;#34;, &amp;#34;567&amp;#34;, &amp;#34;abc&amp;#34;]&amp;#39;&lt;/span&gt; | jq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;. | length&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Shell: Pass contents of clipboard as file descriptor. It&amp;rsquo;ll work with apps expecting file argument.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ command &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;pbpaste&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Convert: Resize image&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ convert -quality 75% -resize 40x40 twitter.png twitter-icn.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Ctrl X-E to quickly edit current command&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/Uin5cYqY7y8?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://comby.dev/docs/get-started&#34;&gt;Comby&lt;/a&gt; examples&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://comby.live/index.html#%7B%22source%22:%22request.config(&#39;./base.json&#39;)%5Cnrequest.get(&#39;https://api.com/users&#39;)%5Cnrequest.post(&#39;https://api.com/users&#39;)%5Cn%22,%22match%22:%22request.:%5Bmethod%5D(:%5Barg1%5D)%22,%22rule%22:%22where%20:%5Bmethod%5D%20!=%20%5C%22config%5C%22%22,%22rewrite%22:%22request(%7B%20url:%20:%5Barg1%5D,%20method:%20&#39;:%5Bmethod%5D&#39;%20%7D)%22,%22language%22:%22.generic%22,%22substitution_kind%22:%22in_place%22,%22id%22:0%7D&#34;&gt;Refactor request API&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Testing</title>
      <link>//localhost:1313/notes/testing/</link>
      <pubDate>Sun, 19 Dec 2021 15:46:00 +0000</pubDate>
      <guid>//localhost:1313/notes/testing/</guid>
      <description>&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Using helium - a Selenium API wrapper</title>
      <link>//localhost:1313/posts/1639863087-python-selenium/</link>
      <pubDate>Sun, 19 Dec 2021 12:23:12 +0000</pubDate>
      <guid>//localhost:1313/posts/1639863087-python-selenium/</guid>
      <description>&lt;p&gt;Here is a quick example to use &lt;a href=&#34;https://github.com/mherrmann/selenium-python-helium&#34;&gt;Helium&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/2021/12/516002003606105.gif&#34; alt=&#34;Helium&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;steps&#34;&gt;Steps:&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Install dependencies using pip or add it to &lt;code&gt;requirements.txt&lt;/code&gt; and run &lt;code&gt;pip3 install -r requirements.txt&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 install helium&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip3 install -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Create a python file and paste the following code.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Demonstrates how to use helium to automate a web browser.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; helium &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; start_firefox&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_firefox()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute_script(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;window.alert(&amp;#39;Hello World&amp;#39;)&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here I&amp;rsquo;m using &lt;code&gt;Firefox&lt;/code&gt; but it is easy to switch to &lt;code&gt;Chrome&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wiremock: How to match multiple urls in a single mapping</title>
      <link>//localhost:1313/posts/1639311183-wiremock-match-multiple-urls/</link>
      <pubDate>Sun, 12 Dec 2021 12:13:25 +0000</pubDate>
      <guid>//localhost:1313/posts/1639311183-wiremock-match-multiple-urls/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://wiremock.org/&#34;&gt;Wiremock&lt;/a&gt; is a tool to mock HTTP APIs.&#xA;You can set up Stubs in Wiremock by using their API or by calling the admin API over HTTP.&#xA;Usually it is used as part of a test suite but here I&amp;rsquo;m running the &lt;a href=&#34;http://wiremock.org/docs/running-standalone/&#34;&gt;standalone&lt;/a&gt; Wiremock server.&lt;/p&gt;&#xA;&lt;p&gt;Once the jar file is downloaded, you can start the server by running the following command:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -jar wiremock-jre8-standalone-2.32.0.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here we are setting multiple URLs to match in a single mapping.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Export Reading list from Safari</title>
      <link>//localhost:1313/posts/1638735561-safari-export-bookmarks/</link>
      <pubDate>Sun, 05 Dec 2021 20:19:36 +0000</pubDate>
      <guid>//localhost:1313/posts/1638735561-safari-export-bookmarks/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;open ~/Library/Safari&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Copy the Safari bookmarks file to your desktop.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/1638735561-safari-export-bookmarks.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Then run the following command to get the list of links&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;plutil -convert xml1 -o - Bookmarks.plist | grep -E  -o &amp;#39;&amp;lt;string&amp;gt;http[s]{0,1}://.*&amp;lt;/string&amp;gt;&amp;#39; | grep -v icloud | sed -E &amp;#39;s/&amp;lt;\/{0,1}string&amp;gt;//g&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://apple.stackexchange.com/questions/24864/is-it-possible-to-export-safaris-reading-list-on-safari-5-1#62431&#34;&gt;https://apple.stackexchange.com/questions/24864/is-it-possible-to-export-safaris-reading-list-on-safari-5-1#62431&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[2020-11-21] ETFs momentum report</title>
      <link>//localhost:1313/posts/1605953563-etfs-momentum-report/</link>
      <pubDate>Sat, 21 Nov 2020 10:13:22 +0000</pubDate>
      <guid>//localhost:1313/posts/1605953563-etfs-momentum-report/</guid>
      <description>&lt;h2 id=&#34;etf-momentum-report&#34;&gt;ETF Momentum Report&lt;/h2&gt;&#xA;&lt;p&gt;Top 20 Macro ETFs based on momentum on week ending 2020-11-21&lt;/p&gt;&#xA;&lt;h3 id=&#34;xli-industrials&#34;&gt;XLI (Industrials)&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20201121101758295_1402508767.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Metric&lt;/th&gt;&#xA;          &lt;th&gt;Value&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Momentum&lt;/td&gt;&#xA;          &lt;td&gt;20.83&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3 Months Gain&lt;/td&gt;&#xA;          &lt;td&gt;11.04 times&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Yearly Gain&lt;/td&gt;&#xA;          &lt;td&gt;1.76 times&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Y Finance&lt;!-- raw HTML omitted --&gt;&#xA;| &lt;!-- raw HTML omitted --&gt;Y Chart&lt;!-- raw HTML omitted --&gt;&#xA;| &lt;!-- raw HTML omitted --&gt;BarChart&lt;!-- raw HTML omitted --&gt;&#xA;| &lt;!-- raw HTML omitted --&gt;ChartMill&lt;!-- raw HTML omitted --&gt;&#xA;| &lt;!-- raw HTML omitted --&gt;StockInvest&lt;!-- raw HTML omitted --&gt;&#xA;| &lt;!-- raw HTML omitted --&gt;TradingView&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Orkestra - Support for Environments</title>
      <link>//localhost:1313/posts/1591776555-orkestra-day-3/</link>
      <pubDate>Mon, 15 Jun 2020 20:33:16 +0000</pubDate>
      <guid>//localhost:1313/posts/1591776555-orkestra-day-3/</guid>
      <description>&lt;p&gt;Environment is a major core feature for Orkestra. In the latest changes, I implemented support for configuring environments.&lt;/p&gt;&#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/namuan/orkestra/issues/5&#34;&gt;Github Issue for Environments&lt;/a&gt; for development log&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200615212422497_1766114353.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here is a demo of the partial functionality implemented.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200615212534851_564962037.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Orkestra Day 2 - MVC and Toolbar menu button</title>
      <link>//localhost:1313/posts/1591735673-orkestra-day-2/</link>
      <pubDate>Tue, 09 Jun 2020 21:10:56 +0000</pubDate>
      <guid>//localhost:1313/posts/1591735673-orkestra-day-2/</guid>
      <description>&lt;p&gt;Add a couple of things since last time.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create a &amp;ldquo;Default&amp;rdquo; folder and populate on start up&lt;/li&gt;&#xA;&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add a toolbar button menu to add different step type&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200609215034435_860978249.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;As part of updating folders, I refactored a bunch of things.&#xA;There is now an AppWorld which kinda holds a number of things.&#xA;It provides access to data stores and other infrastructure components.&lt;/p&gt;&#xA;&lt;p&gt;Here is a how folders update when the application starts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Orkestra Day 1</title>
      <link>//localhost:1313/posts/1591300238_orkestra_day1/</link>
      <pubDate>Sat, 06 Jun 2020 15:13:42 +0000</pubDate>
      <guid>//localhost:1313/posts/1591300238_orkestra_day1/</guid>
      <description>&lt;p&gt;Started working on the core shell of the application. Here is what it looks like after a session in Qt Designer&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/WKPjBfViJ_c?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;The Notes scratch pad is functional with persistence.&#xA;The toolbar has a configuration button which opens up a dialog with a couple of tabs.&lt;/p&gt;&#xA;&lt;p&gt;Here is the walkthrough video of using Qt Creator to develop this layout&lt;/p&gt;</description>
    </item>
    <item>
      <title>Publishing Notebooks with HttpRider</title>
      <link>//localhost:1313/posts/1591444366-httprider-notebook-publishing/</link>
      <pubDate>Sat, 06 Jun 2020 11:53:52 +0000</pubDate>
      <guid>//localhost:1313/posts/1591444366-httprider-notebook-publishing/</guid>
      <description>&lt;p&gt;Preliminary design document for implementing notebooks with HttpRider.&lt;/p&gt;&#xA;&lt;p&gt;This feature enables the user to publish interactive API notebooks.&#xA;These interactive API notebooks can be used to document a scenario where an individual API call doesn&amp;rsquo;t make sense without the context around it.&lt;/p&gt;&#xA;&lt;h4 id=&#34;features&#34;&gt;Features&lt;/h4&gt;&#xA;&lt;p&gt;[] Publish API call description in Markdown format&lt;/p&gt;&#xA;&lt;p&gt;[] Publish API call as curl commands&lt;/p&gt;&#xA;&lt;p&gt;[] Allow user of the notebook to run curl commands interactively&lt;/p&gt;&#xA;&lt;p&gt;[] Track the response of the commands and use the output to chain other calls&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 15: Bash/Zsh function to export SVG diagrams using PlantUML</title>
      <link>//localhost:1313/posts/1591343684-plantuml-svg-export/</link>
      <pubDate>Fri, 05 Jun 2020 07:47:18 +0000</pubDate>
      <guid>//localhost:1313/posts/1591343684-plantuml-svg-export/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at creating a simple Bash/Zsh function to export SVG diagrams using PlantUML.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PlantUML: &lt;a href=&#34;http://sourceforge.net/projects/plantuml/files/plantuml.jar/download&#34;&gt;Direct Download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Place it where you can easily refer to it.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nmn$ ls -l $TOOLS_HOME/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--@ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nmn  staff  &lt;span style=&#34;color:#ae81ff&#34;&gt;7985304&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; Nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; /Users/nmn/tools/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we&amp;rsquo;ll create a function and put that in bash/zsh profile so that it can be loaded automatically on each session.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plantsvg&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cat &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; | java -DPLANTUML_LIMIT_SIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; -jar $TOOLS_HOME/plantuml/plantuml.jar -tsvg -pipe &amp;gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.svg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    open -a Firefox.app &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;NAME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;.svg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have it setup, this will export the provided plantuml file to an SVG image and open it up using Firefox.&#xA;You can change the application used to open this SVG by replacing &lt;code&gt;Firefox.app&lt;/code&gt; with the another application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 14: Handy Bash/Zsh function to generate PlantUML diagrams</title>
      <link>//localhost:1313/posts/1591301414-plantuml-shortcut/</link>
      <pubDate>Thu, 04 Jun 2020 22:11:58 +0000</pubDate>
      <guid>//localhost:1313/posts/1591301414-plantuml-shortcut/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at creating a simple Bash/Zsh function wrapping PlantUML so that we can use it from anywhere.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PlantUML: &lt;a href=&#34;http://sourceforge.net/projects/plantuml/files/plantuml.jar/download&#34;&gt;Direct Download&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Download it where you can easily refer to it.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nmn$ ls -l $TOOLS_HOME/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--@ &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; nmn  staff  &lt;span style=&#34;color:#ae81ff&#34;&gt;7985304&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; Nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt; /Users/nmn/tools/plantuml/plantuml.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, we&amp;rsquo;ll create a function and put that in bash/zsh profile so that it can be loaded automatically on each session.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plantuml&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NAME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cat $NAME | java -DPLANTUML_LIMIT_SIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8192&lt;/span&gt; -jar $TOOLS_HOME/plantuml/plantuml.jar -pipe &amp;gt; $NAME.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    open $NAME.png&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then you can call this function with the file name.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using EasyRandom with Spring Framework</title>
      <link>//localhost:1313/posts/029-easy-random-spring-boot/</link>
      <pubDate>Thu, 14 May 2020 23:45:43 +0100</pubDate>
      <guid>//localhost:1313/posts/029-easy-random-spring-boot/</guid>
      <description>&lt;p&gt;Tired of creating objects in tests. Try using EasyRandom library. Here is how easily you can add it to a Spring Java project&lt;/p&gt;&#xA;&lt;h4 id=&#34;step-1-add-gradlemaven-dependency&#34;&gt;Step 1: Add gradle/maven dependency&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/org.jeasy/easy-random&#34;&gt;https://mvnrepository.com/artifact/org.jeasy/easy-random&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200514225404481_20190134.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;step-2-declare-it-in-test&#34;&gt;Step 2: Declare it in test&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200514230728850_1337135243.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;step-3-use-it-to-generate-random-data-objects&#34;&gt;Step 3: Use it to generate random data objects&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200514230800345_1963146893.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;step-4-&#34;&gt;Step 4: 😍&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200514230639150_1516619298.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;tips&#34;&gt;Tips:&lt;/h4&gt;&#xA;&lt;h4 id=&#34;random-initial-seed&#34;&gt;Random initial seed&lt;/h4&gt;&#xA;&lt;p&gt;In the default setup, EasyRandom uses a default seed value to generate randam data.&#xA;Although it is quite simple to initiate EasyRandom with a random seed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gradle custom task for selectively running tests</title>
      <link>//localhost:1313/posts/028-gradle-contract-tests/</link>
      <pubDate>Fri, 08 May 2020 15:00:06 +0100</pubDate>
      <guid>//localhost:1313/posts/028-gradle-contract-tests/</guid>
      <description>&lt;p&gt;&lt;em&gt;Q: How do I define contract tests which can be run on-demand from Gradle while ignoring them from unit test runs?&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Here, I&amp;rsquo;ll add a test which is ignored when running &lt;code&gt;./gradlew test&lt;/code&gt; but it can be triggered when needed (eg. from a separate Jenkins Job).&lt;/p&gt;&#xA;&lt;p&gt;The current directory structure look this&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/20200508151905944_642229617.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The first step is to exclude all the tests under contracts/&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;exclude&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**/contracts/*.*&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then we&amp;rsquo;ll define another Gradle task so that contract tests can be executed on demand&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java 8&#43;: Using Collectors as reducers</title>
      <link>//localhost:1313/posts/027-java-collectors-reducer/</link>
      <pubDate>Sun, 19 Apr 2020 13:05:38 +0100</pubDate>
      <guid>//localhost:1313/posts/027-java-collectors-reducer/</guid>
      <description>&lt;p&gt;A simple example to show how to use Collectors as reducers in Java 8+.&lt;/p&gt;&#xA;&lt;p&gt;Say, we have a simple &lt;code&gt;Transaction&lt;/code&gt; class consists of the currency and the value of the transaction.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Transaction&lt;/code&gt; class is sprinkled with Lombok annotation to make use of Builder.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Value&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Builder&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Transaction&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        String currency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And given the following set of data:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;GBP Transactions = 2&lt;/strong&gt;,&#xA;&lt;strong&gt;USD Transactions = 1&lt;/strong&gt;,&#xA;&lt;strong&gt;CAD Transactions = 1&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 13: Using command line functions to simplify find command</title>
      <link>//localhost:1313/posts/026-tooltip-13-cli-functions-find/</link>
      <pubDate>Sun, 16 Feb 2020 08:06:04 +0000</pubDate>
      <guid>//localhost:1313/posts/026-tooltip-13-cli-functions-find/</guid>
      <description>&lt;p&gt;In this tooltip, we&amp;rsquo;ll create a simple function to find files in the current directory tree using find.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/M9OQjZ5xFYw?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>One Page :: Simple ScratchPad</title>
      <link>//localhost:1313/projects/one-page/</link>
      <pubDate>Thu, 13 Feb 2020 18:53:43 +0000</pubDate>
      <guid>//localhost:1313/projects/one-page/</guid>
      <description>&lt;p&gt;OnePage is a simple cross-platform scratchpad.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/one-page-releases/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/namuan/one-page-releases?label=macos&#34; alt=&#34;MacOS Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/one-page-releases/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/namuan/one-page-releases?label=windows&#34; alt=&#34;Windows Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/one-page/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/namuan/one-page?label=Linux&#34; alt=&#34;Linux Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/namuan/one-page/blob/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/namuan/one-page.svg&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/namuan/one-page&#34;&gt;&lt;img src=&#34;https://travis-ci.com/namuan/one-page.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/deskriders_twt&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/deskriders_twt.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;👉 &lt;a href=&#34;https://github.com/namuan/one-page&#34;&gt;https://github.com/namuan/one-page&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/one-page-cover-image.png&#34; alt=&#34;DevRider Cover Image&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;features&#34;&gt;Features&lt;/h3&gt;&#xA;&lt;p&gt;🚀 Only allows you to create a single note&lt;/p&gt;&#xA;&lt;p&gt;🚀 No possibility of creating multiple notes so your notes are always in front&lt;/p&gt;&#xA;&lt;p&gt;🚀 Single App across platforms&lt;/p&gt;&#xA;&lt;p&gt;🚀 Remove any formatting style&lt;/p&gt;&#xA;&lt;p&gt;🚀 Auto-save notes&lt;/p&gt;&#xA;&lt;h4 id=&#34;downloads&#34;&gt;Downloads&lt;/h4&gt;&#xA;&lt;p&gt;Downloads are currently available for MacOS and Windows.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/one-page-releases/releases/latest&#34;&gt;Mac OS App&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/one-page-releases/releases/latest&#34;&gt;Windows App&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/one-page/releases/latest&#34;&gt;Linux from Source&lt;/a&gt;.&#xA;Please check &lt;a href=&#34;https://github.com/namuan/one-page/blob/master/README.md#development&#34;&gt;README.md&lt;/a&gt; for instructions&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 12 : Using svgo to optimize SVG files</title>
      <link>//localhost:1313/posts/025-tooltip-12-svgo-optimize-svg-files/</link>
      <pubDate>Mon, 10 Feb 2020 08:06:04 +0000</pubDate>
      <guid>//localhost:1313/posts/025-tooltip-12-svgo-optimize-svg-files/</guid>
      <description>&lt;p&gt;In this short video, we&amp;rsquo;ll use &amp;lsquo;svgo&amp;rsquo; tool to optimise SVG files. In this case, it reduces the SVG size by almost 50%.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/oBcz2M6gXQ4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;br&gt;&#xA;👉 Github: &lt;a href=&#34;https://github.com/svg/svgo&#34;&gt;https://github.com/svg/svgo&lt;/a&gt;&lt;br&gt;&#xA;👉 NPM: &lt;a href=&#34;https://npmjs.org/package/svgo&#34;&gt;https://npmjs.org/package/svgo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 11 : Using lsof to list all open ports and process identifiers</title>
      <link>//localhost:1313/posts/024-tooltip-11-lsof-open-ports-pids/</link>
      <pubDate>Fri, 07 Feb 2020 08:06:04 +0000</pubDate>
      <guid>//localhost:1313/posts/024-tooltip-11-lsof-open-ports-pids/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at &amp;rsquo;lsof&amp;rsquo;, a simple tool on MacOS to list all open ports and get their process identifiers.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/WoPZu9_RQe0?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&#xA;👉 ManPage: &lt;a href=&#34;https://linux.die.net/man/8/lsof&#34;&gt;https://linux.die.net/man/8/lsof&lt;/a&gt;&#xA;👉 Reference to other commands: &lt;a href=&#34;https://www.howtoforge.com/linux-lsof-command/&#34;&gt;https://www.howtoforge.com/linux-lsof-command/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 10 : Using seq to generate padded numbers</title>
      <link>//localhost:1313/posts/023-tooltip-10-seq-padded-numbers/</link>
      <pubDate>Thu, 06 Feb 2020 08:06:04 +0000</pubDate>
      <guid>//localhost:1313/posts/023-tooltip-10-seq-padded-numbers/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll use &amp;lsquo;seq&amp;rsquo; command line tool to generate padded numbers.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/fsjUghQCLoY?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 9 : Combining JSON attributes using jq</title>
      <link>//localhost:1313/posts/021-tooltip-9-constructing-new-structure-jq/</link>
      <pubDate>Wed, 05 Feb 2020 08:06:04 +0000</pubDate>
      <guid>//localhost:1313/posts/021-tooltip-9-constructing-new-structure-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll continue looking at jq to combine (first name and last name) attributes of a JSON object and then build a new attribute (full name).&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/mjGh5gjJtqo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 8 : Extracting Array Item using jq</title>
      <link>//localhost:1313/posts/020-tooltip-8-extracting-items-contains-jq/</link>
      <pubDate>Tue, 04 Feb 2020 08:05:44 +0000</pubDate>
      <guid>//localhost:1313/posts/020-tooltip-8-extracting-items-contains-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll continue looking at jq to extract a nested array item along with using the &amp;lsquo;contains&amp;rsquo; function to partially match an attribute value.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/OR88RAyiTiE?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip 7: Selecting nested array items using jq</title>
      <link>//localhost:1313/posts/019-tooltip-7-selecting-nested-array-items-jq/</link>
      <pubDate>Mon, 03 Feb 2020 08:05:07 +0000</pubDate>
      <guid>//localhost:1313/posts/019-tooltip-7-selecting-nested-array-items-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll further into jq syntax and selecting nested items using jq filtering.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/jAuMRjBDAMo?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;👉 Although &lt;code&gt;jq&lt;/code&gt; is really powerful but watch out for over using it. It is probably more easier to achieve the same thing in a proper language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>January 2020 Progress Report</title>
      <link>//localhost:1313/posts/022-january2020-progress-report/</link>
      <pubDate>Sun, 02 Feb 2020 09:10:43 +0000</pubDate>
      <guid>//localhost:1313/posts/022-january2020-progress-report/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/022/jan2020-github.png&#34; alt=&#34;Github Contributions&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;🚀 Started &lt;a href=&#34;https://www.deskriders.dev/projects/dev-rider/&#34;&gt;DevRider&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🚀 Created Windows Release Package for HttpRider (&lt;a href=&#34;https://www.deskriders.dev/projects/http-rider/&#34;&gt;https://www.deskriders.dev/projects/http-rider/&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;🚀 Started &lt;a href=&#34;https://www.deskriders.dev/projects/mind-books-club/&#34;&gt;MindBooks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;🚀 Started new series on &lt;a href=&#34;https://www.deskriders.dev/categories/tooltips/&#34;&gt;Tooltips&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;february-goals&#34;&gt;February Goals:&lt;/h4&gt;&#xA;&lt;p&gt;📝 Add links to MindBook to buy books&lt;/p&gt;&#xA;&lt;p&gt;📝 Promote Mindbooks on ProductHunt, IndieHackers and other channels&lt;/p&gt;&#xA;&lt;p&gt;📝 Publish around 30 tooltips&lt;/p&gt;&#xA;&lt;p&gt;📝 Move tooltips to its own website&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 6 :: Filtering JSON arrays with jq</title>
      <link>//localhost:1313/posts/018-tooltip-6-filtering-json-arrays-jq/</link>
      <pubDate>Sun, 02 Feb 2020 07:45:25 +0000</pubDate>
      <guid>//localhost:1313/posts/018-tooltip-6-filtering-json-arrays-jq/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;jq&lt;/code&gt; to filter JSON arrays.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;jq: &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;https://stedolan.github.io/jq/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/_rNmyYkZdUc?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;👉 Although &lt;code&gt;jq&lt;/code&gt; is really powerful but watch out for over using it. It is probably more easier to achieve the same thing in a proper language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 5 :: Converting CSV to JSON using csvkit</title>
      <link>//localhost:1313/posts/017-tooltip-5-converting-csv-to-json/</link>
      <pubDate>Sat, 01 Feb 2020 08:00:21 +0000</pubDate>
      <guid>//localhost:1313/posts/017-tooltip-5-converting-csv-to-json/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;csvjson&lt;/code&gt; utility from &lt;code&gt;csvkit&lt;/code&gt; to convert CSV to JSON.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;csvkit: &lt;a href=&#34;https://csvkit.readthedocs.io/en/latest/&#34;&gt;https://csvkit.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(sudo) pip install csvkit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/OQLJyefim4o?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 4 :: Converting JSON to CSV using csvkit</title>
      <link>//localhost:1313/posts/016-tooltip-4-converting-json-to-csv/</link>
      <pubDate>Fri, 31 Jan 2020 08:00:06 +0000</pubDate>
      <guid>//localhost:1313/posts/016-tooltip-4-converting-json-to-csv/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;in2sec&lt;/code&gt; utility from &lt;code&gt;csvkit&lt;/code&gt; to convert JSON to CSV.&lt;/p&gt;&#xA;&lt;h4 id=&#34;requirements&#34;&gt;Requirements:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;csvkit: &lt;a href=&#34;https://csvkit.readthedocs.io/en/latest/&#34;&gt;https://csvkit.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(sudo) pip install csvkit&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/QXhhKyIi900?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;👉 Used &lt;a href=&#34;http://next.json-generator.com&#34;&gt;http://next.json-generator.com&lt;/a&gt; to generate JSON document&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 3 :: Reading files line by line on command line</title>
      <link>//localhost:1313/posts/015-tooltip-3-reading-file-line-by-line/</link>
      <pubDate>Thu, 30 Jan 2020 09:24:27 +0000</pubDate>
      <guid>//localhost:1313/posts/015-tooltip-3-reading-file-line-by-line/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; loop to process each line in a file.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/qrn3ZoKjuV4?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 2 :: Simple Maths on command line using bc</title>
      <link>//localhost:1313/posts/014-tooltip-2-simple-maths-bc/</link>
      <pubDate>Wed, 29 Jan 2020 08:38:45 +0000</pubDate>
      <guid>//localhost:1313/posts/014-tooltip-2-simple-maths-bc/</guid>
      <description>&lt;p&gt;In this short clip, we&amp;rsquo;ll look at using a simple command line tool &lt;code&gt;bc&lt;/code&gt; to basic maths.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/BVONg7wezLg?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;Notes 📝:&lt;/p&gt;&#xA;&lt;p&gt;👉 Tested on MacOS Mojave but should work on earlier versions and all flavours of Linux&lt;/p&gt;&#xA;&lt;p&gt;References:&lt;/p&gt;&#xA;&lt;p&gt;⎘ &lt;a href=&#34;https://fedoramagazine.org/bc-command-line-calculator/&#34;&gt;https://fedoramagazine.org/bc-command-line-calculator/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tooltip # 1 :: Creating command line launcher for IntelliJ products</title>
      <link>//localhost:1313/posts/013-tooltip-1-creating-intellij-launcher/</link>
      <pubDate>Tue, 28 Jan 2020 16:38:45 +0000</pubDate>
      <guid>//localhost:1313/posts/013-tooltip-1-creating-intellij-launcher/</guid>
      <description>&lt;p&gt;This is hopefully first of many (tool)tips where I create a very short ( ~ 30sec -&amp;gt; 1min) video 📹covering a specific task.&lt;/p&gt;&#xA;&lt;p&gt;In this first video, we&amp;rsquo;ll look at creating a command line launcher for IntelliJ.&#xA;Although this is created using IntelliJ IDEA but the same option should be available in WebStorm, PhpStorm, PyCharm etc.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/gOb_3MK8Y7k?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;</description>
    </item>
    <item>
      <title>A Simple setup to remember one-liners/code snippets</title>
      <link>//localhost:1313/posts/012-keeping-snippets/</link>
      <pubDate>Mon, 27 Jan 2020 10:13:04 +0000</pubDate>
      <guid>//localhost:1313/posts/012-keeping-snippets/</guid>
      <description>&lt;p&gt;Here is a simple setup explaining a comment I made on &lt;a href=&#34;https://www.reddit.com/r/datascience/comments/euad2v/how_do_you_make_sure_a_tool_you_learned_in_the/ffo9bvt&#34;&gt;Reddit&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;All I have is a notes.txt under my home directory where the snippets (one-liners) are stored in the following format.&#xA;Note that I don&amp;rsquo;t store block of code or longer text here as they&amp;rsquo;ll become difficult to search.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;find . -type f -name &amp;#39;*.txt&amp;#39; -exec sed -i &amp;#39;&amp;#39; s/this/that/g {} + # search and replace sed find&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It starts with the command then # and a brief comment on what it does.&lt;/p&gt;</description>
    </item>
    <item>
      <title>January Releases for Deskrider Tools</title>
      <link>//localhost:1313/posts/011-deskrider-january-releases/</link>
      <pubDate>Sun, 26 Jan 2020 17:21:38 +0000</pubDate>
      <guid>//localhost:1313/posts/011-deskrider-january-releases/</guid>
      <description>&lt;p&gt;Here are the January releases for HttpRider and DeskRider.&lt;/p&gt;&#xA;&lt;h4 id=&#34;httprider&#34;&gt;HttpRider&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;MacOS&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/http-rider-osx/releases/download/0.6.0/HttpRider-0.6.0-macOS.dmg&#34;&gt;Download for Mac&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Windows releases are still pending.&#xA;Looks like I may have to switch to PyInstaller from py2app/py2exe.&#xA;Hoping to finish it over the coming week.&lt;/p&gt;&#xA;&lt;h4 id=&#34;devrider&#34;&gt;DevRider&lt;/h4&gt;&#xA;&lt;p&gt;&lt;strong&gt;MacOS&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/dev-rider-osx/releases/download/0.2.0/devrider-0.2.0.zip&#34;&gt;Download for Mac&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/dev-rider-win/releases/download/0.2.0/devrider-0.2.0.zip&#34;&gt;Download for Windows&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing DevRider :: One Desktop App for Common Development Tools</title>
      <link>//localhost:1313/posts/010-introducing-devrider/</link>
      <pubDate>Sat, 25 Jan 2020 19:05:42 +0000</pubDate>
      <guid>//localhost:1313/posts/010-introducing-devrider/</guid>
      <description>&lt;p&gt;There is a serious problem with the state of simple development tools on the internet.&lt;/p&gt;&#xA;&lt;p&gt;Most of the websites providing simple encoders/decoders/formatters/prettifiers are filled with ads and popups which makes it annoying and risky to use.&lt;/p&gt;&#xA;&lt;p&gt;And then there is also a huge problem with privacy and leaking any private data that is used on any of these websites.&lt;/p&gt;&#xA;&lt;p&gt;Although it is impossible to replace them altogether, let me introduce you to &lt;a href=&#34;//localhost:1313/projects/dev-rider/&#34;&gt;DevRider&lt;/a&gt;, a new open source to provide some of the common tools in an extensible desktop application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Random (To be sorted)</title>
      <link>//localhost:1313/notes/to-sort/</link>
      <pubDate>Mon, 20 Jan 2020 09:45:05 +0000</pubDate>
      <guid>//localhost:1313/notes/to-sort/</guid>
      <description>&lt;h3 id=&#34;websites&#34;&gt;Websites&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Amazon Machine learning courses -&amp;gt; &lt;a href=&#34;https://www.amazon.science/latest-news/machine-learning-course-free-online-from-amazon-machine-learning-university&#34;&gt;https://www.amazon.science/latest-news/machine-learning-course-free-online-from-amazon-machine-learning-university&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Simple but very useful website to format Markdown tables -&amp;gt; &lt;a href=&#34;http://markdowntable.com&#34;&gt;http://markdowntable.com&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Publishing blog/documentation using MKdocs -&amp;gt; &lt;a href=&#34;https://github.com/tiangolo/dockerswarm.rocks&#34;&gt;https://github.com/tiangolo/dockerswarm.rocks&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://awslabs.github.io/smithy/quickstart.html&#34;&gt;https://awslabs.github.io/smithy/quickstart.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Smithy is an interface definition language and set of tools that allows developers to build clients and servers in multiple languages.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Alfred update script -&amp;gt; &lt;a href=&#34;https://github.com/sballin/alfred-search-notes-app/blob/master/update.py&#34;&gt;https://github.com/sballin/alfred-search-notes-app/blob/master/update.py&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;PlantUml Cheat Sheet -&amp;gt; &lt;a href=&#34;https://ogom.github.io/draw_uml/plantuml/&#34;&gt;https://ogom.github.io/draw_uml/plantuml/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis -&amp;gt; &lt;a href=&#34;https://gchq.github.io/CyberChef/&#34;&gt;https://gchq.github.io/CyberChef/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Http3 Book -&amp;gt; &lt;a href=&#34;https://http3-explained.haxx.se/en/&#34;&gt;https://http3-explained.haxx.se/en/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>News Rider :: Personalised News</title>
      <link>//localhost:1313/projects/news-rider/</link>
      <pubDate>Sat, 18 Jan 2020 09:27:57 +0000</pubDate>
      <guid>//localhost:1313/projects/news-rider/</guid>
      <description>&lt;p&gt;Personalised News Delivery. Built using Python/Ansible and deployed on DigitalOcean/RaspberryPi&lt;/p&gt;&#xA;&lt;p&gt;👉 &lt;a href=&#34;https://github.com/namuan/news-rider&#34;&gt;NewsRider&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>//localhost:1313/products/</link>
      <pubDate>Wed, 15 Jan 2020 10:32:46 +0000</pubDate>
      <guid>//localhost:1313/products/</guid>
      <description>&lt;h2 id=&#34;tradingutils--collection-of-scripts-and-utilities-for-stock-market-analysis-strategies-etcprojectstrading-utils&#34;&gt;&lt;a href=&#34;//localhost:1313/projects/trading-utils/&#34;&gt;TradingUtils :: Collection of scripts and utilities for stock market analysis, strategies etc&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Collection of scripts and utilities for stock market analysis, strategies.&lt;/p&gt;&#xA;&lt;h2 id=&#34;httprider--cross-platform-open-source-desktop-api-clientprojectshttp-rider&#34;&gt;&lt;a href=&#34;//localhost:1313/projects/http-rider/&#34;&gt;HttpRider :: Cross-Platform Open Source Desktop API Client&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;HttpRider is a cross-platfom open souce desktop API client built using Python and PyQt.&#xA;It is a lean alternative to Postman and other tools developed using Electron.&lt;/p&gt;&#xA;&lt;h2 id=&#34;devrider--development-toolsutilities-in-one-placeprojectsdev-rider&#34;&gt;&lt;a href=&#34;//localhost:1313/projects/dev-rider/&#34;&gt;DevRider :: Development Tools/Utilities In One Place&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;p&gt;There is a serious problem with the state of simple development tools on the internet.&#xA;Most of the websites providing simple encoders/decoders/formatters/prettifiers are filled with ads and popups 😷 which makes it difficult and risky to use.&#xA;And then there is also a huge problem with privacy 👀 and leaking any private data that is used on any of these websites.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>//localhost:1313/about/</link>
      <pubDate>Wed, 15 Jan 2020 10:32:46 +0000</pubDate>
      <guid>//localhost:1313/about/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/avatar.png&#34; alt=&#34;Logo&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developing API exchange sharing service - Part II</title>
      <link>//localhost:1313/posts/009-developing-api-exchange-2/</link>
      <pubDate>Fri, 03 Jan 2020 18:51:44 +0000</pubDate>
      <guid>//localhost:1313/posts/009-developing-api-exchange-2/</guid>
      <description>&lt;p&gt;Please check the &lt;a href=&#34;https://dev.to/namuan/developing-api-exchange-sharing-service-part-i-nhp&#34;&gt;previous part&lt;/a&gt; to know the background of this project.&lt;/p&gt;&#xA;&lt;p&gt;In this part, we&amp;rsquo;ll dive into code and deploy a simple API to AWS Lambda and Api Gateway.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll be using Python &lt;a href=&#34;https://palletsprojects.com/p/flask/&#34;&gt;Flask&lt;/a&gt; framework for defining the APIs and &lt;a href=&#34;https://serverless.com&#34;&gt;Serverless framework&lt;/a&gt; to manage the infrastructure and deployment.&lt;/p&gt;&#xA;&lt;p&gt;Please make sure you have Python3 and relatively newer version of nodejs installed and working to follow along.&lt;/p&gt;&#xA;&lt;p&gt;The first step is to create a new project folder and initialise package.json file which will be used to define and install Serverless plugins.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Overlay button on a PyQt5 widget</title>
      <link>//localhost:1313/posts/007-pyqt5-overlay-button-widget/</link>
      <pubDate>Thu, 02 Jan 2020 11:51:10 +0000</pubDate>
      <guid>//localhost:1313/posts/007-pyqt5-overlay-button-widget/</guid>
      <description>&lt;p&gt;This is a short post on how to add a floating button on top of a widget in PyQt5.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/007/6tpq07fmmwo1rt4gadry.gif&#34; alt=&#34;pyqt5_floating_widget&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;First, we&amp;rsquo;ll define the button and the relative positioning.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FloatingButtonWidget&lt;/span&gt;(QtWidgets&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;QPushButton): &lt;span style=&#34;color:#75715e&#34;&gt;#1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, parent):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        super()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(parent)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;paddingLeft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;paddingTop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update_position&lt;/span&gt;(self): &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; hasattr(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parent(), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;viewport&amp;#39;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            parent_rect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parent()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;viewport()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rect()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            parent_rect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parent()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rect()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; parent_rect:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parent_rect&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;paddingLeft&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;paddingTop &lt;span style=&#34;color:#75715e&#34;&gt;#3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setGeometry(x, y, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;width(), self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;height())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;resizeEvent&lt;/span&gt;(self, event): &lt;span style=&#34;color:#75715e&#34;&gt;#2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        super()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resizeEvent(event)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update_position()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mousePressEvent&lt;/span&gt;(self, event): &lt;span style=&#34;color:#75715e&#34;&gt;#4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parent()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;floatingButtonClicked&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;emit()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;Inheriting from QPushButton.&lt;/li&gt;&#xA;&lt;li&gt;Overriding &lt;code&gt;resizeEvent&lt;/code&gt; and updating position of the this button based on the parent position.&lt;/li&gt;&#xA;&lt;li&gt;This will add the button to the top. If you need to place it at the button then use something like &lt;code&gt;parent_rect.height() - self.paddingLeft&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Catching the mouse pressed event and calling an signal on the parent widget.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;With the button defined, we&amp;rsquo;ll embed it in a custom &lt;code&gt;QPlainTextEdit&lt;/code&gt; and define appropriate interfaces for the caller to work with the floating button.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Developing API exchange sharing service - Part I</title>
      <link>//localhost:1313/posts/008-developing-api-exchange-1/</link>
      <pubDate>Wed, 01 Jan 2020 16:51:35 +0000</pubDate>
      <guid>//localhost:1313/posts/008-developing-api-exchange-1/</guid>
      <description>&lt;p&gt;In this series of articles, I&amp;rsquo;ll go through my experience of building a simple Serverless API using &lt;a href=&#34;https://palletsprojects.com/p/flask/&#34;&gt;Flask&lt;/a&gt; python framework and deploying it on &lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt; and API gateway.&lt;/p&gt;&#xA;&lt;p&gt;This API is used from &lt;a href=&#34;https://github.com/namuan/http-rider&#34;&gt;HttpRider&lt;/a&gt; to save API exchanges (request+response).&lt;/p&gt;&#xA;&lt;p&gt;Here is a &lt;a href=&#34;https://printrider.bettercallbots.com/prints/9e4d91c5-4526-471f-8896-79543ccaeb6a&#34;&gt;sample page&lt;/a&gt; generated from HttpRider.&lt;/p&gt;&#xA;&lt;h3 id=&#34;demo&#34;&gt;Demo&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/008/0148au5ftxy2fby8qufj.gif&#34; alt=&#34;Quick Demo&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The service itself consists of two simple APIs.&lt;/p&gt;&#xA;&lt;h4 id=&#34;post-prints&#34;&gt;POST /prints&lt;/h4&gt;&#xA;&lt;p&gt;Saves the HTML encoded in base64 in dynamo database. Once it is saved, it returns the URL of the shared document in the Location header of the response.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Protecting applications with OAuth2 Proxy</title>
      <link>//localhost:1313/posts/005-protecting-applications-oauth2-proxy/</link>
      <pubDate>Sat, 23 Nov 2019 10:47:29 +0000</pubDate>
      <guid>//localhost:1313/posts/005-protecting-applications-oauth2-proxy/</guid>
      <description>&lt;p&gt;Here is a simple guide on protecting a website with social logins supporting OAuth2. It uses an open source &lt;a href=&#34;https://pusher.github.io/oauth2_proxy/&#34;&gt;OAuth2 Proxy&lt;/a&gt; (which is a fork from &lt;a href=&#34;https://github.com/bitly/oauth2_proxy&#34;&gt;Bitly OAuth2 Proxy&lt;/a&gt;) to secure private applications without adding any authentication logic in the application itself.&lt;/p&gt;&#xA;&lt;p&gt;Here, we&amp;rsquo;ll see how to secure the open source version of &lt;a href=&#34;https://httpbin.org&#34;&gt;https://httpbin.org&lt;/a&gt;. Httpbin application itself is open and can be accessed without any authentication.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/005/i1zmqplvv8eq8pzsvfvt.png&#34; alt=&#34;Proxy configuration&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this guide, we will setup a Github OAuth application but the same setup can be easily configured with any other provider. See &lt;a href=&#34;https://pusher.github.io/oauth2_proxy/auth-configuration&#34;&gt;Providers&lt;/a&gt; for different config options.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Performance testing with HttpRider</title>
      <link>//localhost:1313/posts/004-httprider-performance-testing/</link>
      <pubDate>Sat, 16 Nov 2019 16:24:01 +0000</pubDate>
      <guid>//localhost:1313/posts/004-httprider-performance-testing/</guid>
      <description>&lt;p&gt;The title is a bit misleading as &lt;a href=&#34;https://github.com/namuan/http-rider&#34;&gt;HttpRider&lt;/a&gt; can&amp;rsquo;t run performance tests (as of now), however it can be used to generate performance tests using a couple of different approach.&lt;/p&gt;&#xA;&lt;h4 id=&#34;slow-cooker&#34;&gt;Slow cooker:&lt;/h4&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/BuoyantIO/slow_cooker&#34;&gt;SlowCooker&lt;/a&gt; is a command line tool for load testing. &lt;a href=&#34;https://buoyant.io/2016/12/10/slow-cooker-load-testing-for-tough-software/&#34;&gt;Here&lt;/a&gt; is an excellent blog post about the background and difference from other similar tools.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/004/httprider_slowcooker.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Generating code to run slow cooker is as simple as selecting an API call and click on the export button to generate code. Along with the command, you can find brief documentation on command line arguments and output format.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating BDD tests with HttpRider</title>
      <link>//localhost:1313/posts/003-httprider-generating-bdd-tests/</link>
      <pubDate>Mon, 28 Oct 2019 11:30:47 +0000</pubDate>
      <guid>//localhost:1313/posts/003-httprider-generating-bdd-tests/</guid>
      <description>&lt;p&gt;In this post, we&amp;rsquo;ll see how we can easily generate BDD tests with HttpRider.&lt;/p&gt;&#xA;&lt;p&gt;Instead of writing the code behind the REST api calls, we&amp;rsquo;ll use an open source framework called &lt;a href=&#34;https://github.com/apickli/apickli&#34;&gt;Apickli&lt;/a&gt; to do the heavy lifting. Apickli is based on cucumber.js and defines a number of pre-built &lt;a href=&#34;https://github.com/apickli/apickli#gherkin-expressions&#34;&gt;Gherkin expressions&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve also created a &lt;a href=&#34;https://github.com/namuan/apickli_functional_tests&#34;&gt;sample project&lt;/a&gt; using Apicki framework to make it easy to get it up and running.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s start with a few API calls using the &lt;a href=&#34;https://github.com/namuan/http-rider/tree/master/sample&#34;&gt;sample database&lt;/a&gt; provided with source. Once it is loaded, please make sure that you run all the APIs at least once as some of the exporters use the response to generate code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating Runscope monitoring tests with HttpRider</title>
      <link>//localhost:1313/posts/002-httprider-generating-runscope-monitoring-tests/</link>
      <pubDate>Sun, 27 Oct 2019 11:30:15 +0000</pubDate>
      <guid>//localhost:1313/posts/002-httprider-generating-runscope-monitoring-tests/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.runscope.com&#34;&gt;Runscope&lt;/a&gt; (Now Part of &lt;a href=&#34;https://www.blazemeter.com&#34;&gt;BlazeMeter&lt;/a&gt;) is a well known service for API Monitoring. This post covers generating Runscope monitoring tests from &lt;a href=&#34;https://github.com/namuan/http-rider&#34;&gt;HttpRider&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;We start with API definitions in HttpRider, make sure you run them at least once as some of the exporters use the data from the response.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/002/httprider_runscope_1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Along with API definitions, it also generates &lt;a href=&#34;https://www.runscope.com/docs/api-testing/environments/&#34;&gt;Runscope environments&lt;/a&gt; with placeholders for any variables used from environment.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;//localhost:1313/images/002/httprider_runscope_2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Once the tests have successfully finished, click on the export/export all button to display the code generator.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating sequence diagrams with HttpRider</title>
      <link>//localhost:1313/posts/001-httprider-generating-sequence-diagrams/</link>
      <pubDate>Sun, 13 Oct 2019 07:45:14 +0000</pubDate>
      <guid>//localhost:1313/posts/001-httprider-generating-sequence-diagrams/</guid>
      <description>&lt;p&gt;Most tools consider an HTTP API call as a single request but that is not usually the case. An API call is surrounded by a sequence of other APIs which makes it easy to understand the context of the use case.&lt;/p&gt;&#xA;&lt;p&gt;In HttpRider, I&amp;rsquo;ve recently introduced an exporter for sequence diagrams. So a collection of HTTP calls can be easily exported to sequence diagrams using PlantUML/MermaidJS.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/namuan/http-rider&#34; title=&#34;HttpRider&#34;&gt;HttpRider&lt;/a&gt; is an open source cross platform desktop client for working with JSON APIs&lt;/p&gt;</description>
    </item>
    <item>
      <title>KubeRider :: Bundling MacOS release</title>
      <link>//localhost:1313/posts/006-kuberider-bundling-macosx-release/</link>
      <pubDate>Mon, 26 Aug 2019 08:32:55 +0000</pubDate>
      <guid>//localhost:1313/posts/006-kuberider-bundling-macosx-release/</guid>
      <description>&lt;p&gt;In this post, I&amp;rsquo;ll go through what is involved in building a MacOS release package and publishing it on Github from TravisCI.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-1-application-icon&#34;&gt;Step 1: Application Icon&lt;/h3&gt;&#xA;&lt;p&gt;Although it is probably quicker to find/generate a logo from an online service. I decided to create a simple logo to go through the process of creating and converting it in vector drawing.&lt;/p&gt;&#xA;&lt;p&gt;Here is what I ended up using the Paper app on iPad.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
